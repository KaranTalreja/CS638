_id,spoj_solve_rate_normalized,spoj_title,spoj_words,codechef_solve_rate_normalized,codechef_title,codechef_words,ltable_ID,rtable_ID,exact_title_match,diff_in_words_len,jaccard_sim,edit_dist,lr_pred_match
1257,-0.306566246505,CAPPIZZA,"  Brunno Doiuna is very fond of caper pizzas, which he always likes to share with his girlfriend. As she also loves capers, it is of the utmost importance, in order to avoid unnecessary quarrels, to split the pizza into two equally-sized slices in such a way that each half contains exactly the same number of capers. However, most caper pizzas also contain a number of peppercorns, and neither Brunno nor his girlfriend likes them. Therefore, it is also crucial that each of the two halves contain the same number of peppercorns. As you can easily observe, depending on the position of capers and peppercorns on the pizza, it is not always possible to make a straight-line cut into the pizza in such a way that the two slices have the same area and the same number of capers and peppercorns lie in each resulting piece. Your task is to design a program to decide if it is possible to make such a cut or not, knowing the positions of capers and peppercorns.     We will assume that the pizza is circular and is centered at the origin, and is big enough to contain all capers and peppercorns. We also assume that there is an even number of capers and an even number of  peppercorns, and that no cut goes through any of the capers or pepper balls. Additionally, no pair of peppercorns, capers, or a peppercorn and a caper are aligned with the origin, or form an angle of less than 10 6 degrees with the origin.  There can be multiple test cases, one after the other. The first line of a test case contains two even integers c  0 and p  0 (where 2  c + p  30000) separated by a space, the number of capers and peppercorns, respectively. Each of the following c lines describes the position of a caper using two floating point numbers, separated by a space, representing its x and y coordinates. Each of the next p lines holds two floating point numbers, the x and y coordinates of a peppercorn. A blank line follows each test case.  The last line of input will contain 1 1. This marks the end of input  do not write any output for this special last line.     YES for a positive answer, NO otherwise.    Sample Input   2 2
1 1
1 0
0 1
-1 1

2 2
1 1
-1 1
0 1
0.1 -1

-1 -1     Sample Output   NO
YES        Problemsetter: Manuel Abellanas ",-0.208318844396,CDS008,"Brunno Doiuna is very fond of caper pizzas, which he always likes to share with his girlfriend. As she also loves capers, it is of the utmost importance, in order to avoid unnecessary quarrels, to split the pizza into two equally-sized slices in such a way that each half contains exactly the same number of capers. However, most caper pizzas also contain a number of peppercorns, and neither Brunno nor his girlfriend likes them. Therefore, it is also crucial that each of the two halves contain the same number of peppercorns. As you can easily observe, depending on the position of capers and peppercorns on the pizza, it is not always possible to make a straight-line cut into the pizza in such a way that the two slices have the same area and the same number of capers and peppercorns lie in each resulting piece. Your task is to design a program to decide if it is possible to make such a cut or not, knowing the positions of capers and peppercorns.We will assume that the pizza is circular and is centered at the origin, and is big enough to contain all capers and peppercorns. We also assume that there is an even number of capers and an even number of peppercorns, and that no cut goes through any of the capers or pepper balls. Additionally, no pair of peppercorns, capers, or a peppercorn and a caper are aligned with the origin, or form an angle of less than 10-6 degrees with the origin.There can be multiple test cases, one after the other. The first line of a test case contains two even integers c>=0 and p>=0 (where 2<=c + p<=30000) separated by a space, the number of capers and peppercorns, respectively. Each of the following c lines describes the position of a caper using two floating point numbers, separated by a space, representing its x and y coordinates. Each of the next p lines holds two floating point numbers, the x and y coordinates of a peppercorn. A blank line follows each test case.The last line of input will contain `-1 -1'. This marks the end of input -- do not write any output for this special last line.`YES' for a positive answer, `NO' otherwise.",31,2205,0,65,0.802752293578,7,1
1735,6.7178504657,FASHION,"  A fashion show rates participants according to their level of hotness.  Two different fashion shows were organized, one for men and the other for women. A date for the third is yet to be decided ;) .  Now the results of both fashion shows are out.  The participants of both the fashion shows have decided to date each other, but as usual they have difficuly in choosing their partners. The Maximum Match dating serive (MMDS) comes to their rescue and matches them in such a way that that maximizes the hotness bonds for all couples.  If a man has been rated at hotness level x and a women at hotness level y , the value of their hotness bond is x*y .  Both fashion shows contain N participants each. MMDS has done its job and your job is to find the sum of hotness bonds for all the couples that MMDS has proposed.   The first line of the input contains an integer t , the number of test cases. t test cases follow.  Each test case consists of 3 lines:   The first line contains a single integer N (1 N The second line contains N integers separated by single spaces denoting the hotness levels of the men.  The third line contains N integers separated by single spaces denoting the hotness levels of the women.   All hotness ratings are on a scale of 0 to 10.   For each test case output a single line containing a single integer denoting the sum of the hotness bonds for all pairs that MMDS has proposed.  Example   Input: 2
2
1 1
3 2
3
2 3 2
1 3 2 Output: 5
15 ",-0.2011808442,CDSE03," A quiz show rates participants according to their level intelligence. Twodifferent quiz shows were organized, one for boys and the other for girls.
Now the results of both quiz shows are out. The participants of both the showshave decided to date each other, but as usual they have difficulty in choosingtheir partners. The Maximum Match dating service (MMDS) comes to their rescueand matches them in such a way that that maximizes the intelligence bonds forall couples.
If a boy has been rated at intelligence level x and a girl at intelligencelevel y, the value of their intelligence bond is x*y.
Both shows contain N participants each. MMDS has done its job and your job isto find the sum of intelligence bonds for all the couples that MMDS hasproposed. The first line of the input contains an integer t, the number of test cases.t test cases follow.Each test case consists of 3 lines:The first line contains a single integer N (1 <= N <= 1000).The second line contains N integers separated by single spaces denoting the intelligence levels of the boys.The third line contains N integers separated by single spaces denoting the intelligence levels of the girls.
All intelligence ratings are on a scale of 0 to 10.For each test case output a single line containing a single integer denotingthe sum of the intelligence bonds for all pairs that MMDS has proposed.",74,282,0,65,0.573964497041,6,1
1736,6.7178504657,FASHION,"  A fashion show rates participants according to their level of hotness.  Two different fashion shows were organized, one for men and the other for women. A date for the third is yet to be decided ;) .  Now the results of both fashion shows are out.  The participants of both the fashion shows have decided to date each other, but as usual they have difficuly in choosing their partners. The Maximum Match dating serive (MMDS) comes to their rescue and matches them in such a way that that maximizes the hotness bonds for all couples.  If a man has been rated at hotness level x and a women at hotness level y , the value of their hotness bond is x*y .  Both fashion shows contain N participants each. MMDS has done its job and your job is to find the sum of hotness bonds for all the couples that MMDS has proposed.   The first line of the input contains an integer t , the number of test cases. t test cases follow.  Each test case consists of 3 lines:   The first line contains a single integer N (1 N The second line contains N integers separated by single spaces denoting the hotness levels of the men.  The third line contains N integers separated by single spaces denoting the hotness levels of the women.   All hotness ratings are on a scale of 0 to 10.   For each test case output a single line containing a single integer denoting the sum of the hotness bonds for all pairs that MMDS has proposed.  Example   Input: 2
2
1 1
3 2
3
2 3 2
1 3 2 Output: 5
15 ",-0.200869813267,VITC04,"Vibrance rates participants according to their level of hotness. Two different fashion shows were organized, one for men and the other for women. A date for the third is yet to be decided ;) .



Now the results of both fashion shows are out. The participants of both the fashion shows have decided to date each other, but as usual they have difficulty in choosing their partners. The Maximum Match dating service (MMDS) comes to their rescue and matches them in such a way that that maximizes the hotness bonds for all couples.



If a man has been rated at hotness level x and a women at hotness level y, the value of their hotness bond is x*y.



Both fashion shows contain N participants each. MMDS has done its job and your job is to find the sum of hotness bonds for all the couples that MMDS has proposed.The first line of the input contains an integer t, the number of test cases. t test cases follow.


Each test case consists of 3 lines:The first line contains a single integer N (1 ≤ N ≤ 1000).
The second line contains N integers separated by single spaces denoting the hotness levels of the men.
The third line contains N integers separated by single spaces denoting the hotness levels of the women.All hotness ratings are on a scale of 0 to 10.For each test case output a single line containing a single integer denoting the sum of the hotness bonds for all pairs that MMDS has proposed.",74,2885,0,44,0.716129032258,7,1
1856,-0.0365521786432,COINTOSS,"    You have an unbiased coin which you want to keep tossing till you get N consecutive heads. You've already tossed the coin M times already and surprisingly, all tosses resulted in heads. What is the expected number of tosses needed till you get N consecutive heads?  For example, if N = 2 and M = 0. You need to keep tossing the coin till you get 2 consecutive heads. It is not hard to show that on an average, 6 coin tosses are needed.  As another example, if N = 2 and M = 1. You need 2 consecutive heads and have already got 1. In your first toss, if you get get a heads, you are done. Otherwise, you need to keep tossing the coin till you get 2 consecutive heads. The expected number of coin tosses is thus 1 + (0.5 * 0 + 0.5 * 6) = 4.0  Input:  The first line contains the number of cases T. Each of the next T lines contains two numbers N and M.  Output:  Output T lines containing the answer for the corresponding test case. Print the answer rounded to exactly 2 decimal places.  Constraints:  1 <= T <= 100  1 <= N <= 1000  0 <= M <= N  Sample Input:  4  2 0  2 1  3 3  3 2  Sample Output:  6.00  4.00  0.00  8.00  Explanation:  The first two samples are explained above. For the third case, you already have got 3 heads, so you do not need any more tosses.    You have an unbiased coin which you want to keep tossing till you get N consecutive heads. You've already tossed the coin M times already and surprisingly, all tosses resulted in heads. What is the expected number of tosses needed till you get N consecutive heads?    For example, if N = 2 and M = 0. You need to keep tossing the coin till you get 2 consecutive heads. It is not hard to show that on an average, 6 coin tosses are needed.    As another example, if N = 2 and M = 1. You need 2 consecutive heads and have already got 1. In your first toss, if you get get a heads, you are done. Otherwise, you need to keep tossing the coin till you get 2 consecutive heads. The expected number of coin tosses is thus 1 + (0.5 * 0 + 0.5 * 6) = 4.0    Input:  The first line contains the number of cases T. Each of the next T lines contains two numbers N and M.    Output:  Output T lines containing the answer for the corresponding test case. Print the answer rounded to exactly 2 decimal places.    Constraints:  1 <= T <= 100  1 <= N <= 1000  0 <= M <= N    Sample Input:  4  2 0  2 1  3 3  3 2    Sample Output:  6.00  4.00  0.00  8.00    Explanation:  The first two samples are explained above. For the third case, you already have got 3 heads, so you do not need any more tosses.     ",-0.203308897441,SOPC04,"You have an unbiased coin which you want to keep tossing until you get N consecutive heads. You've tossed the coin M times and surprisingly, all tosses resulted in heads. What is the expected number of additional tosses needed until you get N consecutive heads?The first line contains the number of cases T. Each of the next T lines contains two numbers N and M.Output T lines containing the answer for the corresponding test case. Print the answer rounded to exactly 2 decimal places.",102,3241,0,496,0.433070866142,7,1
1903,-0.130034132101,HIGH,"  In some countries building highways takes a lot of time... Maybe that's because there are many possiblities to construct a network of highways and engineers can't make up their minds which one to choose. Suppose we have a list of cities that can be connected directly. Your task is to count how many ways there are to build such a network that between every two cities there exists exactly one path. Two networks differ if there are two cities that are connected directly in the first case and aren't in the second case. At most one highway connects two cities. No highway connects a city to itself. Highways are two-way.   The input begins with the integer t, the number of test cases (equal to about 1000). Then t test
cases follow.
The first line of each test case contains two integers, the number of cities (1  The number of ways to build the network, for every test case in a separate line. Assume that when there is only one city, the answer should be 1. The answer will fit in a signed 64-bit integer.  Example  Sample input: 4
4 5
3 4
4 2
2 3
1 2
1 3

2 1
2 1

1 0

3 3
1 2
2 3
3 1 Sample output: 8
1
1
3 ",-0.204792899978,HIGH,"In some countries building highways takes a lot of time... Maybe that's because there are many possiblities to construct a network of highways and engineers can't make up their minds which one to choose. Suppose we have a list of cities that can be connected directly. Your task is to count how many ways there are to build such a network that between every two cities there exists exactly one path. Two networks differ if there are two cities that are connected directly in the first case and aren't in the second case. At most one highway connects two cities. No highway connects a city to itself. Highways are two-way. A path X-Y-W-A is the same as the path A-Y-W-A.The input is to be read from the standard input of your program. It begins with an integer 't', the number of test cases (equal to about 1000), followed by a new line, followed by the 't' test cases.The first line of each test case contains two integers, the number of cities (1<=n<=12) and the number of direct connections between them. Each next line contains two integers, which are the specific numbers of cities that can be connected. Cities are numbered from 1 to n. Consecutive test cases are separated with one blank line. The last line of input is terminated by a newline.The number of ways to build the network, for every test case in a separate line. Assume that when there is only one city, the answer should be 1. The answer will fit in a signed 64-bit integer.",119,4537,1,50,0.633136094675,0,1
1909,-0.280494860749,IOPC1200,"  It is after years that Dystopian Institute of Technology has got funds for upgrading their computers. However, the people in charge of the upgrade have decided to make this a chance to fill their own pockets rather.  There are N computers in the DIT network, numbered 0 to N-1. Computer 0 is the main server which connects the network to the outer world. Some pairs of the computers are directly connected in the network. For other pair of computers to communicate with each other, they have to do it via some other computer. For example, if there are only 3 computers in the network and the only direct connections are 0-1 and 0-2, then 1 communicates with 2 using 0 as intermediate. There is no limit on the number of intermediate computers to be used for communication between a pair. Now, since the DIT network was built on the principle of minimum expenditure, the N computers have been made pairwise connected by using the minimum number of direct connections - ie, N-1.  The upgrade contractor has decided to not do the work properly but pocket the entire funds instead. However, to show that he has done something, he will rearrange the computers. For example he could move the computer number 3 to where 2 was earlier, 2 to 1, 1 to 3, 4 to 5 and 5 to 4. The computer number 0 is special and cannot be moved. Direct connections between computers depend on the locations though. Hence if there was a direct connection earlier between 3 and 5, it will now be between 1 and 4 (since they have been placed at the locations 3 and 5 were at earlier). However, he has noticed something strange : the new direct connection between computers i and j works if and only if there was a direct connection between i and j earlier. Hence he wants to rearrange the computers in such a way that the pairs of computers which are connected directly now are the same pairs which were connected earlier.  Given the computer network, count the number of ways the computers can be rearranged satisfying the conditions.   The first line of the input contains T, the number of test cases (T  10). Following this are the descriptions of the test cases. Each description starts with a line containing the integer N, the number of computers in the network (1  N  10000). This is followed by N-1 lines, each containing a pair of integers i and j, denoting that computer i is directly connected to computer j. It is assured that these N-1 direct connections will make every pair of computers connected (via intermediates if needed).   For each test case, output the number of rearrangements of the computers. A rearrangement (p 0 ,p 1 ,p 2 ...p N-1 ) of (0,1,2...N-1) is valid if the following conditions are satisfied:   p 0 =0  If there is a direct connection between i and j, there should also be a direct connection between p i and p j   Notice that (0,1,2...N-1) is considered a valid rearrangement of itself. Also, since the answer could be very big, output it modulo 1000000007  Example  Input: 1
6
0 1
0 2
0 3
3 4
3 5 Output: 4 ",-0.207985863641,IOPC1200,"It is after years that Dystopian Institute of Technology has got funds for upgrading their computers. However, the people in charge of the upgrade have decided to make this a chance to fill their own pockets rather.There are N computers in the DIT network, numbered 0 to N-1. Computer 0 is the main server which connects the network to the outer world. Some pairs of the computers are directly connected in the network. For other pair of computers to communicate with each other, they have to do it via some other computer. For example, if there are only 3 computers in the network and the only direct connections are 0-1 and 0-2, then 1 communicates with 2 using 0 as intermediate. There is no limit on the number of intermediate computers to be used for communication between a pair. Now, since the DIT network was built on the principle of minimum expenditure, the N computers have been made pairwise connected by using the minimum number of direct connections - ie, N-1.The upgrade contractor has decided to not do the work properly but pocket the entire funds instead. However, to show that he has done something, he will rearrange the computers. For example he could move the computer number 3 to where 2 was earlier, 2 to 1, 1 to 3, 4 to 5 and 5 to 4. The computer number 0 is special and cannot be moved. Direct connections between computers depend on the locations though. Hence if there was a direct connection earlier between 3 and 5, it will now be between 1 and 4 (since they have been placed at the locations 3 and 5 were at earlier). However, he has noticed something strange : the new direct connection between computers i and j works if and only if there was a direct connection between i and j earlier. Hence he wants to rearrange the computers in such a way that the pairs of computers which are connected directly now are the same pairs which were connected earlier.Given the computer network, count the number of ways the computers can be rearranged satisfying the conditions.The first line of the input contains T, the number of test cases (T ≤ 10). Following this are the descriptions of the test cases. Each description starts with a line containing the integer N, the number of computers in the network (1 ≤ N ≤ 10000). This is followed by N-1 lines, each containing a pair of integers i and j, denoting that computer i is directly connected to computer j. It is assured that these N-1 direct connections will make every pair of computers connected (via intermediates if needed).For each test case, output the number of rearrangements of the computers. A rearrangement (p0,p1,p2...pN-1) of (0,1,2...N-1) is valid if the following conditions are satisfied:p0=0
If there is a direct connection between i and j, there should also be a direct connection between pi and pjNotice that (0,1,2...N-1) is considered a valid rearrangement of itself. Also, since the answer could be very big, output it modulo 1000000007",125,2440,1,47,0.873015873016,0,1
1922,-0.277441684046,IOPC1201,"  The Rubik's cube is perhaps the world's most popular intellectual toy. More than just the joy of solving, there is a lot of mathematics to it too.  Consider a solved Rubik's cube. The six faces of the cube are named FRONT, BACK, UP, DOWN, LEFT and RIGHT respectively. An elementary move of the Rubik's cube is rotating a face by 90 degrees clockwise, 90 degrees anticlockwise or 180 degrees about an axis from the centre of the face to the centre of the cube. Any valid state of the Rubik's cube can be reached by applying these elementary operations one after the other.  An elementary move is denoted in the following fashion. If a given face is rotated by 90 degrees clockwise about the axis passing from the centre of the face to the centre of the cube, the move is denoted by the first letter of the name of the face. If the rotation is anticlockwise by 90 degrees, the letter is followed by an apostrophe ('). If the rotation is by 180 degrees, the letter is followed by a 2.  For example, a 90 degree clockwise rotation of the right face is denoted by R , a 90 degree anticlockwise rotation of the back face by B' and a 180 degree rotation of the top face by U2 . The elementary moves are explained with the help of animations in the ""Face turns"" section of this page . The elementary moves can be combined to get a compound move of the cube. For example, URF2 denotes rotating the top face by 90 degrees clockwise, then the right face by 90 degrees clockwise followed by the front face by 180 degrees.  In this problem you will be given a string describing a sequence of elementary moves on a solved Rubik's cube. Your task is to find out the number of times the sequence should be applied repeatedly to the cube to get back the original cube.   The first line of input gives T, the number of test cases (1T1000). Following this are T lines, each containing a string denoting a sequence of moves on the Rubik's cube. The string will contain only the characters U, D, L, R, F, B, ' and 2, and will be at most 1000 characters long. It is assured to be a valid sequence of elementary moves.   For each test case, output the minimum number of times (1) the move sequence must be applied to a solved Rubik's cube to get back the solved cube again.  Example  Input: 4
R
RR2
RU
R2R'R' Output: 4
4
105
1 ",-0.206945039534,IOPC1201,"The Rubik's cube is perhaps the world's most popular intellectual toy. More than just the joy of solving, there is a lot of mathematics to it too.Consider a solved Rubik's cube. The six faces of the cube are named FRONT, BACK, UP, DOWN, LEFT and RIGHT respectively. An elementary move of the Rubik's cube is rotating a face by 90 degrees clockwise, 90 degrees anticlockwise or 180 degrees about an axis from the centre of the face to the centre of the cube. Any valid state of the Rubik's cube can be reached by applying these elementary operations one after the other.An elementary move is denoted in the following fashion. If a given face is rotated by 90 degrees clockwise about the axis passing from the centre of the face to the centre of the cube, the move is denoted by the first letter of the name of the face. If the rotation is anticlockwise by 90 degrees, the letter is followed by an apostrophe ('). If the rotation is by 180 degrees, the letter is followed by a 2.For example, a 90 degree clockwise rotation of the right face is denoted by R, a 90 degree anticlockwise rotation of the back face by B' and a 180 degree rotation of the top face by U2. The elementary moves are explained with the help of animations in the ""Face turns"" section of this page. The elementary moves can be combined to get a compound move of the cube. For example, URF2 denotes rotating the top face by 90 degrees clockwise, then the right face by 90 degrees clockwise followed by the front face by 180 degrees.In this problem you will be given a string describing a sequence of elementary moves on a solved Rubik's cube. Your task is to find out the number of times the sequence should be applied repeatedly to the cube to get back the original cube.The first line of input gives T, the number of test cases (1≤T≤1000). Following this are T lines, each containing a string denoting a sequence of moves on the Rubik's cube. The string will contain only the characters U, D, L, R, F, B, ' and 2, and will be at most 1000 characters long. It is assured to be a valid sequence of elementary moves.For each test case, output the minimum number of times (≥1) the move sequence must be applied to a solved Rubik's cube to get back the solved cube again.",127,340,1,27,0.839572192513,0,1
2065,-0.255987935925,IOPC1202,"  You are given the coordinates of the vertices of a square in the 2-d plane. All vertex coordinates will be integers.  Now consider all convex quadrilaterals which also have integer coordinates for their vertices such that the midpoints of their edges are the vertices of the original square. Find the sum of areas of all such quadrilaterals.   The first line of input gives T, the number of test cases (1T25000). Following this are the descriptions of the individual testcases. Each testcase consists of four lines, each line containing two space separated integers - the x and y coordinates of a distinct vertex of the square. The coordinate limits are -1000000000x i ,y i 1000000000. It is assured that the four vertices will correspond to a square.   For each testcase output the total area of quadrilaterals with the given property. Since the answer could be very large, give the answer modulo 100000007.  Example  Input: 2
0 0
1 1
1 0
0 1
0 1
1 0
0 -1
-1 0 Output: 0
4 ",-0.205900044972,IOPC1202,"You are given the coordinates of the vertices of a square in the 2-d plane. All vertex coordinates will be integers.Now consider all convex quadrilaterals which also have integer coordinates for their vertices such that the midpoints of their edges are the vertices of the original square. Find the sum of areas of all such quadrilaterals.The first line of input gives T, the number of test cases (1≤T≤25000). Following this are the descriptions of the individual testcases. Each testcase consists of four lines, each line containing two space separated integers - the x and y coordinates of a distinct vertex of the square. The coordinate limits are -1000000000≤xi,yi≤1000000000. It is assured that the four vertices will correspond to a square.For each testcase output the total area of quadrilaterals with the given property. Since the answer could be very large, give the answer modulo 100000007.",131,2962,1,30,0.765765765766,0,1
2066,-0.162250054695,IOPC1203,"  You must be familiar with the use of numeric k ey s to enter alp habets in mobile phones. A single numeric key when pressed gives a character. W hen pressed again, it changes to another and so on. Once the set of characters mapped to the key is exhausted, the key wraps around to the original characte r .  The key mapping in this problem is the T9 mapping, restricted to lowercase english characters. The characters corresponding to the individual keys are:   2: a,b,c  3: d,e,f  4: g,h,i  5: j,k,l  6: m,n,o  7: p,q,r,s  8: t,u,v  9: w,x,y,z   For example, if you press the key 2 once, it prints the character 'a'. On pressing it again, it becomes 'b', then 'c', then back to 'a' and so on.  Consider a string made of lowercase letters only. To enter this string into a mobile phone, a certain key sequence has to be entered with sufficient gaps in between. Suppose that the key sequence entered is correct but the gaps between keypresses are made arbitrarily. This can result in very different strings being printed.  For example, let the string to be input be ""mod"". The key sequence corresponding to this is 6_6663 where '_' denotes a gap between the keypresses. Suppose the keys are pressed in the same order, but with gaps between keypresses arbitrary. This can result in 8 different strings: ""mod"", ""nnd"", ""omd"", ""mmmmd"", ""mnmd"", ""mmnd"", ""nmmd"" and ""md"".  Given an input string, Find the number of possible strings printed by the key sequence corresponding to it.   The first line of the input consists of T, the number of testcases (1T10). Following this are T lines, each containing a string. The string will consist only of lowercase letters and will have a maximum length of 100000   For each string, output the number of strings corresponding to its key sequence. Since the answer can be very big, output it modulo 100000007  Example  Input: 2
mod
iopc Output: 8
64 ",-0.201371735222,IOPC1203,"You must be familiar with the use of numeric keys to enter alphabets in mobile phones. A single numeric key when pressed gives a character. When pressed again, it changes to another and so on. Once the set of characters mapped to the key is exhausted, the key wraps around to the original character.The key mapping in this problem is the T9 mapping, restricted to lowercase english characters. The characters corresponding to the individual keys are:2: a,b,c
3: d,e,f
4: g,h,i
5: j,k,l
6: m,n,o
7: p,q,r,s
8: t,u,v
9: w,x,y,zFor example, if you press the key 2 once, it prints the character 'a'. On pressing it again, it becomes 'b', then 'c', then back to 'a' and so on.Consider a string made of lowercase letters only. To enter this string into a mobile phone, a certain key sequence has to be entered with sufficient gaps in between. Suppose that the key sequence entered is correct but the gaps between keypresses are made arbitrarily. This can result in very different strings being printed.For example, let the string to be input be ""mod"". The key sequence corresponding to this is 6_6663 where '_' denotes a gap between the keypresses. Suppose the keys are pressed in the same order, but with gaps between keypresses arbitrary. This can result in 8 different strings: ""mod"", ""nnd"", ""omd"", ""mmmmd"", ""mnmd"", ""mmnd"", ""nmmd"" and ""md"".Given an input string, Find the number of possible strings printed by the key sequence corresponding to it.The first line of the input consists of T, the number of testcases (1≤T≤10). Following this are T lines, each containing a string. The string will consist only of lowercase letters and will have a maximum length of 100000For each string, output the number of strings corresponding to its key sequence. Since the answer can be very big, output it modulo 100000007",132,3375,1,50,0.717703349282,0,1
2469,-0.247791324449,IOPC1204,"  A function f is defined over natural numbers as:  f(N) =  d i (d i )  Here the summation is over d i , all positive integers which are factors of N.  (n) is the Mbius function defined in the following way: If there exists a prime p such that p 2 is a factor of n , then (n)=0 . Otherwise, if n has an odd number of prime factors, (n)=-1 . If not, (n)=1 . Thus the first few values for (n) (starting from 1) are 1, -1, -1, 0, -1, 1, -1, 0...  Given an integer X (0 <= X <= 10 12 ), find the smallest natural number N such that |f(N)|>X.   The first line of the input contains T, the number of test cases (T <= 1000). Following this are T lines, each containing an integer X (0 <= X <= 10 12 ) corresponding to the test case.   For each test case in the input, output the smallest natural number N such that  |f(N)|>X.  Example  Input: 2
1
2 Output: 3
5 ",-0.206591156904,IOPC1204,"A function f is defined over natural numbers as:f(N) = ∑ di μ(di)Here the summation is over di, all positive integers which are factors of N.μ(n) is the Möbius function defined in the following way: If there exists a prime p such that p2 is a factor of n, then μ(n)=0. Otherwise, if n has an odd number of prime factors, μ(n)=-1. If not, μ(n)=1. Thus the first few values for μ(n) (starting from 1) are 1, -1, -1, 0, -1, 1, -1, 0...Given an integer X (0 <= X <= 1012), find the smallest natural number N such that |f(N)|>X.The first line of the input contains T, the number of test cases (T <= 1000). Following this are T lines, each containing an integer X (0 <= X <= 1012) corresponding to the test case.For each test case in the input, output the smallest natural number N such that |f(N)|>X.",146,2841,1,39,0.619047619048,0,1
2479,-0.301823405959,IOPC1205,"  The nasty king of Dystopia has captured a group of travellers from Utopia. The king wants to toy with them, so he makes them play a little ""game"":  The king will place everyone in solitary confinement. He has placed a bulb in a separate room which is controlled by a switch. Initially the bulb is off. Each day he picks a prisoner at random and takes him to the room. He can see whether the bulb is on or not, and choose whether to toggle the state of the bulb. This continues day after day. Now the king says that, once a prisoner realises that all of them have visited the special room at least once, he can convey it to the king and he will set everyone free. However, if someone makes such a claim wrongly, everyone will be executed. Before locking everyone up, the king would allow all prisoners to get together and decide a strategy.  This would usually be a very diabolic game to play - However, among the prisoners there were some magicians who could communicate with each other telepathically. So they come up with this strategy. All magicians start counting from 0. Every time a non-magician who has never toggled the state of the bulb before enters the room and finds the lamp off, he turns it on. However if he finds it on already, or if he has toggled the state of the bulb before, he leaves it as is. Whenever a magician enters the room, he does the following:   If he is entering the room for the first time, he increases his counter by 1 and telepathically communicates this to all other magicians who update their counter as well.   If he finds the lamp on, whether or not he is a first timer, he turns it off and all magicians increase their counter by one.     Finally when the magicians' counter reaches the total number of prisoners, they declare that everyone has been in the room at least once.  Find the expected number of days that pass before this declaration occurs.   The first line of the input contains T, the number of test cases (T  100). Following these are T lines corresponding to the test cases. Each line will contain two space separated integers N & M, the total number of prisoners and the number of magicians among them respectively (1  N  10 9 , 1  M  min(100,N))   For each test case, output the expected number of days before the magicians declare that all prisoners have entered the room at least once. The output has to be formatted in the following fashion: #.######E+## That is, one nonzero digit before the decimal point, six digits after the decimal point and two digits for the exponent. See the sample test case for a formatting example.  Example  Input: 2
100 10
1 1 Output: 1.408258E+03
1.000000E+00 ",-0.209035028638,IOPC1205,"The nasty king of Dystopia has captured a group of travellers from Utopia. The king wants to toy with them, so he makes them play a little ""game"":The king will place everyone in solitary confinement. He has placed a bulb in a separate room which is controlled by a switch. Initially the bulb is off. Each day he picks a prisoner at random and takes him to the room. He can see whether the bulb is on or not, and choose whether to toggle the state of the bulb. This continues day after day. Now the king says that, once a prisoner realises that all of them have visited the special room at least once, he can convey it to the king and he will set everyone free. However, if someone makes such a claim wrongly, everyone will be executed. Before locking everyone up, the king would allow all prisoners to get together and decide a strategy.This would usually be a very diabolic game to play - However, among the prisoners there were some magicians who could communicate with each other telepathically. So they come up with this strategy. All magicians start counting from 0. Every time a non-magician who has never toggled the state of the bulb before enters the room and finds the lamp off, he turns it on. However if he finds it on already, or if he has toggled the state of the bulb before, he leaves it as is. Whenever a magician enters the room, he does the following:If he is entering the room for the first time, he increases his counter by 1 and telepathically communicates this to all other magicians who update their counter as well.

If he finds the lamp on, whether or not he is a first timer, he turns it off and all magicians increase their counter by one.Finally when the magicians' counter reaches the total number of prisoners, they declare that everyone has been in the room at least once.Find the expected number of days that pass before this declaration occurs.The first line of the input contains T, the number of test cases (T ≤ 100). Following these are T lines corresponding to the test cases. Each line will contain two space separated integers N & M, the total number of prisoners and the number of magicians among them respectively (1 ≤ N ≤ 109, 1 ≤ M ≤ min(100,N))For each test case, output the expected number of days before the magicians declare that all prisoners have entered the room at least once. The output has to be formatted in the following fashion: #.######E+## That is, one nonzero digit before the decimal point, six digits after the decimal point and two digits for the exponent. See the sample test case for a formatting example.",147,1566,1,37,0.8828125,0,1
2493,-0.293571056877,IOPC1206,"  Consider integers N and K such that 2  K  N. Write all the numbers 0  i < N in base K, adding leading zeros where necessary so that all the numbers are of equal length in base K. The score of an integer i (0  i < N) in the list is defined in the following fashion : Consider the first digit of i in base K. Count the total number of times this digit occurs as first digit of some integer in the list. This is the score of the first digit of i. The number of times the second digit of i appears as the second digit of some integer in the list is the score of the second digit of i, and so on. The sum of scores of all digits of i is the score of i.  As an example, suppose N=4 and K=3. Then the numbers in the list are 00,01,02 and 10. Let us find the score of i=00. The first digit of i appears as the first digit thrice (00,01,02) and the second digit of i appears as second digit twice (00,10). Thus the score of 00 is 3+2=5.  An integer K (2  K  N) is called a fair base of N if the scores of all i (0  i < N) are equal for base K. The number of fair bases in the range 2  K  N is termed the fairness factor of the integer N.  Given integers a and b (2  a  b  10 12 ), find the sum of fairness factors of all i such that a  i  b.   The first line of input contains T, the number of test cases (T  20). Following these are T lines, each containing two space separated integers a and b (2  a  b  10 12 ).   For each (a,b) pair in the input, output the sum of fairness factors of i in the range a  i  b.  Example  Input: 2
4 8
20 30 Output: 9
27 ",-0.208336381927,IOPC1206,"Consider integers N and K such that 2 ≤ K ≤ N. Write all the numbers 0 ≤ i < N in base K, adding leading zeros where necessary so that all the numbers are of equal length in base K. The score of an integer i (0 ≤ i < N) in the list is defined in the following fashion : Consider the first digit of i in base K. Count the total number of times this digit occurs as first digit of some integer in the list. This is the score of the first digit of i. The number of times the second digit of i appears as the second digit of some integer in the list is the score of the second digit of i, and so on. The sum of scores of all digits of i is the score of i.As an example, suppose N=4 and K=3. Then the numbers in the list are 00,01,02 and 10. Let us find the score of i=00. The first digit of i appears as the first digit thrice (00,01,02) and the second digit of i appears as second digit twice (00,10). Thus the score of 00 is 3+2=5.An integer K (2 ≤ K ≤ N) is called a fair base of N if the scores of all i (0 ≤ i < N) are equal for base K. The number of fair bases in the range 2 ≤ K ≤ N is termed the fairness factor of the integer N.Given integers a and b (2 ≤ a ≤ b ≤ 1012), find the sum of fairness factors of all i such that a ≤ i ≤ b.The first line of input contains T, the number of test cases (T ≤ 20). Following these are T lines, each containing two space separated integers a and b (2 ≤ a ≤ b ≤ 1012).For each (a,b) pair in the input, output the sum of fairness factors of i in the range a ≤ i ≤ b.",153,2216,1,28,0.826086956522,0,1
2504,-0.165771132698,IOPC1207,"  The latest attraction for Techkriti 2112 is is a huge display of genetically modified plants. The arrangement consists of a cuboidal box of size N x  N y  N z made of unit cubes. Each unit cube is identified using (x,y,z) coordinates - x ranges from 0 to N x -1 and so on - and contains a plant genetically modified to show fluorescence. The natural colour of the plants is green. However, on exposing a plant to laser light, it changes colour to red. What is more interesting is that on exposing a red plant to laser light again, it changes back to green and this continues.  The organisers have realised that they can use the display to make many coloured patterns. They have with them a laser light sheet which they can place along an axis and move in one direction, exposing many plants to light at once. For example, if the plane of the light sheet is kept as the y axis and it is moved from a to b, every plant with the y coordinate between a and b inclusive will turn from green to red or red to green. Every time the laser is operated, it is only the plants with one specific coordinate in a certain range which are affected.  You are told that initially all plants were green. Given the sequence of exposing plants to laser light, your task is to find the number of red coloured plants in certain cuboidal subregions of the display   The first line of the input contains T, the number of test cases (T  10). Following this are the descriptions of the T test cases. The description of each test case starts with a line containing four space separated integers : N x , N y , N z and Q (1  N x ,N y ,N z  100000; Q  5000). The first three are the extents of the display in the three dimensions while Q is the number of queries which are to follow. Following this are Q lines, each describing a query. A query will be of one of the following forms :   0 i j : expose all plants with x coordinates i  x  j to laser light  1 i j : expose all plants with y coordinates i  y  j to laser light  2 i j : expose all plants with z coordinates i  z  j to laser light  3 x 1 y 1 z 1 x 2 y 2 z 2 : Report the number of red plants in the cuboidal region with (x 1 ,y 1 ,z 1 ) and (x 2 ,y 2 ,z 2 ) as diagonally opposite cells - ie, all red plants with x 1  x  x 2 , y 1  y  y 2 and  z 1  z  z 2     All individual coordinates will be valid - ie, every x coordinate will be such that 0  x  N x -1  and so on. Also, i  j; x 1  x 2 ; y 1  y 2 and z 1  z 2   For every query of the form 3 x 1 y 1 z 1 x 2 y 2 z 2 in the input, output the number of red plants with coordinates constrained by x 1  x  x 2 , y 1  y  y 2 and  z 1  z  z 2  Example  Input: 1
3 4 5 5
0 1 2
1 2 3
3 0 0 0 1 2 3
2 3 4
3 1 1 1 2 2 2 Output: 12
4 ",-0.202048561615,IOPC1207,"The latest attraction for Techkriti 2112 is is a huge display of genetically modified plants. The arrangement consists of a cuboidal box of size Nx × Ny × Nz made of unit cubes. Each unit cube is identified using (x,y,z) coordinates - x ranges from 0 to Nx-1 and so on - and contains a plant genetically modified to show fluorescence. The natural colour of the plants is green. However, on exposing a plant to laser light, it changes colour to red. What is more interesting is that on exposing a red plant to laser light again, it changes back to green and this continues.The organisers have realised that they can use the display to make many coloured patterns. They have with them a laser light sheet which they can place along an axis and move in one direction, exposing many plants to light at once. For example, if the plane of the light sheet is kept as the y axis and it is moved from a to b, every plant with the y coordinate between a and b inclusive will turn from green to red or red to green. Every time the laser is operated, it is only the plants with one specific coordinate in a certain range which are affected.You are told that initially all plants were green. Given the sequence of exposing plants to laser light, your task is to find the number of red coloured plants in certain cuboidal subregions of the displayThe first line of the input contains T, the number of test cases (T ≤ 10). Following this are the descriptions of the T test cases. The description of each test case starts with a line containing four space separated integers : Nx, Ny, Nz and Q (1 ≤ Nx,Ny,Nz ≤ 100000; Q ≤ 5000). The first three are the extents of the display in the three dimensions while Q is the number of queries which are to follow. Following this are Q lines, each describing a query. A query will be of one of the following forms :0 i j : expose all plants with x coordinates i ≤ x ≤ j to laser light
1 i j : expose all plants with y coordinates i ≤ y ≤ j to laser light
2 i j : expose all plants with z coordinates i ≤ z ≤ j to laser light
3 x1 y1 z1 x2 y2 z2 : Report the number of red plants in the cuboidal region with (x1,y1,z1) and (x2,y2,z2) as diagonally opposite cells - ie, all red plants with x1 ≤ x ≤ x2, y1 ≤ y ≤ y2 and z1 ≤ z ≤ z2All individual coordinates will be valid - ie, every x coordinate will be such that 0 ≤ x ≤ Nx-1 and so on. Also, i ≤ j; x1 ≤ x2; y1 ≤ y2 and z1 ≤ z2For every query of the form 3 x1 y1 z1 x2 y2 z2 in the input, output the number of red plants with coordinates constrained by x1 ≤ x ≤ x2, y1 ≤ y ≤ y2 and z1 ≤ z ≤ z2",154,3341,1,120,0.768595041322,0,1
2543,0.631858048404,HAYBALE,"    Feeling sorry for all the mischief she has caused around the farm recently,  Bessie has agreed to help Farmer John stack up an incoming shipment of hay  bales.  She starts with N (1 <= N <= 1,000,000, N odd) empty stacks, numbered 1..N.  FJ then gives her a sequence of K instructions (1 <= K <= 25,000), each of  the form ""A B"", meaning that Bessie should add one new haybale to the top  of each stack in the range A..B. For example, if Bessie is told ""10 13"",  then she should add a haybale to each of the stacks 10, 11, 12, and 13.  After Bessie finishes stacking haybales according to his instructions, FJ  would like to know the median height of his N stacks -- that is, the height  of the middle stack if the stacks were to be arranged in sorted order  (conveniently, N is odd, so this stack is unique). Please help Bessie  determine the answer to FJ's question.    Feeling sorry for all the mischief she has caused around the farm recently,  Bessie has agreed to help Farmer John stack up an incoming shipment of hay  bales.    She starts with N (1 <= N <= 1,000,000, N odd) empty stacks, numbered 1..N.  FJ then gives her a sequence of K instructions (1 <= K <= 25,000), each of  the form ""A B"", meaning that Bessie should add one new haybale to the top  of each stack in the range A..B. For example, if Bessie is told ""10 13"",  then she should add a haybale to each of the stacks 10, 11, 12, and 13.    After Bessie finishes stacking haybales according to his instructions, FJ  would like to know the median height of his N stacks -- that is, the height  of the middle stack if the stacks were to be arranged in sorted order  (conveniently, N is odd, so this stack is unique). Please help Bessie  determine the answer to FJ's question.  INPUT    * Line 1: Two space-separated integers, N K.    * Lines 2..1+K: Each line contains one of FJ's instructions in the  form of two space-separated integers A B (1 <= A <= B <= N).    SAMPLE INPUT  7 4  5 5  2 4  4 6  3 5    INPUT DETAILS:    There are N=7 stacks, and FJ issues K=4 instructions. The first  instruction is to add a haybale to stack 5, the second is to add haybales  to stacks 2..4, etc.    OUTPUT FORMAT:    * Line 1: The median height of a stack after Bessie completes the  instructions.    SAMPLE OUTPUT  1    OUTPUT DETAILS:    After Bessie is finished, the stacks have heights 0,1,2,3,3,1,0. The median  stack height is 1, since 1 is the middle element in the sorted ordering  0,0,1,1,2,3,3.           ",-0.127422299374,RECIIBKS," Shrija's brother Vaibhav is a very mischievous boy . He has messed a lot of books of Shrija on floor . Now Shrija is very angry . Seeing her sister angry he promises to arrange them on N empty stacks numbered from 1 to N .
Shrija also felt that she should help her brother in arranging the books. So she gives Vaibhav a sequence of M instructions each of the form ""A B"", meaning that Vaibhav should add one new book to the top of each stack in the range A..B. For example, if Vaibhav is told ""10 13"", then he should add a book to each of the stacks 10, 11, 12, and 13.
After Vaibhav finishes stacking books according to the instructions, Shrija would like to know the median height of the N stacks i.e. the height of the middle stack if the stacks were to be arranged in sorted order (Assume N is odd, so median is unique). Please help Shrija in finding the answer . Line 1: Two space-separated integers, N M.

Lines 2 to 1+M: Each line contains one of Shrija's instructions in the
form of two space separated integers A B (1 <= A <= B <= N).Only 1 integer which is the required answer.",170,3511,0,332,0.387254901961,8,1
2679,6.17233521691,CRDS,"  Maricruz have a lot of cards, she always uses her cards to build pyramids as shown in the following image:   A pyramid card of 3 levels. She always wonder how many cards does she need to make a pyramid card of N levels. 
Your task is to answer that question.   The first line of the input contains an integer 1 T T lines will have an integer 1 N Output For each case, output a single line consisting of the number of cards needed to build a pyramid card of level N modulo 1,000,007.  Example  Input Example 2
3
7 Output Example 15
77 ",-0.203931769031,VITC06,"Shantanu has a lot of cards, he always uses his cards to build pyramids.



He always wonder how many cards does he need to make a pyramid card of N
levels. Your task is to answer that question.The first line of the input contains an integer 1 ≤ T ≤ 1,000. Each of the
following T lines will have an integer 1 ≤ N ≤ 1,000,000.For each case, output a single line consisting of the number of cards needed to
build a pyramid card of level N modulo 1,000,007.",175,2640,0,25,0.543209876543,6,1
2698,-0.29548798208,BUNNIES,"    Pompom bunny has N strange eggs. The i-th egg is broken by tapping it exactly Ai times. Pompom  needs to break K eggs as soon as possible for cooking a rice omelet. However she has been put in an  uncomfortable situation. Someone has shuffled the eggs! Pompom knows the values Ai, however she  doesn't know which egg is which. She'd like to minimize the worst-case number of taps. What is the  minimal number?    Pompom bunny has N strange eggs. The i-th egg is broken by tapping it exactly Ai times. Pompom  needs to break K eggs as soon as possible for cooking a rice omelet. However she has been put in an  uncomfortable situation. Someone has shuffled the eggs! Pompom knows the values Ai, however she  doesn't know which egg is which. She'd like to minimize the worst-case number of taps. What is the  minimal number?         The first line contains an integer T, the number of test cases. Then T test cases follow. The first line for  each test case has 2 integers N and K. Then next line has N integers A1, A2, ..., AN.       For each test case, print the minimal number of taps for the worst-case.    Constraints  1 <= T <= 10  1 <= K <= N <= 3000  1 <= Ai <= 1000000 (106)        Example  Input: 3  2 1  5 8  2 1  5 58  3 2  1 2 3  Output: 8  10  5  Output details
In the first case, if a egg isn't broken after 5 taps, she should continue to tap the same egg.
In the second case, if a egg isn't broken after 5 taps, she should tap another egg 5 times. ",-0.199010903225,STREGGS,"Chef Ciel has N strange eggs. The i-th egg is broken by tapping exactly Ai times. Ciel needs to break K eggs as soon as possible for cooking a rice omelet. However she has been put in an uncomfortable situation. Someone shuffled the eggs! Ciel knows the values Ai, however she doesn't know which egg is which. She'd like to minimize the worst-case number of taps. What is the minimal number?The first line contains an integer T, the number of test cases. Then T test cases follow. The first line for each test case has 2 integers N and K. Then next line has N integers A1, A2, ..., AN.For each test case, print the minimal number of taps for the worst-case.",184,4485,0,210,0.680672268908,6,1
2807,-0.249874595845,SPRLNMS,"  Dennis is programming a robot that is supposed to paint a horizontal  line. Not being one to care much about efficiency, Dennis programs the  robot to move in an anti-clockwise spiral as shown below.  <-- 12
4 3 2 11
5 0  1  10 6 7 8 9  The robot starts at position zero, then moves to position 1, then  position 2 and so on. Dennis wants all of the tiles to the right of 0 to  be painted black. (These tiles are represented as bold numbers in the  figure above.)  Your task is to help Dennis by telling him which is the n th tile that must be painted black, with the zeroth tile being zero.   The first line of the input contains a single integer n(<=10000), this is the  number of test cases. This is followed by n lines each containing a  single integer(<=10000).   For each test case output a single integer which is the number of the  tile that corresponds to the nth tile that must be painted.  Example  Input:  3
0
1
2  Output:   0
1
10  ",-0.208201588685,NEURON3,"Code a thon is programming a robot that is supposed to paint a horizontal line. Not being one to care much about efficiency, Codesmith programs the robot to move in an anti-clockwise spiral as shown below.


<-- 12
4 3 2 11
5 0 1 10
6 7 8 9The robot starts at position zero, then moves to position 1, then position 2 and so on. Codesmith wants all of the tiles to the right of 0 to be painted black. (These tiles are represented as bold numbers in the figure above.)

Your task is to help Codesmith by telling him which is the nth tile that must be painted black, with the zeroth tile being zero.The first line of the input contains a single integer n, this is the number of test cases. This is followed by n lines each containing a single integer A.

1<=n<=100
0<=A<=10000For each test case output a single integer which is the number of the tile that corresponds to the nth tile that must be painted.",209,2185,0,36,0.75,6,1
2808,-0.249874595845,SPRLNMS,"  Dennis is programming a robot that is supposed to paint a horizontal  line. Not being one to care much about efficiency, Dennis programs the  robot to move in an anti-clockwise spiral as shown below.  <-- 12
4 3 2 11
5 0  1  10 6 7 8 9  The robot starts at position zero, then moves to position 1, then  position 2 and so on. Dennis wants all of the tiles to the right of 0 to  be painted black. (These tiles are represented as bold numbers in the  figure above.)  Your task is to help Dennis by telling him which is the n th tile that must be painted black, with the zeroth tile being zero.   The first line of the input contains a single integer n(<=10000), this is the  number of test cases. This is followed by n lines each containing a  single integer(<=10000).   For each test case output a single integer which is the number of the  tile that corresponds to the nth tile that must be painted.  Example  Input:  3
0
1
2  Output:   0
1
10  ",-0.202996811695,PRIM1,"Code a thon is programming a robot that is supposed to paint a horizontal line. Not being one to care much about efficiency, Codesmith programs the robot to move in an anti-clockwise spiral as shown below. <-- 12 4 3 2 11 5 0 1 10 6 7 8 9 The robot starts at position zero, then moves to position 1, then position 2 and so on. Codesmith wants all of the tiles to the right of 0 to be painted black. (These tiles are represented as bold numbers in the figure above.) Your task is to help Codesmith by telling him which is the nth tile that must be painted black, with the zeroth tile being zero.The first line of the input contains a single integer n, this is the number of test cases. This is followed by n lines each containing a single integer A. 1<=n<=100 0<=A<=10000For each test case output a single integer which is the number of the tile that corresponds to the nth tile that must be painted.",209,3266,0,28,0.786885245902,4,1
2809,-0.249874595845,SPRLNMS,"  Dennis is programming a robot that is supposed to paint a horizontal  line. Not being one to care much about efficiency, Dennis programs the  robot to move in an anti-clockwise spiral as shown below.  <-- 12
4 3 2 11
5 0  1  10 6 7 8 9  The robot starts at position zero, then moves to position 1, then  position 2 and so on. Dennis wants all of the tiles to the right of 0 to  be painted black. (These tiles are represented as bold numbers in the  figure above.)  Your task is to help Dennis by telling him which is the n th tile that must be painted black, with the zeroth tile being zero.   The first line of the input contains a single integer n(<=10000), this is the  number of test cases. This is followed by n lines each containing a  single integer(<=10000).   For each test case output a single integer which is the number of the  tile that corresponds to the nth tile that must be painted.  Example  Input:  3
0
1
2  Output:   0
1
10  ",-0.15142948076,SPRLNMS,"Dennis is programming a robot that is supposed to paint a horizontal line. Not being one to care much about efficiency, Dennis programs the robot to move in an anti-clockwise spiral as shown below.  <-- 12
4 3 2 11
5 0 1 10
6 7 8 9The robot starts at position zero, then moves to position 1, then position 2 and so on. Dennis wants all of the tiles to the right of 0 to be painted black. (These tiles are represented as bold numbers in the figure above.)Your task is to help Dennis by telling him which is the nth tile that must be painted black, with the zeroth tile being zero.The first line of the input contains a single integer n, this is the number of test cases. This is followed by n lines each containing a single integer.For each test case output a single integer which is the number of the tile that corresponds to the nth tile that must be painted.",209,4382,1,37,0.810344827586,0,1
2826,0.584389945176,KNJIGE,"    Mirko has a home library consisting of N books arranged one on top of the other in a narrow cabinet.  Since being well trained in the secrets of alphabet in the previous task, he now wishes to arrange the  books alphabetically, so that the book whose title comes first alphabetically ends up on top, and the  alphabetically last one at the bottom of the pile.  Mirko can easily pull a book out of the cabinet, but it is difficult to push it back into the pile, so the  book can only be returned to the top of the pile. Thus, the only available method of sorting the books  is repeatedly pulling a book out of the pile and placing it on top of the pile.  The books are labelled with integers from 1 to N, in alphabetical order. Therefore, Mirko wants them  to be ordered as (1, 2, ..., N), counting from the top. For example, if N = 3 and the starting order is (3,  2, 1), two moves are sufficient. First, he pulls out the book number 2 and places it on top, so the pile  becomes (2, 3, 1). After that, he does the same with book number 1, thus the pile becomes (1, 2, 3).  Help Mirko by calculating the minimum number of moves needed to sort a given starting order.  INPUT  The first line of input contains the integer N (N  300 000).  Each of the next N lines contains a single positive integer. These N integers represent the order of  Mirkos books from top to bottom of the cabinet. Each of the integers 1, 2, ..., N appears exactly once.  OUTPUT  The first and only line of output must contain the required minimum number of moves.    Mirko has a home library consisting of N books arranged one on top of the other in a narrow cabinet.Since being well trained in the secrets of alphabet in the previous task, he now wishes to arrange thebooks alphabetically, so that the book whose title comes first alphabetically ends up on top, and thealphabetically last one at the bottom of the pile.  Mirko can easily pull a book out of the cabinet, but it is difficult to push it back into the pile, so thebook can only be returned to the top of the pile. Thus, the only available method of sorting the books  is repeatedly pulling a book out of the pile and placing it on top of the pile.  The books are labelled with integers from 1 to N, in alphabetical order. Therefore, Mirko wants themto be ordered as (1, 2, ..., N), counting from the top.  For example, if N = 3 and the starting order is (3,2, 1), two moves are sufficient. First, he pulls out the book number 2 and places it on top, so the pilebecomes (2, 3, 1). After that, he does the same with book number 1, thus the pile becomes (1, 2, 3).  Help Mirko by calculating the minimum number of moves needed to sort a given starting order.     The first line of input contains the integer N (N  300 000).  Each of the next N lines contains a single positive integer. These N integers represent the order of  Mirkos books from top to bottom of the cabinet. Each of the integers 1, 2, ..., N appears exactly once.   The first and only line of output must contain the required minimum number of moves.  Example  Input: 3 
3 
2 
1 Output: 2 ",-0.202367509038,CD104,"Adam, an Adasaurus, works for a dish washing company. He comes across a pile consisting of N plates with a number tag each placed one on top of the other. He wishes to arrange the plates in the increasing order of the tag number. Though a plate can be pulled out of the stand, but it can only be returned to the top of the pile. Therefore, he can only sort the plates by repeatedly pulling out a plate and placing it on the top of the pile.The plates are labelled with numbers from 1 to N. So, they need to be ordered as (1, 2, ..., N), counting from the top. For example, if N = 3 and the starting order is (1, 3, 2), two moves are sufficient. First, pulling out the plate number 2 and placing it on top makes the order (2, 1, 3) and similarly with plate number 1 makes the final order (1, 2, 3).You need to help Adam sort the given starting order in minimum number of moves.The first input line contains the integer N (N <= 300 000) and the subsequent N lines contain a single positive integer representing the order of Adam's plates from top to bottom of the pile. Also note that these integers 1, 2, 3,..., N appear exactly once.Print the minimum number of moves required on a single line.",216,3377,0,394,0.361111111111,6,1
2830,-0.255986753232,DIFERENC,"    Mirko discovered what Slavko did in previous task, and decided to deal with something completely  opposite to tables of letters: sequences of numbers.  Lets define a value of a sequence as the difference between the largest and the smallest number within  that sequence. For example, value of sequence (3, 1, 7, 2) is 6, and value of (42, 42) is 0.  Find the sum of values of all subsequences of consecutive elements of a given sequence.  INPUT  The first line of input contains a single integer N (2  N  300 000), number of elements of the  sequence.  Next N lines contain elements of the sequence. Each element is a positive integer not greater than 100  000 000.  OUTPUT  The first and only line of output must contain the requested sum.  EXAMPLE TEST DATA  input  3  1  2  3  input  4  7  5  7  5  input  4  3  1  7  2  output  4  output  12  output  31    Mirko discovered what Slavko did in previous task, and decided to deal with something completelyopposite to tables of letters: sequences of numbers.  Lets define a value of a sequence as the difference between the largest and the smallest number withinthat sequence. For example, value of sequence (3, 1, 7, 2) is 6, and value of (42, 42) is 0.  Find the sum of values of all subsequences of consecutive elements of a given sequence.  INPUT  The first line of input contains a single integer N (2  N  300 000), number of elements of thesequence.  Next N lines contain elements of the sequence. Each element is a positive integer not greater than 100000 000.  OUTPUT  The first and only line of output must contain the requested sum.  EXAMPLE TEST DATA  input  3  1  2  3    output  4    input  4  7  5  7  5    output  12    input  4  3  1  7  2  output  31     ",-0.209035028638,CODE04," Let’s define a value of a sequence as the difference between the largest and the smallest number within that sequence. For example, value of sequence (3, 1, 7, 2) is 6, and value of (42, 42) is 0.Find the sum of values of all subsequences of consecutive elements of a given sequence. The first line of input contains a single integer N , number of elements of the sequence.Next N lines contain elements of the sequence. Each element is a positive integer not greater than 100 000 000. The first and only line of output must contain the requested sum. ",218,1449,0,296,0.552380952381,7,1
3050,11.1276274501,FCTRL,"  The most important part of aGSM network is so called Base Transceiver Station ( BTS ). These transceivers form the
areas called cells (this term gave the name to the cellular phone)
and every phone connects to the BTS with the strongest signal (in
alittle simplified view). Of course, BTSes need some attention and
technicians need to check their function periodically. ACM technicians faced avery interesting problem recently. Given aset of
BTSes to visit, they needed to find the shortest path to visit all of the
given points and return back to the central company building. Programmers
have spent several months studying this problem but with no results. They
were unable to find the solution fast enough. After along time, one of the
programmers found this problem in aconference article. Unfortunately, he
found that the problem is so called ""Travelling Salesman Problem"" and it is
very hard to solve. If we have N BTSes to be visited, we can visit them in
any order, giving us N ! possibilities to examine. The function expressing
that number is called factorial and can be computed as aproduct

1.2.3.4.... N . The number is very high even for arelatively small N . The programmers understood they had no chance to solve the problem. But
because they have already received the research grant from the government,
they needed to continue with their studies and produce at least some results. So they started to study behaviour of the factorial function. For example, they defined the function Z . For any positive integer N , Z ( N ) is the number of zeros at the end of the decimal form of number N !. They noticed that this function never decreases. If we have two numbers N 1 N 2 , then Z ( N 1 ) Z( N 2 ). It is because we can never ""lose"" any
trailing zero by multiplying by any positive number. We can only get new
and new zeros. The function Z is very interesting, so we need acomputer
program that can determine its value efficiently.   There is asingle positive integer T on the first line of input (equal to about 100000). It stands
for the number of numbers to follow. Then there are T lines, each containing
exactly one positive integer number N , 
1 N  For every number N , output asingle line containing the single non-negative
integer Z ( N ). Example  Sample Input:   6
3
60
100
1024
23456
8735373  Sample Output:   0
14
24
253
5861
2183837 ",5.93971835288,FCTRL,"The most important part of a GSM network is so called Base Transceiver Station (BTS). These transceivers form the areas called cells (this term gave the name to the cellular phone) and every phone connects to the BTS with the strongest signal (in a little simplified view). Of course, BTSes need some attention and technicians need to check their function periodically.The technicians faced a very interesting problem recently. Given a set of BTSes to visit, they needed to find the shortest path to visit all of the given points and return back to the central company building. Programmers have spent several months studying this problem but with no results. They were unable to find the solution fast enough. After a long time, one of the programmers found this problem in a conference article. Unfortunately, he found that the problem is so called ""Traveling Salesman Problem"" and it is very hard to solve. If we have N BTSes to be visited, we can visit them in any order, giving us N! possibilities to examine. The function expressing that number is called factorial and can be computed as a product1.2.3.4....N. The number is very high even for a relatively small N.The programmers understood they had no chance to solve the problem. But because they have already received the research grant from the government, they needed to continue with their studies and produce at least some results. So they started to study behavior of the factorial function.For example, they defined the function Z. For any positive integer N, Z(N) is the number of zeros at the end of the decimal form of number N!. They noticed that this function never decreases. If we have two numbers N1<N2, then Z(N1) <= Z(N2). It is because we can never ""lose"" any trailing zero by multiplying by any positive number. We can only get new and new zeros. The function Z is very interesting, so we need a computer program that can determine its value efficiently.There is a single positive integer T on the first line of input (equal to about 100000). It stands for the number of numbers to follow. Then there are T lines, each containing exactly one positive integer number N, 1 <= N <= 1000000000.For every number N, output a single line containing the single non-negative integer Z(N).",279,5169,1,16,0.653284671533,0,1
3085,7.75772035729,AP2,"  Arithmatic and geometric Progressions are 2 of the well known progressions in maths.  Arithmatic progression(AP) is a set in which the difference between 2 numbers in constant. for e.g., 1, 3, 5, 7, 9 .... In this series the    difference between 2 numbers is 2.  The task here is very simple indeed.  You will be given the 3rd term , 3rd last term and the sum of the series. You need print length of the series & the series.   First line will contain a number indicating the number of test cases.  Each of the following t lines will have 3 number '3term' ,'3Lastterm' and 'sum'  3term - is the 3rd term in of the series and  3Lastterm - is the 3rd term in of the series and  sum - is the sum of the series.   For each input of the test case, you need to print 2 lines.  First line should have 1 value - the number of terms in the series.  2nd line of the output should print the series numbers separated by single space.  Example  Input: 1
3 8 55 Output: 10
1 2 3 4 5 6 7 8 9 10   NOTE:   In all the test cases, all the series elements are positive integers.  The series will have at least 7 elements.  number of test cases All the numbers will fit in 64 bits (long long in C)  ",-0.160201966038,APPUZZLE,"Arithmetic and geometric Progressions are 2 of the well known progressions in maths. Arithmetic progression (AP) is a set in which the difference between 2 numbers in constant. for eg, 1,3,5,7,9....
In this series the difference between 2 numbers is 2.The task here is very simple indeed. You will be given the 3rd term , 3rd last term and the sum of the series. You need to print the length of the series & the series itself. The first line of the input contains an integer T denoting the number of test cases.
Each of the following t lines will have 3 number '3rd term' ,'3rd Last term' and 'sum'.
3rd term - is the 3rd term in the series
3rd Last term - is the 3rd term from the end in the series
sum - is the sum of the series. For each input of the test case, you need to print 2 lines.First line should have 1 value-number of terms in the series.
2nd line of the output should print the series numbers separated by single spaces. ",289,3728,0,83,0.448979591837,6,1
3105,8.44282556197,NSTEPS,"  Starting from point (0,0) on a plane, we have written all non-negative integers 0, 1, 2,... as shown in the figure. For example, 1, 2, and 3 has been written at points (1,1), (2,0), and (3, 1) respectively and this pattern has continued.     You are to write a program that reads the coordinates of a point (x, y), and writes the number (if any) that has been written at that point. (x, y) coordinates in the input are in the range 0...10000.     The first line of the input is N, the number of test cases for this problem. In each of the N following lines, there is x, and y representing the coordinates (x, y) of a point.     For each point in the input, write the number written at that point or write No Number if there is none.    Example  Input: 3
4 2
6 6
3 4 Output: 6
12
No Number ",-0.205770463416,AI05,"Tom was running behind jerry and he was about to catch Jerry, suddenly Jerry entered a tunnel, which follows a specefic pattern, if we take initial point of tunnel as (0,0) on a plane and write all non-integer 0,1,2..... we get a staircase pattern as shown in the figure. For ex. we locate 1,2 ,3 points as (1,1),(2,0) and (3,1) respectively and follow this pattern continuously8 16
7 13
6 12 14
5 9 11
4 8 10
3 5 7
2 4 6
1 1 3
0 0 2
0 1 2 3 4 5 6 7 8So to help Tom find Jerry's location, you have to write a program that reads the coordinates of a point (x,y) and write the number (if any) that has been written at that point (x,y) coordinate if input is range 0...5000.The first line of the input is N, the number of test cases for this problem. In each of the N following lines, there is x, and y representing the coordinates (x,y) of a point.For each point in the input, write the number at that point or write No Number if there is none.",308,3018,0,16,0.388157894737,6,1
3155,-0.0751492024041,GP1,"  Geometric progression(GP) is a set in which the ratio of 2 consecutive numbers is same. for eg, 1,2,4,8,16.... In this the ratio of the numbers is 2.  The task here is very simple indeed.  You will be given the 3rd term , 3rd last term and the sum of the series. You need print length of the series & the series.   First line will contain a number indicating the number of test cases.  Each of the following t lines will have 3 number '3term' ,'3Lastterm' and 'sum'  3term - is the 3rd term in of the series and  3Lastterm - is the 3rd term in of the series and  sum - is the sum of the series.   For each input of the test case, you need to print 2 lines.  fist line should have 1 value- number of terms in the series.  2nd line of the output should print the series numbers separated by single space  Example  Input:  1 4 64 511  Output:  9 1 2 4 8 16 32 64 128 256 NOTE - All the values will be in the range [0, 2^64] inclusive The series will have at least 6 elements. number of test cases <=100. The Ratio in all the cases will be an integer. (Thanks Mitch for pointing this out) All the numbers will fit in 64 bits(long long in C)  ",-0.160201966038,APPUZZLE,"Arithmetic and geometric Progressions are 2 of the well known progressions in maths. Arithmetic progression (AP) is a set in which the difference between 2 numbers in constant. for eg, 1,3,5,7,9....
In this series the difference between 2 numbers is 2.The task here is very simple indeed. You will be given the 3rd term , 3rd last term and the sum of the series. You need to print the length of the series & the series itself. The first line of the input contains an integer T denoting the number of test cases.
Each of the following t lines will have 3 number '3rd term' ,'3rd Last term' and 'sum'.
3rd term - is the 3rd term in the series
3rd Last term - is the 3rd term from the end in the series
sum - is the sum of the series. For each input of the test case, you need to print 2 lines.First line should have 1 value-number of terms in the series.
2nd line of the output should print the series numbers separated by single spaces. ",326,3728,0,73,0.381578947368,7,1
3717,0.488209329839,TOE1,"  Tic Tac Toe is a child's game played on a 3 by 3 grid. One player, X, starts by placing an X at an unoccupied grid position. Then the other player, O, places an O at an unoccupied grid position. Play alternates between X and O until the grid is filled or one player's symbols occupy an entire line (vertical, horizontal, or diagonal) in the grid. We will denote the initial empty Tic Tac Toe grid with nine dots. Whenever X or O plays we fill in an X or an O in the appropriate position. The example below illustrates each grid configuration from the beginning to the end of a game in which X wins.   Your job is to read a grid and to determine whether or not it could possibly be part of a valid Tic Tac Toe game. That is, is there a series of plays that can yield this grid somewhere between the start and end of the game?   The first line of input contains N, the number of test cases. 4N-1 lines follow, specifying N grid configurations separated by empty lines.   For each case print ""yes"" or ""no"" on a line by itself, indicating whether or not the configuration could be part of a Tic Tac Toe game. Example   Input: 2
X.O
OO.
XXX

O.X
XX.
OOO Output: yes
no ",-0.208316327058,FP09,"We will denote the initial empty Tic Tac Toe grid with nine dots. Whenever X or O plays we fill in an X or an O in the appropriate position. The example below illustrates each grid configuration from the beginning to the end of a game in which X wins....     X..    X.O     X.O      X.O     X.O      X.O      X.O
...     ...       ...        ...         .O.       .O.       OO.      OO.
...     ...       ...        ..X        ..X       X.X      X.X       XXXThe first line of input contains N, the number of test cases. 4N-1 lines follow, specifying N grid configurations separated by empty lines.For each case print ""yes"" or ""no"" on a line by itself, indicating whether or not the configuration could be part of a Tic Tac Toe game.",433,2203,0,3,0.5,4,1
3721,1.85530232398,JAVAC,"  Apologists of Java and C++ can argue for hours proving each other that their programming language is the best one. Java people will tell that their programs are clearer and less prone to errors, while C++ people will laugh at their inability to instantiate an array of generics or tell them that their programs are slow and have long source code. Another issue that Java and C++ people could never agree on is identifier naming. In Java a multiword identifier is constructed in the following manner: the first word is written starting from the small letter, and the following ones are written starting from the capital letter, no separators are used. All other letters are small. Examples of a Java identifier are javaIdentifier, longAndMnemonicIdentifier, name, nEERC. Unlike them, C++ people use only small letters in their identifiers. To separate words they use underscore character _. Examples of C++ identifiers are c_identifier, long_and_mnemonic_identifier, name (you see that when there is just one word Java and C++ people agree), n_e_e_r_c. You are writing a translator that is intended to translate C++ programs to Java and vice versa. Of course, identifiers in the translated program must be formatted due to its language rules  otherwise people will never like your translator. The first thing you would like to write is an identifier translation routine. Given an identifier, it would detect whether it is Java identifier or C++ identifier and translate it to another dialect. If it is neither, then your routine should report an error. Translation must preserve the order of words and must only change the case of letters and/or add/remove underscores.   The input file consists of several lines that contains an identifier. It consists of letters of the English alphabet and underscores. Its length does not exceed 100.   If the input identifier is Java identifier, output its C++ version. If it is C++ identifier, output its Java version. If it is none, output 'Error!' instead.  Example   Input: long_and_mnemonic_identifier
anotherExample
i
bad_Style Output: longAndMnemonicIdentifier
another_example
i
Error! ",-0.209035028638,CODE03," Apologists of Wu and JIN can argue for hours proving each other that their programming language is the best one, Wu and Jin being two programming languages.
Wu people will tell that their programs are clearer and less prone to errors, while JIN people will laugh at their inability to instantiate an array of generics or tell them that
their programs are slow and have long source code.Another issue that Wu and JIN people could never agree on is identifier naming. In Wu a multiword identifier is constructed
in the following manner:the first word is written starting from the small letter, and the following ones are written starting from the capital letter, no separators are used. All other letters are small.
Examples of a WU identifier are wuIdentifier, longAndMnemonicIdentifier, name, nEERC.
Unlike them, JIN people use only small letters in their identifiers. To separate words they use underscore character ‘_’. Examples of JIN identifiers are c_identifier, ong_and_mnemonic_identifier,
name (you see that when there is just one word Wu and JIN people agree), n_e_e_r_c. You are writing a translator that is intended to translate JIN programs to Wu and vice versa. Of course,
identifiers in the translated program must be formatted due to its language rules — otherwise people will never like your translator.
The first thing you would like to write is an identifier translation routine. Given an identifier, it would detect whether it is Wu identifier or JIN identifier and translate it to another dialect.If it is
neither, then your routine should report an error. Translation must preserve the order of words. The input consists of the several identifiers that will be given as input.If the input identifier is Wu identifier, output its JIN version. If it is JIN identifier, output its Wu version. If it is none, output 'Error!' instead. ",436,1448,0,44,0.676328502415,6,1
4888,-0.24683424056,MMIND,"  If you want to buy anew cellular phone, there are many various types to
choose from. To decide which one is the best for you, you have to consider
several important things: its size and weight, battery capacity, WAP support,
colour, price. One of the most important things is also the list of games the
phone provides. Nokia is one of the most successful phone makers because of
its famous Snake and SnakeII. ACM wants to make and sell its own phone and
they need to program several games for it. One of them is Master-Mind, the
famous board logical game. The game is played between two players. One of them chooses a secret code consisting of P ordered pins, each of them having one of the predefined set of C colours. The goal of the second player is to guess that secret sequence of
colours. Some colours may not appear in the code, some colours may appear more
than once. The player makes guesses, which are formed in the same way as the secret
code. After each guess, he/she is provided with aninformation on how
successful the guess was. This feedback is called a hint . Each hint
consists of B black points and W white points. The black point stands for
every pin that was guessed right, i.e. the right colour was put on the right
position. The white point means right colour but on the wrong position. For
example, if the secret code is ""white, yellow, red, blue, white"" and the
guess was ""white, red, white, white, blue"", the hint would consist of one
black point (for the white on the first position) and three white points
(for the other white, red and blue colours). The goal is to guess the
sequence with the minimal number of hints. The new ACM phone should have the possibility to play both roles. It can make
the secret code and give hints, but it can also make its own guesses. Your
goal is to write aprogram for the latter case, that means aprogram that
makes Master-Mind guesses.   There is asingle positive integer T on the first line of input. It stands
for the number of test cases to follow. Each test case describes one game
situation and you are to make aguess. On the first line of each test case,
there are three integer numbers, P , C and M . P (
1 <= P <= 10) is
the number of pins, C (1 <= C <= 100) is the number of colours, and M (1 <= M <= 100) is the number of already played guesses. Then there are 2 x M lines, two lines for every guess. At the first line of
each guess, there are P integer numbers representing colours of the guess.
Each colour is represented by anumber G i , 
1 <= G i <= C . The second
line contains two integer numbers, B and W , stating for the number of
black and white points given by the corresponding hint. Let's have asecret code S 1 , S 2 , ... S P and the guess G 1 , G 2 , ... G P . Then we can make aset H containing pairs of numbers
( I , J ) such that S I = G J , and that any number can appear at most once on
the first position and at most once on the second position. That means for
every two different pairs from that set, ( I 1 , J 1 ) and ( I 2 , J 2 ), we
have I 1 <> I 2 and J 1 <> J 2 . Then we denote B ( H ) the number of
pairs in the set, that meet the condition I = J , and W ( H ) the number of
pairs with I <> J . We define anordering of every two possible sets H 1 and H 2 . Let's say H 1 <= H 2 if and only if one of the following holds:    B ( H 1 ) < B ( H 2 ), or  B ( H 1 )  = B ( H 2 ) and W ( H 1 ) <= W ( H 2 ) Then we can find amaximal set H max according to this ordering. The
numbers B ( H max ) and W ( H max ) are the black and white points for that
hint.   For every test case, print the line containing P numbers representing P colours of the next guess. Your guess must be valid according to all previous
guesses and hints. The guess is valid if the sequence could be asecret code,
i.e. the sequence was not eliminated by previous guesses and hints. If there is no valid guess possible, output the sentence You are cheating! . If there are more valid guesses, output the one
that is lexicographically smallest. I.e. find such guess G that for every
other valid guess V there exists such anumber I that:   G J = V J for every J < I , and G I < V I .  Example  Sample Input:   3
4 3 2
1 2 3 2
1 1
2 1 3 2
1 1
4 6 2
3 3 3 3
3 0
4 4 4 4
2 0
8 9 3
1 2 3 4 5 6 7 8
0 0
2 3 4 5 6 7 8 9
1 0
3 4 5 6 7 8 9 9
2 0  Sample Output   1 1 1 3
You are cheating!
9 9 9 9 9 9 9 9  Warning: large Input/Output data, be careful with certain languages ",-0.209035028638,CD105,"It's the same old, boring day in college. The classes are being bunked either by the students or by the teachers. Ram, a Rebbachisaurus, being already aware of this, brings along some Bulls and Cows with him and decides to play with them, with Raj, a Riojasaurus. Raj is playing with Bulls and Cows for the 1st time but he still wants to beat Ram. So he decides to cheat, by writing a code to help him win the game. Can you help Raj in this evil deed of his, by writing the code for him?Following are the details of the game: It is a two player game in which one of the players chooses a secret code consisting of P ordered pins, each of them having one of the predefined set of C colours. The second player has to guess that secret sequence of colours. Note: Some colours may not appear at all in the code while some colours may appear more than once.The player starts making guesses, which are formed in the same way as the secret code. After each guess, the 2nd player provides him/her a hint on how successful the guess was. Each hint consists of B bulls and W cows. The bull stands for every pin that was guessed right, i.e. the right colour was put on the right position while the cow means right colour but on the wrong position. For e.g., if the secret code is ""white, yellow, blue, red, white"" and the guess was ""white, red, white, white, blue"", the hint would consist of one bull(for the white on the 1st position) and three cows (for the other white, red and blue colours). The goal is to guess the sequence with the minimal number of hints.Your goal is to write a program that makes Bulls and Cows guesses.There are multiple test cases in the input. The input begins with a single integer which gives the number of test cases. Each test case describes one game situation and you are to make a guess. On the first line of each test case, there are three integer numbers, P( 1 <= P <= 10), C(1 <= C <= 100) and M(1 <= M <= 100) where P is the number of pins, C is the number of colours, and M is the number of already played guesses.Then there are M x 2 lines, two lines for every guess. At the first line of each guess, there are P integer numbers representing colours of the guess where each colour is represented by a number Gi, 1 <= Gi <= C. The second line contains two integer numbers, B and W, stating for the number of bulls and cows given by the corresponding hint.Let's have a secret code A1, A2, ... , AP and the guess B1, B2, ... BP. Then we can make a set H containing pairs of numbers (I,J) such that AI = BJ, and that any number can appear at most once on the first position and at most once on the second position. That means for every two different pairs from that set, (I1,J1) and (I2,J2), we have I1 != I2 and J1 != J2. Then we denote B(H) the number of pairs in the set, that meet the condition I = J, and W(H) the number of pairs with I != J.We define an ordering of every two possible sets S1 and S2. Let's say S1 <= S2 if and only if one of the following holds: B(S1) < B(S2), or B(S1) = B(S2) and W(S1) <= W(S2) Then we can find a maximal set Smax according to this ordering. The numbers B(Smax) and W(Smax) are the bulls and cows for that hint.For every test case, print P numbers representing P colors of the next guess. Your guess must be valid according to all previous guesses and hints. The guess is valid if the sequence could be a secret code i.e. the sequence was not eliminated by previous guesses and hints. If no valid guess is possible, print You are cheating! . If there are more valid guesses, output the one that is lexicographically smallest. i.e. find such guess G that for every other valid guess V there exists a number I such that GJ = VJ for every JII.",533,1582,0,199,0.394736842105,5,1
5807,3.43449227514,DIEHARD,"  Problem Statement:   The game is simple. You initially have H amount of health and A amount of armor. At any instant you can live in any of the three places - fire, water and air. After every unit time, you have to change your place of living. For example if you are currently living at fire, you can either step into water or air.  If you step into air, your health increases by 3 and your armor increases by 2  If you step into water, your health decreases by 5 and your armor decreases by 10  If you step into fire, your health decreases by 20 and your armor increases by 5  If your health or armor becomes Find the maximum time you can survive.  Input:  The first line consists of an integer t, the number of test cases. For each test case there will be two positive integers representing the initial health H and initial armor A.   Output: For each test case find the maximum time you can survive.    Note: You can choose any of the 3 places during your first move.    Input Constraints: 1  1  Example:  Sample Input:  3
2 10
4 4
20 8  Sample Output:  1
1
5 ",-0.209035028638,CDHIDE,"Alibaba is chasing the Captain of the Thieves through the magic realm of Persia! The Captain has taken refuge in a dangerous area where Alibaba can't follow. So, he waits for him to come out of hiding.The captain initially has H amount of health and A amount of armour. The hiding place has 3 areas, Fire, Air and Water. At any instant, he can live in any of the 3 places - fire, water and air. After every unit time, he has to change his place of living.For example,If he is currently living at fire, he can either step into water or air.
If he steps into air, his health increases by 3 and his armour increases by 2.
If he steps into water, his health decreases by 5 and his armour decreases by 10.
If he steps into fire, his health decreases by 20 and his armour increases by 5.
If his health or armour becomes <=0, he will die instantly.Alibaba wants to find out the maximum time the Captain can survive in the hideout.The first line consists of an integer t, the number of test cases.
For each test case there will be 2 positive integers representing the initial health H and initial armor A.For each test case, find the maximum time the Captain of the Thieves can survive.NOTE: He can choose any of the 3 places during his first move.",660,782,0,6,0.430379746835,6,1
6415,-0.315128159272,BMASTER,"  Loda and Maelk are legendary ChefCraft players. They have played so many games that this number doesn't fit in   a standard 32-bit integer type. Today Loda and Maelk are going to sort the things out and find out who is the   greatest ChefCraft player ever. So the great fight is coming. There are a lot of different heroes you may   choose to play ChefCraft. Obviously every hero has his pros and cons. Loda perfectly plays Blade Master. His   main skill is to make mirror images of himself to spoof the enemy.    As every other popular game ChefCraft is played on a rectangular grid which consists of N rows and M columns. Rows of the grid are numbered by integers from 1 to N . So the upper row of the   grid has number 1 and the lower row has number N . The same holds for columns. They are numbered   by integers from 1 to M such that the most left column has number 1 while the most right   column has number M .    At the beginning of the game the only Blade Master's image stands on some starting cell (Sx, Sy) where 1  Sx  N and 1  Sy  M . Then Loda makes T moves. Maelk knows how the   distribution of images on the grid changes after each Loda's move. This happens according to the following   rules.    1. If there is an image standing on the cell (i, j) then the new images appear by the next   rules:     Let F(i, j) be the total number of images in the ""cross"" of the cell (i, j) . The ""cross"" of   the cell (i, j) is union of all cells in the i -th row of the grid and in the j -th column   of the grid. So N + M  1 cells belongs to the ""cross"".  Let X = F(i, j) mod 6 , that is X is the remainder of the division of F(i, j) by 6 .  For every possible value of X we have following values: D1 , D2 , P1 and P2 .  D1 and D2 may be equal to one of the 4 values ['U', 'R', 'D', 'L'] and mean   some two directions. Here 'U' means up , 'R' means right , 'D' means down and 'L' means left .  P1 and P2 are integer numbers.  New mirror images will appear at every cell in the direction D1 with the period P1 starting   from cell (i, j) and in the direction D2 with the period P2 also starting from the cell (i, j) . Of course, no images will appear out of the grid. For example, if D1 = 'U' and P1 =   2 then images appear at the cells (i  2, j), (i  4, j), (i  6, j) , and so   on.  Loda always use the same values for D1 and D2 . Namely,  D1 = 'U', D2 = 'D' for X = 0,  D1 = 'L', D2 = 'R' for X = 1,  D1 = 'U', D2 = 'R' for X = 2,  D1 = 'R', D2 = 'D' for X = 3,  D1 = 'D', D2 = 'L' for X = 4,  D1 = 'L', D2 = 'U' for X = 5.  But values P1 and P2 may vary for different games. But once chosen they will be the same for   all moves.     2. Appearing of new mirror images happens immediately.    3. Whenever there is more than one image at the cell they start one on one fights. In each fight two   images participate and both die. So if the number of images in the cell was even than all images will   disappear in the end, otherwise exactly one image will remain at this cell.    Now Maelk wants to choose his hero in order to win the fight. The most important thing he needs to know for   this is how the number of images changes during Loda's moves. So he asks you for help. Denote by C(t) the number of images on the grid after the t -th Loda's move for t from 1 to T . For   convenience we denote C(0) = 1 with meaning that 0 -th move is the putting of the only Blade   Master's image at the starting cell. Maelk wants you to calculate the sum C(0) + C(1) + ... + C(T) .   Since Maelk doesn't know what to expect from Loda he would like to know the answer for several values of T . As you remember the total number of games played by Maelk and Loda at ChefCraft doesn't fit in a   standard 32-bit integer type. Of course, the same can hold for the number of moves in their final fight. Since   Maelk plays ChefCraft the whole life he is not strong in math and can't calculate such large sums. So let's   help him to win the final fight and become the only ChefCraft master ever.   The first line of the input contains three space separated integers N , M and Q . Here N and M are sizes of the grid described above and Q is the number of Maelk's queries. The   second line contains two space separated integers Sx and Sy , row index and column index of the   starting position of the first image. Each of the following six lines contains two space separated integers,   the values P1 and P2 for the corresponding X , that is, i -th line among these six   lines contains values P1 and P2 for X = i  1 . Each of the following Q lines contains a single integer T , the number of Loda's moves for the corresponding Maelk's query.   For every Maelk's query output on a separate line the numbers of images Maelk will see during Loda's move.  Constrains  N and M are positive  N  M  34  1  Sx  N  1  Sy  M  1  P1 , P2  max{N, M}  1  Q  100  1  T  10 16  Example  Input: 3 3 3
1 1
1 1
1 1
1 1
1 1
1 1
1 1
1
2
3 Output: 4
12
17  Explanation  The initial grid looks as follows: 100 000 000 Here '1' represents a cell with an image and '0' represents a free cell.  After the first move grid is 111 000 000  After the second move grid is 101 111 111  Finally, after the third move we have 011 101 010  So after the first move Maelk will see 3 images, after the second move  8 images and   after the third move  5 images. Hence the answers for T = 1, 2, 3 are 1 + 3 = 4 , 1 + 3 + 8 = 12 and 1 + 3 + 8 + 5 = 17 respectively. ",-0.203490958114,BMASTER,"Loda and Maelk are legendary ChefCraft players. They have played so many games that this number doesn't fit in a standard 32-bit integer type. Today Loda and Maelk are going to sort the things out and find out who is the greatest ChefCraft player ever. So the great fight is coming. There are a lot of different heroes you may choose to play ChefCraft. Obviously every hero has his pros and cons. Loda perfectly plays Blade Master. His main skill is to make mirror images of himself to spoof the enemy.As every other popular game ChefCraft is played on a rectangular grid which consists of N rows and M columns. Rows of the grid are numbered by integers from 1 to N. So the upper row of the grid has number 1 and the lower row has number N. The same holds for columns. They are numbered by integers from 1 to M such that the most left column has number 1 while the most right column has number M.At the beginning of the game the only Blade Master's image stands on some starting cell (Sx, Sy) where 1 ≤ Sx ≤ N and 1 ≤ Sy ≤ M. Then Loda makes T moves. Maelk knows how the distribution of images on the grid changes after each Loda's move. This happens according to the following rules.1. If there is an image standing on the cell (i, j) then the new images appear by the next rules:Let F(i, j) be the total number of images in the ""cross"" of the cell (i, j). The ""cross"" of the cell (i, j) is union of all cells in the i-th row of the grid and in the j-th column of the grid. So N + M − 1 cells belongs to the ""cross"".
Let X = F(i, j) mod 6, that is X is the remainder of the division of F(i, j) by 6.
For every possible value of X we have following values: D1, D2, P1 and P2.
D1 and D2 may be equal to one of the 4 values ['U', 'R', 'D', 'L'] and mean some two directions. Here 'U' means up, 'R' means right, 'D' means down and 'L' means left.
P1 and P2 are integer numbers.
New mirror images will appear at every cell in the direction D1 with the period P1 starting from cell (i, j) and in the direction D2 with the period P2 also starting from the cell (i, j). Of course, no images will appear out of the grid. For example, if D1 = 'U' and P1 = 2 then images appear at the cells (i − 2, j), (i − 4, j), (i − 6, j), and so on.
Loda always use the same values for D1 and D2. Namely,
D1 = 'U', D2 = 'D' for X = 0,
D1 = 'L', D2 = 'R' for X = 1,
D1 = 'U', D2 = 'R' for X = 2,
D1 = 'R', D2 = 'D' for X = 3,
D1 = 'D', D2 = 'L' for X = 4,
D1 = 'L', D2 = 'U' for X = 5.
But values P1 and P2 may vary for different games. But once chosen they will be the same for all moves.2. Appearing of new mirror images happens immediately.3. Whenever there is more than one image at the cell they start one on one fights. In each fight two images participate and both die. So if the number of images in the cell was even than all images will disappear in the end, otherwise exactly one image will remain at this cell.Now Maelk wants to choose his hero in order to win the fight. The most important thing he needs to know for this is how the number of images changes during Loda's moves. So he asks you for help. Denote by C(t) the number of images on the grid after the t-th Loda's move for t from 1 to T. For convenience we denote C(0) = 1 with meaning that 0-th move is the putting of the only Blade Master's image at the starting cell. Maelk wants you to calculate the sum C(0) + C(1) + ... + C(T). Since Maelk doesn't know what to expect from Loda he would like to know the answer for several values of T. As you remember the total number of games played by Maelk and Loda at ChefCraft doesn't fit in a standard 32-bit integer type. Of course, the same can hold for the number of moves in their final fight. Since Maelk plays ChefCraft the whole life he is not strong in math and can't calculate such large sums. So let's help him to win the final fight and become the only ChefCraft master ever.The first line of the input contains three space separated integers N, M and Q. Here N and M are sizes of the grid described above and Q is the number of Maelk's queries. The second line contains two space separated integers Sx and Sy, row index and column index of the starting position of the first image. Each of the following six lines contains two space separated integers, the values P1 and P2 for the corresponding X, that is, i-th line among these six lines contains values P1 and P2 for X = i − 1. Each of the following Q lines contains a single integer T, the number of Loda's moves for the corresponding Maelk's query.For every Maelk's query output on a separate line the numbers of images Maelk will see during Loda's move.",679,4999,1,338,0.734117647059,0,1
6519,-0.293177072717,DIFFV,"  You are given set of N vectors, each vector consists of K integers. Vector ex equals ey iff there exist function bijection f and integer r , such that ex[i] = f( ey[(i+r)%K] ), for each i in range [0, K> Eg. (1, 2, 2, 3) == (22, 3, 4, 22), with r=2 and f(22)=2, f(3)=3 and f(4)=1. But (22,3,22,4) is not equal to (1, 2, 2, 3).  How many different vectors are there in set of N given vectors ?  Constraints :  n <= 10000  k <= 100  vector values are from range [0, 10^9]   First number contains T (T <= 10), number of test cases. Each test cases consists of following. First line consists of N and K. N lines follows, the i-th containing K integers describing i-th vector.   Output one number, number of different vectors.  Input: 2
3 4
22 3 4 22
1 2 2 3
22 3 22 4
5 5
3 3 3 0 3
8 4 4 4 0
1 1 1 1 1
1 1 8 6 1
1 3 3 3 5  Output:  2  3 ",-0.208627175046,DIFFV,"You are given set of N vectors, each vector consists of K integers. Two vectors ex, ey are are equal iff there exist function bijection f and integer r, such that ex[i] = f( ey[(i+r)%K] ), for each i in range [0, K> Eg. (1, 2, 2, 3) == (22, 3, 4, 22), with r=2 and f(22)=2, f(3)=3 and f(4)=1. But (22,3,22,4) is not equal to (1, 2, 2, 3).How many different vectors are there in set of N given vectors ?Constraints :n <= 10000k <= 100First number contains T (T <= 10), number of test cases. Each test cases consists of following. First line consists of N and K. N lines follows, the i-th containing K integers describing i-th vector.Output one number, number of different vectors.",683,1950,1,63,0.623076923077,0,1
6774,0.151905660287,JOHNNY,"  Johnny visited his favourite supermarket to purchase as many sweets as he could afford. Since daddy had left his credit card at home untended, this was not really a problem. Once he had (barely) managed to push the trolley laden with chocolate bars past the cash desk, he began to wonder how to carry all the shopping home without breaking his back.  You must know that Johnny is a perfectly normal child, and has exactly 2 hands. Help him distribute his load between both hands so as to minimise the difference in load between both hands.   The first line of input contains a single integer n n lines a single positive integer is given, describing the weight of the respective packet (the weight is an integer value never exceeding 10 14 ).   In separate lines, output the numbers of the packets which Johnny should carry in his left hand. Assume packets are numbered in the input order from 1 to n .  Scoring  Your program shall receive log 10 ( s /(| d |+1)) points, where s is the total weight of all parcels, while d denotes the difference in weight between the load carried in Johnny's left and right hand.  Example  For the sample input: 3
5
8
4  a program outputting: 2
3  will score log 10 ((5+8+4)/(|8+4-5|+1))= 0.327 points. ",-0.204156580687,JOHNNY,"Johnny visited his favourite supermarket to purchase as many sweets as he could afford. Since daddy had left his credit card at home untended, this was not really a problem. Once he had (barely) managed to push the trolley laden with chocolate bars past the cash desk, he began to wonder how to carry all the shopping home without breaking his back.You must know that Johnny is a perfectly normal child, and has exactly 2 hands. Help him distribute his load between both hands so as to minimise the difference in load between both hands.The first line of input contains a single integer n<= 10000 denoting the number of sweet packets Johnny has bought. In each of the next n lines a single positive integer is given, describing the weight of the respective packet (the weight is an integer value never exceeding 1014).In separate lines, output the numbers of the packets which Johnny should carry in his left hand. Assume packets are numbered in the input order from 1 to n.",692,3398,1,61,0.672955974843,0,1
7002,-0.119424655143,COUNTISL,"  You are given a simple map of an archipelago. Can you determine how many islands it shows?  The map consists of grid squares with characters, where '#' indicates land and '.' indicates water. Two land squares belong to the same island if they are neighbouring grid squares, which means their x coordinates and y coordinates differ by at most 1.   The first line of the input contains a number T  20 which indicates the number of test cases to follow.  Each test case starts with a line containing two numbers n and m (1  n,m  200), the number of rows and the number of columns of the grid, respectively. The following n lines contain m characters each and describe the map to be processed. You may assume that the map contains only characters '#' and '.', and that the border of the map consists only of water (character '.').   For each test case print in a line the number of islands shown on the corresponding map in the input. Example   Input: 2
1 1
.
6 4
....
..#.
.#..
....
.##.
.... Output: 0
2 ",-0.208132952459,DS14,"The first line of the input contains a number which indicates the number of test cases to follow.
Each test case starts with a line containing two numbers n and m, the number of rows and the number of columns of the grid, respectively. The following n lines contain m characters each and describe the map to be processed. You may assume that the map contains only characters '#' and '.', and that the border of the map consists only of water (character '.').For each test case print in a line the number of islands shown on the corresponding map in the input.",714,2173,0,88,0.486486486486,8,1
7003,-0.119424655143,COUNTISL,"  You are given a simple map of an archipelago. Can you determine how many islands it shows?  The map consists of grid squares with characters, where '#' indicates land and '.' indicates water. Two land squares belong to the same island if they are neighbouring grid squares, which means their x coordinates and y coordinates differ by at most 1.   The first line of the input contains a number T  20 which indicates the number of test cases to follow.  Each test case starts with a line containing two numbers n and m (1  n,m  200), the number of rows and the number of columns of the grid, respectively. The following n lines contain m characters each and describe the map to be processed. You may assume that the map contains only characters '#' and '.', and that the border of the map consists only of water (character '.').   For each test case print in a line the number of islands shown on the corresponding map in the input. Example   Input: 2
1 1
.
6 4
....
..#.
.#..
....
.##.
.... Output: 0
2 ",-0.196487154206,PD12,"You are given a simple map of an archipelago. Can you determine how many islands it shows? The map consists of grid squares with characters, where '#' indicates land and '.' indicates water. Two land squares belong to the same island if they are neighbouring grid squares, which means their x coordinates and y coordinates differ by at most 1.The first line of the input contains a number T ≤ 20 which indicates the number of test cases to follow. Each test case starts with a line containing two numbers n and m (1 ≤ n,m ≤ 200), the number of rows and the number of columns of the grid, respectively. The following n lines contain m characters each and describe the map to be processed. You may assume that the map contains only characters '#' and '.', and that the border of the map consists only of water (character '.').For each test case print in a line the number of islands shown on the corresponding map in the input.",714,3557,0,20,0.873873873874,8,1
7901,-0.16941841564,AMR12A,"    'Hush!' said Frodo. 'I think I hear hoofs again.'  They stopped suddenly and stood as silent as tree-shadows, listening. There was a sound of hoofs in the lane, some way behind, but coming slow and clear down the wind. Quickly and quietly they slipped off the path, and ran into the deeper shade under the oak-trees.  The hoofs drew nearer. They had no time to find any hiding-place better than the general darkness under the trees.  - Frodo, Sam and Pippin, when they encounter a Black Rider.  Indeed, the Black Riders are in the Shire, and they are looking for the One Ring. There are N hobbits out in their fields, but when they hear the Riders approaching, or feel the fear cast by their presence, they immediately wish to run and hide in M holes located nearby.  Now, each hole has space for just 1 hobbit; however, once a hobbit reaches a hole, he is able to make room for one more hobbit by digging away at the earth. The time required to make enough space for a second hobbit is C units. Also, each hole CANNOT hold more than 2 hobbits, even after digging. Also note that a hobbit can begin making space for the next hobbit only after he reaches the hole.  You are given the time required to travel from each hobbit's current location to each hole. Find the minimum amount of time it will take before at least K of the hobbits are hiding safely.  Input (STDIN):  The first line contains T, the number of test cases.  The first line of each test case contains 4 integers - N (no of hobbits), M (no of holes), K (minimum number of hobbits to hide) and C (time taken to expand a hole).  The next N lines contain M integers each, denoting the time taken for each hobbit to each hole.  Output (STDOUT):  Output one line per test case which contains the minimum time.  Constraints:  1 <= T <= 6  1 <= N, M <= 100  1 <= K <= min(N, 2 * M)  0 < C < 10,000,000  0 < Time taken by the hobbits to the holes < 10,000,000  Time Limit: 2s  Memory Limit: 64MB  Sample Input:  2  3 3 2 10  9 11 13  2 10 14  12 15 12  4 3 3 8  1 10 100  1 10 100  100 100 6  12 10 10  Sample Output:  10  9  Notes/Explanation of Sample Input:  For the first test case, there are 3 hobbits and 3 holes, and we need to get atleast 2 of them to safety. We can send the first hobbit to the first hole, and the second hobbit to the second hole, thereby taking 10 time units.  For the second test case, we can make hobbit #1 reach hole 1 at time 1, hobbit #2 reach hole 1 at time 9 (by when hobbit #1 would have finished digging the hole), and hobbit #3 reach hole 3 at time 6.  'Hush!' said Frodo. 'I think I hear hoofs again.'  They stopped suddenly and stood as silent as tree-shadows, listening. There was a sound of hoofs in the lane, some way behind, but coming slow and clear down the wind. Quickly and quietly they slipped off the path, and ran into the deeper shade under the oak-trees.  The hoofs drew nearer. They had no time to find any hiding-place better than the general darkness under the trees.  - Frodo, Sam and Pippin, when they encounter a Black Rider.    Indeed, the Black Riders are in the Shire, and they are looking for the One Ring. There are N hobbits out in their fields, but when they hear the Riders approaching, or feel the fear cast by their presence, they immediately wish to run and hide in M holes located nearby.    Now, each hole has space for just 1 hobbit; however, once a hobbit reaches a hole, he is able to make room for one more hobbit by digging away at the earth. The time required to make enough space for a second hobbit is C units. Also, each hole CANNOT hold more than 2 hobbits, even after digging. Also note that a hobbit can begin making space for the next hobbit only after he reaches the hole.    You are given the time required to travel from each hobbit's current location to each hole. Find the minimum amount of time it will take before at least K of the hobbits are hiding safely.    Input (STDIN):    The first line contains T, the number of test cases.  The first line of each test case contains 4 integers - N (no of hobbits), M (no of holes), K (minimum number of hobbits to hide) and C (time taken to expand a hole).  The next N lines contain M integers each, denoting the time taken for each hobbit to each hole.    Output (STDOUT):    Output one line per test case which contains the minimum time.    Constraints:  1 <= T <= 6  1 <= N, M <= 100  1 <= K <= min(N, 2 * M)  0 < C < 10,000,000  0 < Time taken by the hobbits to the holes < 10,000,000    Sample Input:  2  3 3 2 10  9 11 13  2 10 14  12 15 12  4 3 3 8  1 10 100  1 10 100  100 100 6  12 10 10    Sample Output:  10  9    Notes/Explanation of Sample Input:  For the first test case, there are 3 hobbits and 3 holes, and we need to get atleast 2 of them to safety. We can send the first hobbit to the first hole, and the second hobbit to the second hole, thereby taking 10 time units.  For the second test case, we can make hobbit #1 reach hole 1 at time 1, hobbit #2 reach hole 1 at time 9 (by when hobbit #1 would have finished digging the hole), and hobbit #3 reach hole 3 at time 6.     ",-0.193911024776,FINDHOLE,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012The Black Riders'Hush!' said Frodo. 'I think I hear hoofs again.'
They stopped suddenly and stood as silent as tree-shadows, listening. There was a sound of hoofs in the lane, some way behind, but coming slow and clear down the wind. Quickly and quietly they slipped off the path, and ran into the deeper shade under the oak-trees.
The hoofs drew nearer. They had no time to find any hiding-place better than the general darkness under the trees.
- Frodo, Sam and Pippin, when they encounter a Black Rider.

Indeed, the Black Riders are in the Shire, and they are looking for the One Ring. There are N hobbits out in their fields, but when they hear the Riders approaching, or feel the fear cast by their presence, they immediately wish to run and hide in M holes located nearby.

Now, each hole has space for just 1 hobbit; however, once a hobbit reaches a hole, he is able to make room for one more hobbit by digging away at the earth. The time required to make enough space for a second hobbit is C units. Also, each hole CANNOT hold more than 2 hobbits, even after digging. Also note that a hobbit can begin making space for the next hobbit only after he reaches the hole.

You are given the time required to travel from each hobbit's current location to each hole. Find the minimum amount of time it will take before at least K of the hobbits are hiding safely.The first line contains T, the number of test cases.
The first line of each test case contains 4 integers - N (no of hobbits), M (no of holes), K (minimum number of hobbits to hide) and C (time taken to expand a hole).
The next N lines contain M integers each, denoting the time taken for each hobbit to each hole.Output one line per test case which contains the minimum time.",758,3545,0,774,0.659176029963,8,1
7923,0.0983661131497,AMR12B,"    'We fought far under the living earth, where time is not counted. Ever he clutched me, and ever I hewed him, till at last he fled into dark tunnels. Ever up now we went, until we came to the Endless Stair. Out he sprang, and even as I came behind, he burst into new flame. Those that looked up from afar thought that the mountain was crowned with storm. Thunder they heard, and lightning, they said, smote upon Celebdil, and leaped back broken into tongues of fire.' - Gandalf, describing his fight against the Balrog.  Although Gandalf would not go into the details of his battle, they can be summarized into the following simplified form: both Gandalf and the Balrog have a set of N attacks they can use (spells, swords, brute-force strength etc.). These attacks are numbered from 1 to N in increasing order of Power. When each has chosen an attack, in general, the one with the higher power wins. However, there are a few (""M"") anomalous pairs of attacks, in which the lesser-powered attack wins.  Initially, Gandalf picks an attack. Then the Balrog counters it with one of the remaining attacks. If the Balrog's counter does not defeat Gandalf's, then we say Gandalf receives a score of 2. If however it does, then Gandalf has exactly one more opportunity to pick an attack that will defeat the Balrog's. If he manages to defeat him now, his score will be 1, whereas if he is still unable to defeat him, his score will be 0.  Your task is to determine, given N and the M anomalous pairs of attacks, what will be Gandalf's score, given that both play optimally. Further, in case Gandalf gets a score of 2, you must also determine which attack he could have chosen as his first choice.  Note 1: The Balrog can choose only one attack, whereas Gandalf can choose upto two.  Note 2: The relation A defeats B is not transitive within the attacks. For example, attack A can defeat attack B, attack B can defeat attack C, and attack C can defeat attack A.  Note 3: Between any two attacks A and B, either attack A defeats attack B or attack B defeats attack A.  Input (STDIN):  The first line will consist of the integer T, the number of test-cases.  Each test case begins with a single line containing two integers N and M.  This is followed by M lines consisting of 2 integers each x and y, denoting that x and y are an anomalous pair.  Output (STDOUT):  For each test-case, output a single line either  2 A, if Gandalf can defeat any attack the Balrog chooses if he picks attack A,  1, if Gandalf can choose an attack such that even if the Balrog chooses an attack to defeat him, he can choose an attack to defeat the Balrog's chosen card,  0, if none of the above two options are possible for all possible choices of Gandalf's attack(s).  Between successive test cases, there should not be any blank lines in the output.  Constraints:  1 <= T <= 15  3 <= N <= 1,000,000  0 <= M <= min(N(N-1)/2, 300,000)  1 <= x < y <= N for all the anomalous pairs (x,y)  The sum of M over all test-cases will not exceed 300,000.  Time Limit: 4s  Memory Limit: 64MB  Sample Input:  2  3 0  3 1  1 3  Sample Output:  2 3  1  Notes/Explanation of Sample Input:  In the first case, attack 3 can beat both attacks 1 and 2. So Gandalf just chooses attack 3.  In the second case, attack 1 beats 3 which beats 2 which beats 1. No matter which attack Gandalf chooses, the Balrog can pick the one which defeats his, but then he can pick the remaining attack and defeat the Balrog's.  'We fought far under the living earth, where time is not counted. Ever he clutched me, and ever I hewed him, till at last he fled into dark tunnels. Ever up now we went, until we came to the Endless Stair. Out he sprang, and even as I came behind, he burst into new flame. Those that looked up from afar thought that the mountain was crowned with storm. Thunder they heard, and lightning, they said, smote upon Celebdil, and leaped back broken into tongues of fire.' - Gandalf, describing his fight against the Balrog.    Although Gandalf would not go into the details of his battle, they can be summarized into the following simplified form: both Gandalf and the Balrog have a set of N attacks they can use (spells, swords, brute-force strength etc.). These attacks are numbered from 1 to N in increasing order of Power. When each has chosen an attack, in general, the one with the higher power wins. However, there are a few (""M"") anomalous pairs of attacks, in which the lesser-powered attack wins.    Initially, Gandalf picks an attack. Then the Balrog counters it with one of the remaining attacks. If the Balrog's counter does not defeat Gandalf's, then we say Gandalf receives a score of 2. If however it does, then Gandalf has exactly one more opportunity to pick an attack that will defeat the Balrog's. If he manages to defeat him now, his score will be 1, whereas if he is still unable to defeat him, his score will be 0.    Your task is to determine, given N and the M anomalous pairs of attacks, what will be Gandalf's score, given that both play optimally. Further, in case Gandalf gets a score of 2, you must also determine which attack he could have chosen as his first choice.    Note 1: The Balrog can choose only one attack, whereas Gandalf can choose upto two.  Note 2: The relation A defeats B is not transitive within the attacks. For example, attack A can defeat attack B, attack B can defeat attack C, and attack C can defeat attack A.  Note 3: Between any two attacks A and B, either attack A defeats attack B or attack B defeats attack A.    Input (STDIN):  The first line will consist of the integer T, the number of test-cases.  Each test case begins with a single line containing two integers N and M.  This is followed by M lines consisting of 2 integers each x and y, denoting that x and y are an anomalous pair.    Output (STDOUT):  For each test-case, output a single line either  2 A, if Gandalf can defeat any attack the Balrog chooses if he picks attack A,  1, if Gandalf can choose an attack such that even if the Balrog chooses an attack to defeat him, he can choose an attack to defeat the Balrog's chosen card,  0, if none of the above two options are possible for all possible choices of Gandalf's attack(s).  Between successive test cases, there should not be any blank lines in the output.    Constraints:  1 <= T <= 15  3 <= N <= 1,000,000  0 <= M <= min(N(N-1)/2, 300,000)  1 <= x < y <= N for all the anomalous pairs (x,y)  The sum of M over all test-cases will not exceed 300,000.    Sample Input:  2  3 0  3 1  1 3    Sample Output:  2 3  1    Notes/Explanation of Sample Input:  In the first case, attack 3 can beat both attacks 1 and 2. So Gandalf just chooses attack 3.  In the second case, attack 1 beats 3 which beats 2 which beats 1. No matter which attack Gandalf chooses, the Balrog can pick the one which defeats his, but then he can pick the remaining attack and defeat the Balrog's.     ",-0.169947238092,ATKCTR,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012Gandalf vs the Balrog'We fought far under the living earth, where time is not counted. Ever he clutched me, and ever I hewed him, till at last he fled into dark tunnels. Ever up now we went, until we came to the Endless Stair. Out he sprang, and even as I came behind, he burst into new flame. Those that looked up from afar thought that the mountain was crowned with storm. Thunder they heard, and lightning, they said, smote upon Celebdil, and leaped back broken into tongues of fire.' - Gandalf, describing his fight against the Balrog.

Although Gandalf would not go into the details of his battle, they can be summarized into the following simplified form: both Gandalf and the Balrog have a set of N attacks they can use (spells, swords, brute-force strength etc.). These attacks are numbered from 1 to N in increasing order of Power. When each has chosen an attack, in general, the one with the higher power wins. However, there are a few (""M"") anomalous pairs of attacks, in which the lesser-powered attack wins.

Initially, Gandalf picks an attack. Then the Balrog counters it with one of the remaining attacks. If the Balrog's counter does not defeat Gandalf's, then we say Gandalf receives a score of 2. If however it does, then Gandalf has exactly one more opportunity to pick an attack that will defeat the Balrog's. If he manages to defeat him now, his score will be 1, whereas if he is still unable to defeat him, his score will be 0.

Your task is to determine, given N and the M anomalous pairs of attacks, what will be Gandalf's score, given that both play optimally. Further, in case Gandalf gets a score of 2, you must also determine which attack he could have chosen as his first choice.

Note 1: The Balrog can choose only one attack, whereas Gandalf can choose upto two.
Note 2: The relation A defeats B is not transitive within the attacks. For example, attack A can defeat attack B, attack B can defeat attack C, and attack C can defeat attack A.
Note 3: Between any two attacks A and B, either attack A defeats attack B or attack B defeats attack A.The first line will consist of the integer T, the number of test-cases.
Each test case begins with a single line containing two integers N and M.
This is followed by M lines consisting of 2 integers each x and y, denoting that x and y are an anomalous pair.For each test-case, output a single line either
2 A, if Gandalf can defeat any attack the Balrog chooses if he picks attack A,
1, if Gandalf can choose an attack such that even if the Balrog chooses an attack to defeat him, he can choose an attack to defeat the Balrog's chosen one,
0, if none of the above two options are possible for all possible choices of Gandalf's attack(s).
Between successive test cases, there should not be any blank lines in the output.",759,4048,0,863,0.736196319018,5,1
7958,3.78545592229,AMR12D,"  With water from the stream Galadriel filled the basin to the brim, and breathed on it, and when the water was still again she spoke. 'Here is the Mirror of Galadriel,' she said. 'I have brought you here so that you may look in it, if you will. For this is what your folk would call magic, I believe; though I do not understand clearly what they mean; and they seem also to use the same word of the deceits of the Enemy. But this, if you will, is the magic of Galadriel. Did you not say that you wished to see Elf-magic?' - Galadriel to Frodo and Sam, describing her Mirror.  We call a string S magical if every substring of S appears in Galadriel's Mirror (under lateral inversion). In other words, a magical string is a string where every substring has its reverse in the string.  Given a string S, determine if it is magical or not.   The first line contains T, the number of test cases. The next T lines contain a string each.   For each test case, output "" YES "" if the string is magical, and "" NO "" otherwise.  Constraints  1 
1 
S contains only lower-case characters.  Example  Sample Input: 2
aba
ab Sample Output: YES
NO  Notes / Explanation of Sample Input  For the first test case, the list of substrings are : a, b, ab, ba, aba. The reverse of each of these strings is present as a substring of S too.  For the second test case, the list of substring are : a, b, ab. The reverse of ""ab"", which is ""ba"" is not present as a substring of the string. ",-0.00886438926522,MSTRINGS,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012The Mirror of GaladrielWith water from the stream Galadriel filled the basin to the brim, and breathed on it, and when the water was still again she spoke. 'Here is the Mirror of Galadriel,' she said. 'I have brought you here so that you may look in it, if you will. For this is what your folk would call magic, I believe; though I do not understand clearly what they mean; and they seem also to use the same word of the deceits of the Enemy. But this, if you will, is the magic of Galadriel. Did you not say that you wished to see Elf-magic?' - Galadriel to Frodo and Sam, describing her Mirror.

We call a string S magical if every substring of S appears in Galadriel's Mirror (under lateral inversion). In other words, a magical string is a string where every substring has its reverse in the string.

Given a string S, determine if it is magical or not.The first line contains T, the number of test cases. The next T lines contain a string each.For each test case, output ""YES"" if the string is magical, and ""NO"" otherwise.",760,4770,0,96,0.649717514124,7,1
8027,-0.299521276326,AMR12F,"    'Though the Stewards deemed that it was a secret kept only by themselves, long ago I guessed that here in the White Tower, one at least of the Seven Seeing Stones was preserved. In the days of his wisdom Denethor did not presume to use it, nor to challenge Sauron, knowing the limits of his own strength. But his wisdom failed; and I fear that as the peril of his realm grew he looked in the Stone and was deceived: far too often, I guess, since Boromir departed. He was too great to be subdued to the will of the Dark Power, he saw nonetheless only those things which that Power permitted him to see.' - Gandalf.  Sauron and Saruman have been communicating from large distances using the Seeing Stones. Denethor, with great difficulty has been able to break into their channel of communication using his strength of will. Despite this however, it seems that their communication has been encrypted. Gondor's spies in Isengard have found out the encryption algorithm they use and have reported back to Denethor.  The algorithm is as follows :  We refer to a dequeue as a double-ended queue. We define a ""dequeue permutation of N"" as a permutation of 1 to N that can be got by starting from a dequeue having elements 1, 2, 3, ..., N (in that order with 1 at the front and N at the back) and performing any sequence of N pop_front() or pop_back() operations.  Note that not all permutations of 1 to N are dequeue permutations. For example, with N = 3, you have 3-1-2, 1-3-2 etc. as dequeue permutations whereas 2-1-3, 2-3-1 aren't (you can't have 2 right at the beginning since its not at any end of the dequeue).  If Sauron wants to encrypt the number K and send it to Saruman, he would instead send the K'th lexicographically smallest (0-based indexed) dequeue permutation of N. That is, if Sauron wanted to send '0' to Saruman, he would just send 1-2-3-...-N (since this is clearly the smallest lexicographic dequeue permutation of N).  Sauron is transmitting the size of his army to Saruman, so that they can coordinate an attack on the Men of Rohan and Gondor. Since Sauron's will is so powerful, Denethor is able to get only vague glimpses of the numbers, and he is able to remember only the first half (floor(N/2) elements) of the permutation. Further, since these images are so vague, his understanding of the numbers happens out of order. For example, Denethor may understand that the 5th number of the permutation is 4, and later on only understand that the 3rd number was 3.  Help him estimate the minimum and maximum possible size of Sauron's army (value of K), given the number N, and incremental understanding of the first half of the permutation, not necessarily in order.  NOTE 1: Since the values to be output can be rather large, output the values modulo 1,000,000,007.  NOTE 2: It may be the case that Denethor's understanding of the permutation is flawed. If it is not possible to have a dequeue permutation satisfying all the conditions seen so far, output -1.  NOTE 3: A permutation p1 is lexicographically smaller than p2 if at the first position where they differ, p1's value is smaller than p2's.  Input (STDIN):  The first line consists of the integer T, the number of test cases.  Each test case begins with a single integer N.  This is followed by exactly floor(N/2) lines containing 2 integers each: i and j, denoting that Denethor has understood that the i'th element (1-based) of the supposed permutation is j.  Output (STDOUT):  For each testcase, output exactly floor(N/2) lines, one for each (i,j) pair. If the recollections till now cannot all be feasible, output '-1' on a line. Else output two space-separated integers: the minimum and the maximum possible value of Sauron's army, K, that are consistent with all the observations seen so far.  Between successive test cases, there should not be any blank lines in the output.  Constraints:  1 <= T < 3  2 <= N <= 100,000  1 <= i <= floor(N/2)  1 <= j <= N  All (i, j) pairs are distinct. And for two pairs (i1, j1) and (i2, j2), you have that i1 != i2 and j1 != j2.  Sample Input:  2  3  1 3  32  1 1  3 2  2 32  4 4  5 5  6 6  7 7  8 8  9 9  10 10  11 11  12 12  13 13  14 14  15 15  16 3  Sample Output:  2 3  0 73741816  536870912 805306367  536870912 805306367  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  Notes/Explanation of Sample Input:  For the first test case, for N = 3, there are 4 dequeue permutations, lexicographically ordered as 1-2-3, 1-3-2, 3-1-2, and 3-2-1. Denethor sees the first number of the dequeue permutation as 3, and concludes that the permutation can be either 3-1-2, or 3-2-1.  In the second test case, we see that  (a) the 1st number is 1.  (b) the 3rd number is 2 ... this means that the 2nd number has to be 32.  (c) the 2nd number is 32 ... this does not add any new information.  (d) the 4th number is 4. But this is not possible, since the 4th number can now either be 3 or 31.  Hence it is inconsistent (and none of the further observations can make it consistent).  Also notice that in the 2nd test-case, the values have been output modulo 1,000,000,007.  'Though the Stewards deemed that it was a secret kept only by themselves, long ago I guessed that here in the White Tower, one at least of the Seven Seeing Stones was preserved. In the days of his wisdom Denethor did not presume to use it, nor to challenge Sauron, knowing the limits of his own strength. But his wisdom failed; and I fear that as the peril of his realm grew he looked in the Stone and was deceived: far too often, I guess, since Boromir departed. He was too great to be subdued to the will of the Dark Power, he saw nonetheless only those things which that Power permitted him to see.' - Gandalf.  Sauron and Saruman have been communicating from large distances using the Seeing Stones. Denethor, with great difficulty has been able to break into their channel of communication using his strength of will. Despite this however, it seems that their communication has been encrypted. Gondor's spies in Isengard have found out the encryption algorithm they use and have reported back to Denethor.    The algorithm is as follows :  We refer to a dequeue as a double-ended queue. We define a ""dequeue permutation of N"" as a permutation of 1 to N that can be got by starting from a dequeue having elements 1, 2, 3, ..., N (in that order with 1 at the front and N at the back) and performing any sequence of N pop_front() or pop_back() operations.  Note that not all permutations of 1 to N are dequeue permutations. For example, with N = 3, you have 3-1-2, 1-3-2 etc. as dequeue permutations whereas 2-1-3, 2-3-1 aren't (you can't have 2 right at the beginning since its not at any end of the dequeue).    If Sauron wants to encrypt the number K and send it to Saruman, he would instead send the K'th lexicographically smallest (0-based indexed) dequeue permutation of N. That is, if Sauron wanted to send '0' to Saruman, he would just send 1-2-3-...-N (since this is clearly the smallest lexicographic dequeue permutation of N).  Sauron is transmitting the size of his army to Saruman, so that they can coordinate an attack on the Men of Rohan and Gondor. Since Sauron's will is so powerful, Denethor is able to get only vague glimpses of the numbers, and he is able to remember only the first half (floor(N/2) elements) of the permutation. Further, since these images are so vague, his understanding of the numbers happens out of order. For example, Denethor may understand that the 5th number of the permutation is 4, and later on only understand that the 3rd number was 3.    Help him estimate the minimum and maximum possible size of Sauron's army (value of K), given the number N, and incremental understanding of the first half of the permutation, not necessarily in order.    NOTE 1 : Since the values to be output can be rather large, output the values modulo 1,000,000,007.  NOTE 2 : It may be the case that Denethor's understanding of the permutation is flawed. If it is not possible to have a dequeue permutation satisfying all the conditions seen so far, output -1.  NOTE 3 : A permutation p1 is lexicographically smaller than p2 if at the first position where they differ, p1's value is smaller than p2's.    Input (STDIN):  The first line consists of the integer T, the number of test cases.  Each test case begins with a single integer N.  This is followed by exactly floor(N/2) lines containing 2 integers each: i and j, denoting that Denethor has understood that the i'th element (1-based) of the supposed permutation is j.    Output (STDOUT):  For each testcase, output exactly floor(N/2) lines, one for each (i,j) pair. If the recollections till now cannot all be feasible, output '-1' on a line. Else output two space-separated integers: the minimum and the maximum possible value of Sauron's army, K, that are consistent with all the observations seen so far.  Between successive test cases, there should not be any blank lines in the output.    Constraints:  1 <= T < 3  2 <= N <= 100,000  1 <= i <= floor(N/2)  1 <= j <= N  All (i, j) pairs are distinct. And for two pairs (i1, j1) and (i2, j2), you have that i1 != i2 and j1 != j2.    Sample Input:  2  3  1 3  32  1 1  3 2  2 32  4 4  5 5  6 6  7 7  8 8  9 9  10 10  11 11  12 12  13 13  14 14  15 15  16 3    Sample Output:  2 3  0 73741816  536870912 805306367  536870912 805306367  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1    Notes/Explanation of Sample Input:  For the first test case, for N = 3, there are 4 dequeue permutations, lexicographically ordered as 1-2-3, 1-3-2, 3-1-2, and 3-2-1. Denethor sees the first number of the dequeue permutation as 3, and concludes that the permutation can be either 3-1-2, or 3-2-1.  In the second test case, we see that  (a) the 1st number is 1.  (b) the 3rd number is 2 ... this means that the 2nd number has to be 32.  (c) the 2nd number is 32 ... this does not add any new information.  (d) the 4th number is 4. But this is not possible, since the 4th number can now either be 3 or 31.  Hence it is inconsistent (and none of the further observations can make it consistent).  Also notice that in the 2nd test-case, the values have been output modulo 1,000,000,007.     ",-0.207700557713,DQPERMS,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012Denethor's Decryption of Dequeue permutations'Though the Stewards deemed that it was a secret kept only by themselves, long ago I guessed that here in the White Tower, one at least of the Seven Seeing Stones was preserved. In the days of his wisdom Denethor did not presume to use it, nor to challenge Sauron, knowing the limits of his own strength. But his wisdom failed; and I fear that as the peril of his realm grew he looked in the Stone and was deceived: far too often, I guess, since Boromir departed. He was too great to be subdued to the will of the Dark Power, he saw nonetheless only those things which that Power permitted him to see.' - Gandalf.

Sauron and Saruman have been communicating from large distances using the Seeing Stones. Denethor, with great difficulty has been able to break into their channel of communication using his strength of will. Despite this however, it seems that their communication has been encrypted. Gondor's spies in Isengard have found out the encryption algorithm they use and have reported back to Denethor.

The algorithm is as follows :
We refer to a dequeue as a double-ended queue. We define a ""dequeue permutation of N"" as a permutation of 1 to N that can be got by starting from a dequeue having elements 1, 2, 3, ..., N (in that order with 1 at the front and N at the back) and performing any sequence of N pop_front() or pop_back() operations.

Note that not all permutations of 1 to N are dequeue permutations. For example, with N = 3, you have 3-1-2, 1-3-2 etc. as dequeue permutations whereas 2-1-3, 2-3-1 aren't (you can't have 2 right at the beginning since its not at any end of the dequeue).

If Sauron wants to encrypt the number K and send it to Saruman, he would instead send the K'th lexicographically smallest (0-based indexed) dequeue permutation of N. That is, if Sauron wanted to send '0' to Saruman, he would just send 1-2-3-...-N (since this is clearly the smallest lexicographic dequeue permutation of N).

Sauron is transmitting the size of his army to Saruman, so that they can coordinate an attack on the Men of Rohan and Gondor. Since Sauron's will is so powerful, Denethor is able to get only vague glimpses of the numbers, and he is able to remember only the first half (floor(N/2) elements) of the permutation. Further, since these images are so vague, his understanding of the numbers happens out of order. For example, Denethor may understand that the 5th number of the permutation is 4, and later on only understand that the 3rd number was 3.

Help him estimate the minimum and maximum possible size of Sauron's army (value of K), given the number N, and incremental understanding of the first half of the permutation, not necessarily in order.

NOTE 1: Since the values to be output can be rather large, output the values modulo 1,000,000,007.

NOTE 2: It may be the case that Denethor's understanding of the permutation is flawed. If it is not possible to have a dequeue permutation satisfying all the conditions seen so far, output -1.

NOTE 3: A permutation p1 is lexicographically smaller than p2 if at the first position where they differ, p1's value is smaller than p2's.The first line consists of the integer T, the number of test cases.
Each test case begins with a single integer N.
This is followed by exactly floor(N/2) lines containing 2 integers each: i and j, denoting that Denethor has understood that the i'th element (1-based) of the supposed permutation is j.For each testcase, output exactly floor(N/2) lines, one for each (i,j) pair. If the recollections till now cannot all be feasible, output '-1' on a line. Else output two space-separated integers: the minimum and the maximum possible value of Sauron's army, K, that are consistent with all the observations seen so far.
Between successive test cases, there should not be any blank lines in the output.",762,2427,0,1358,0.701525054466,7,1
8206,0.430570504997,AMR12G,"    'Strange are the ways of Men, Legolas! Here they have one of the marvels of the Northern World, and what do they say of it? Caves, they say! Caves! Holes to fly to in time of war, to store fodder in! My good Legolas, do you know that the caverns of Helm's Deep are vast and beautiful? There would be an endless pilgrimage of Dwarves, merely to gaze at them, if such things were known to be. Aye indeed, they would pay pure gold for a brief glance!  'And, Legolas, when the torches are kindled and men walk on the sandy floors under the echoing domes, ah! then, Legolas, gems and crystals and veins of precious ore glint in the polished walls; and the light glows through folded marbles, shell-like, translucent as the living hands of Queen Galadriel.' - Gimli, describing to Legolas the Glittering Caves of Aglarond.  While these caves are by and large natural, there is one place where the Men of Rohan have chiseled into the rock to create a magnificent exhibit. You have a wall of the cave consisting of 'lighted diamonds' arranged in a N by M grid (basically, you have a light behind each diamond which can be turned on or off). Further, you have a switch corresponding to each row of this diamond-grid. When you operate a switch, it will toggle (flip) the lights corresponding to that row.  You are given the current configuration of the lighted diamonds. Gimli challenges Legolas to turn on as many diamonds as possible using EXACTLY K on/off operations of the switches. Since Legolas is an Elf of the Wood and doesn't care much for things that glitter, he instead asks for your help. Note that the same switch (i.e. row) can be chosen multiple times.  Input (STDIN):  The first line contains the number of test cases T. Each test case contains N, M and K on the first line followed by N lines containing M characters each. The ith line denotes the state of the diamonds in the ith row, where '*' denotes a diamond which is on and '.' denotes a diamond which is off.  Output (STDOUT):  Output T lines containing the answer for the corresponding case.  Between successive test cases, there should not be any blank lines in the output.  Constraints:  1 <= T <= 100  1 <= N,M <= 50  1 <= K <= 100  Sample Input:  2  2 2 1  ..  **  2 2 2  ..  **  Sample Output:  4  2  Notes/Explanation of Sample Input:  In the first test case, row 1 can be toggled hence leaving all 4 lights to be in the ON state.  In the second test case, row 1 (or row 2) can be toggled twice, hence maintaining the state of the initial configuration.    'Strange are the ways of Men, Legolas! Here they have one of the marvels of the Northern World, and what do they say of it? Caves, they say! Caves! Holes to fly to in time of war, to store fodder in! My good Legolas, do you know that the caverns of Helm's Deep are vast and beautiful? There would be an endless pilgrimage of Dwarves, merely to gaze at them, if such things were known to be. Aye indeed, they would pay pure gold for a brief glance!  'And, Legolas, when the torches are kindled and men walk on the sandy floors under the echoing domes, ah! then, Legolas, gems and crystals and veins of precious ore glint in the polished walls; and the light glows through folded marbles, shell-like, translucent as the living hands of Queen Galadriel.' - Gimli, describing to Legolas the Glittering Caves of Aglarond.    While these caves are by and large natural, there is one place where the Men of Rohan have chiseled into the rock to create a magnificent exhibit. You have a wall of the cave consisting of 'lighted diamonds' arranged in a N by M grid (basically, you have a light behind each diamond which can be turned on or off). Further, you have a switch corresponding to each row of this diamond-grid. When you operate a switch, it will toggle (flip) the lights corresponding to that row.    You are given the current configuration of the lighted diamonds. Gimli challenges Legolas to turn on as many diamonds as possible using EXACTLY K on/off operations of the switches. Since Legolas is an Elf of the Wood and doesn't care much for things that glitter, he instead asks for your help. Note that the same switch (i.e. row) can be chosen multiple times.    Input (STDIN):  The first line contains the number of test cases T. Each test case contains N, M and K on the first line followed by N lines containing M characters each. The ith line denotes the state of the diamonds in the ith row, where '*' denotes a diamond which is on and '.' denotes a diamond which is off.    Output (STDOUT):  Output T lines containing the answer for the corresponding case.  Between successive test cases, there should not be any blank lines in the output.    Constraints:  1 <= T <= 100  1 <= N,M <= 50  1 <= K <= 100    Sample Input:  2  2 2 1  ..  **  2 2 2  ..  **    Sample Output:  4  2    Notes/Explanation of Sample Input:  In the first test case, row 1 can be toggled hence leaving all 4 lights to be in the ON state.  In the second test case, row 1 (or row 2) can be toggled twice, hence maintaining the state of the initial configuration.     ",-0.114732416299,LIGHTS,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012The Glittering Caves of Aglarond'Strange are the ways of Men, Legolas! Here they have one of the marvels of the Northern World, and what do they say of it? Caves, they say! Caves! Holes to fly to in time of war, to store fodder in! My good Legolas, do you know that the caverns of Helm's Deep are vast and beautiful? There would be an endless pilgrimage of Dwarves, merely to gaze at them, if such things were known to be. Aye indeed, they would pay pure gold for a brief glance!
'And, Legolas, when the torches are kindled and men walk on the sandy floors under the echoing domes, ah! then, Legolas, gems and crystals and veins of precious ore glint in the polished walls; and the light glows through folded marbles, shell-like, translucent as the living hands of Queen Galadriel.' - Gimli, describing to Legolas the Glittering Caves of Aglarond.

While these caves are by and large natural, there is one place where the Men of Rohan have chiseled into the rock to create a magnificent exhibit. You have a wall of the cave consisting of 'lighted diamonds' arranged in a N by M grid (basically, you have a light behind each diamond which can be turned on or off). Further, you have a switch corresponding to each row of this diamond-grid. When you operate a switch, it will toggle (flip) the lights corresponding to that row.

You are given the current configuration of the lighted diamonds. Gimli challenges Legolas to turn on as many diamonds as possible using EXACTLY K on/off operations of the switches. Since Legolas is an Elf of the Wood and doesn't care much for things that glitter, he instead asks for your help. Note that the same switch (i.e. row) can be chosen multiple times.The first line contains the number of test cases T. Each test case contains N, M and K on the first line followed by N lines containing M characters each. The ith line denotes the state of the diamonds in the ith row, where '*' denotes a diamond which is on and '.' denotes a diamond which is off.Output T lines containing the answer for the corresponding case.
Between successive test cases, there should not be any blank lines in the output.",763,4549,0,624,0.789285714286,6,1
8214,0.107208055138,AMR12I,"    '""For I am Saruman the Wise, Saruman Ring-maker, Saruman of Many Colours!""  'I looked then and saw that his robes, which had seemed white, were not so, but were woven of all colours. And if he moved they shimmered and changed hue so that the eye was bewildered.' - Gandalf the Grey.  And so it was that Saruman decided to brand his Uruk-hai army with the many colours that he fancied. His method of branding his army was as follows.  He straps his army of N Uruk-hai onto chairs on a conveyor belt. This conveyor belt passes through his colouring-room, and can be moved forward or backward. The Uruk-hai are numbered 0 to N-1 according to the order in which they are seated. Saruman wishes that the i'th Uruk-hai be coloured with the colour c[i].  Further, his colouring-room has space for exactly K chairs. Once the chosen K consecutive Uruk-hai are put into the room, a colour jet sprays all K of them with any fixed colour. The conveyor belt is not circular (which means that the N-1'th and the 0'th Uruk-hai are not consecutive). Note that Uruk-hai can be recoloured in this process.  Saruman wants to find out what is the minimum number of times that the jet needs to be used in order to colour his army in the required fashion. If it is not possible to colour the army in the required fashion, output -1.  Input (STDIN):  The first line contains the number of test-cases T.  Each test case consists of 2 lines. The first line contains two space-separated integers, N and K.  This is followed by a single like containing a string of length N, describing the colours of the army. The i'th character of the string denotes the colour of the i'th Uruk-hai in the army.  Output (STDOUT):  Output T lines, one for each test case containing the answer for the corresponding test case. Remember if it is not possible to colour the army as required, output -1.  Constraints:  1 <= T <= 50  1 <= K <= N <= 20,000  The string c has length exactly N and contains only the characters 'a',...,'z'.  Sample Input:  2  3 2  rgg  3 3  rgg  Sample Output:  2  -1  Notes/Explanation of Sample Input:  In the first test case, soldiers 0 and 1 can first be painted with 'r', and then soldiers 1 and 2 can be painted with 'g'.  In the second test case, since N = K, all the soldiers will only have the same color.    '""For I am Saruman the Wise, Saruman Ring-maker, Saruman of Many Colours!""  'I looked then and saw that his robes, which had seemed white, were not so, but were woven of all colours. And if he moved they shimmered and changed hue so that the eye was bewildered.' - Gandalf the Grey.  And so it was that Saruman decided to brand his Uruk-hai army with the many colours that he fancied. His method of branding his army was as follows.  He straps his army of N Uruk-hai onto chairs on a conveyor belt. This conveyor belt passes through his colouring-room, and can be moved forward or backward. The Uruk-hai are numbered 0 to N-1 according to the order in which they are seated. Saruman wishes that the i'th Uruk-hai be coloured with the colour c[i].  Further, his colouring-room has space for exactly K chairs. Once the chosen K consecutive Uruk-hai are put into the room, a colour jet sprays all K of them with any fixed colour. The conveyor belt is not circular (which means that the N-1'th and the 0'th Uruk-hai are not consecutive). Note that Uruk-hai can be recoloured in this process.    Saruman wants to find out what is the minimum number of times that the jet needs to be used in order to colour his army in the required fashion. If it is not possible to colour the army in the required fashion, output -1.    Input (STDIN):  The first line contains the number of test-cases T.  Each test case consists of 2 lines. The first line contains two space-separated integers, N and K.  This is followed by a single like containing a string of length N, describing the colours of the army. The i'th character of the string denotes the colour of the i'th Uruk-hai in the army.    Output (STDOUT):  Output T lines, one for each test case containing the answer for the corresponding test case. Remember if it is not possible to colour the army as required, output -1.    Constraints:  1 <= T <= 50  1 <= K <= N <= 20,000  The string c has length exactly N and contains only the characters 'a',...,'z'.    Sample Input:  2  3 2  rgg  3 3  rgg    Sample Output:  2  -1    Notes/Explanation of Sample Input:  In the first test case, soldiers 0 and 1 can first be painted with 'r', and then soldiers 1 and 2 can be painted with 'g'.  In the second test case, since N = K, all the soldiers will only have the same color.     ",-0.15876995696,CBLOCKS,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012Saruman of Many Colours'""For I am Saruman the Wise, Saruman Ring-maker, Saruman of Many Colours!""
'I looked then and saw that his robes, which had seemed white, were not so, but were woven of all colours. And if he moved they shimmered and changed hue so that the eye was bewildered.' - Gandalf the Grey.

And so it was that Saruman decided to brand his Uruk-hai army with the many colours that he fancied. His method of branding his army was as follows.
He straps his army of N Uruk-hai onto chairs on a conveyor belt. This conveyor belt passes through his colouring-room, and can be moved forward or backward. The Uruk-hai are numbered 0 to N-1 according to the order in which they are seated. Saruman wishes that the i'th Uruk-hai be coloured with the colour c[i].
Further, his colouring-room has space for exactly K chairs. Once the chosen K consecutive Uruk-hai are put into the room, a colour jet sprays all K of them with any fixed colour. The conveyor belt is not circular (which means that the N-1'th and the 0'th Uruk-hai are not consecutive). Note that Uruk-hai can be recoloured in this process.

Saruman wants to find out what is the minimum number of times that the jet needs to be used in order to colour his army in the required fashion. If it is not possible to colour the army in the required fashion, output -1.The first line contains the number of test-cases T.
Each test case consists of 2 lines. The first line contains two space-separated integers, N and K.
This is followed by a single line containing a string c of length N, describing the colours of the army. The i'th character of c denotes the colour of the i'th Uruk-hai in the army.Output T lines, one for each test case containing the answer for the corresponding test case. Remember if it is not possible to colour the army as required, output -1.",764,4269,0,590,0.714912280702,7,1
8226,-0.250259028105,AMR12J,"    It was after nightfall when they had entered the Mines. They had been going for several hours with only brief halts, when Gandalf came to his first serious check. Before him stood a wide dark arch opening into three passages: all led in the same general direction, eastwards; but the left-hand passage plunged down, while the right-hand climbed up, and the middle way seemed to run on, smooth and level but very narrow. - The Fellowship of the Ring are lost in the Mines.  The Mines of Moria are a true testament of Dwarvish genius. And the Fellowship of the Ring are lost in the maze of rooms, halls and caverns. You have managed to acquire a copy of the blueprints, and if only you were part of the Fellowship, Gandalf need not have had to face the Balrog!  In this problem, we consider the Mines as consisting of rectangular rooms with their sides aligned parallel to the X (West-East) and Y (South-North) axes. Some rooms are situated within other rooms. The boundaries of any two rooms have no point in common. The rooms are numbered 0 to N-1. Your task is to determine for each room i, which room would you enter if you exit room i. If you exit into the open, output -1.  For example, if the blueprints of the Mines looked like:  Then, you should determine that:  Room 0 exits into the open (-1)  Room 1 exits into Room 0  Room 2 exits into Room 1  Room 3 exits into the open (-1)  Input (STDIN):  The first line contains an integer N followed by N lines. The i'th line defines the coordinates of the i'th room in the mines: x1_i, y1_i, x2_i, y2_i, where (x1_i, y1_i) are the coordinates of the southwest corner and (x2_i, y2_i) are the coordinates of the northeast corner of the i'th room.  Output (STDOUT):  Output N lines, the i'th line containing the number of the room into which the i'th room exits. Output -1 if the i'th room exits into the open.  Constraints:  1 <= N <= 100,000  0 <= x1_i < x2_i <= 1,000,000,000  0 <= y1_i < y2_i <= 1,000,000,000  The borders of no two rooms have any point in common.  Sample Input:  4  0 0 10 10  2 3 7 8  3 4 5 6  12 10 13 15  Sample Output:  -1  0  1  -1  Notes/Explanation of Sample Input:  Given in the diagram.  It was after nightfall when they had entered the Mines. They had been going for several hours with only brief halts, when Gandalf came to his first serious check. Before him stood a wide dark arch opening into three passages: all led in the same general direction, eastwards; but the left-hand passage plunged down, while the right-hand climbed up, and the middle way seemed to run on, smooth and level but very narrow. - The Fellowship of the Ring are lost in the Mines.    The Mines of Moria are a true testament of Dwarvish genius. And the Fellowship of the Ring are lost in the maze of rooms, halls and caverns. You have managed to acquire a copy of the blueprints, and if only you were part of the Fellowship, Gandalf need not have had to face the Balrog!    In this problem, we consider the Mines as consisting of rectangular rooms with their sides aligned parallel to the X (West-East) and Y (South-North) axes. Some rooms are situated within other rooms. The boundaries of any two rooms have no point in common. The rooms are numbered 0 to N-1. Your task is to determine for each room i, which room would you enter if you exit room i. If you exit into the open, output -1.    For example, if the blueprints of the Mines looked like:    -----  |   |  |   |  -----3    -------------------  |   -------    |  |  |    |   |  |  | []  |   |  |  |  2 |   |  |   -------1   |  |          |  ------------------0    Then, you should determine that:  Room 0 exits into the open (-1)  Room 1 exits into Room 0  Room 2 exits into Room 1  Room 3 exits into the open (-1)    Input (STDIN):  The first line contains an integer N followed by N lines. The i'th line defines the coordinates of the i'th room in the mines: x1_i, y1_i, x2_i, y2_i, where (x1_i, y1_i) are the coordinates of the southwest corner and (x2_i, y2_i) are the coordinates of the northeast corner of the i'th room.    Output (STDOUT):  Output N lines, the i'th line containing the number of the room into which the i'th room exits. Output -1 if the i'th room exits into the open.    Constraints:  1 <= N <= 100,000  0 <= x1_i < x2_i <= 1,000,000,000  0 <= y1_i < y2_i <= 1,000,000,000  The borders of no two rooms have any point in common.    Sample Input:  4  0 0 10 10  2 3 7 8  3 4 5 6  12 10 13 15    Sample Output:  -1  0  1  -1    Notes/Explanation of Sample Input:  Given in the diagram.     ",-0.199248908496,RNEST,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012Escape from the MinesIt was after nightfall when they had entered the Mines. They had been going for several hours with only brief halts, when Gandalf came to his first serious check. Before him stood a wide dark arch opening into three passages: all led in the same general direction, eastwards; but the left-hand passage plunged down, while the right-hand climbed up, and the middle way seemed to run on, smooth and level but very narrow. - The Fellowship of the Ring are lost in the Mines.

The Mines of Moria are a true testament of Dwarvish genius. And the Fellowship of the Ring are lost in the maze of rooms, halls and caverns. You have managed to acquire a copy of the blueprints, and if only you were part of the Fellowship, Gandalf need not have had to face the Balrog!

In this problem, we consider the Mines as consisting of rectangular rooms with their sides aligned parallel to the X (West-East) and Y (South-North) axes. Some rooms are situated within other rooms. The boundaries of any two rooms have no point in common. The rooms are numbered 0 to N-1. Your task is to determine for each room i, which room would you enter if you exit room i. If you exit into the open, output -1.

For example, if the blueprints of the Mines looked like:



Then, you should determine that:
Room 0 exits into the open (-1)
Room 1 exits into Room 0
Room 2 exits into Room 1
Room 3 exits into the open (-1)The first line contains an integer N followed by N lines. The i'th line defines the coordinates of the i'th room in the mines: x1_i, y1_i, x2_i, y2_i, where (x1_i, y1_i) are the coordinates of the southwest corner and (x2_i, y2_i) are the coordinates of the northeast corner of the i'th room.Output N lines, the i'th line containing the number of the room into which the i'th room exits. Output -1 if the i'th room exits into the open.",765,3372,0,645,0.730923694779,6,1
8243,-0.221206933,AMR12K,"    'I think that the enemy brought his own enemy with him,' answered Aragorn. 'These are Northern Orcs from far away. Among the slain are none of the great Orcs with the strange badges. There was a quarrel, I guess: it is no uncommon thing with these foul folk. Maybe there was some dispute about the road.' - Aragorn describing the nature of Orcs.  Indeed, everyone knows that the Orcs are treacherous creatures who look for their own satisfaction and more often than not disregard the rules. The only way to keep them in line, is by maintaining the chain of command over a strict hierarchy among the ranks, wherein each Orc is responsible to his immediate superior all the way up to the army's head.  Further, the powers that be, have decided to have regular checks of their army's loyalties, just in case some Orc has been killed and all his juniors end up turning rogue!  There are N orcs, numbered 1 to N, wherein the lead orc is numbered 1.  Step 1. Randomly choose a fixed order in which to test Orcs' loyalties.  Step 2. Going in this order, you make a ""roll-call"" to check if the current Orc is alive or not.  Step 3. If the current Orc is dead, then he is marked as ""deleted"".  With this information, it is possible to tell which all Orcs will be loyal, and which won't be. However, cunning Master Wormtongue suggests the following optimization:  In step 2, if any of the considered Orc's superiors (not necessarily immediate superior) is marked as deleted, then the roll-call is not made.  Now, given this algorithm and the hierarchy of the army, along with which Orcs are dead, what is the expected number of roll-calls (taken over all possible orderings in ""Step 1"") that you save by performing this optimization?  Input (STDIN):  The first line contains T, the number of test cases.  The first line of each test case contains N, the number of orcs in the army. The next N-1 lines contain two space-separated integers u v, denoting that u is the immediate superior of v or vice-versa. The head of the army is the orc labelled 1. The next line contains m, the number of dead orcs. The next line contains m space separated integers, which are the labels of the dead orcs.  Output (STDOUT):  Output one real number for each test case containing the expected number of roll-calls that you save. The results should be accurate within an error range of 10^-6.  Constraints:  1 <= T <= 5  1 <= N <= 100,000  1 <= u, v <= N  u != v  The given set of u-v pairs form a valid chain of command. That means every Orc, except the Orc labeeled 1, has exactly one immediate superior.  Sample Input:  2  2  1 2  1  1  2  1 2  1  2  Sample Output:  0.5  0  Notes/Explanation of Sample Input:  For the first test case, the Orc labelled 1 is dead. The two possible orderings are [1, 2] and [2, 1]. With the optimization, for the order [1, 2], we save the roll-call to 2. So, the total number of roll-calls without the optimization is 4, and with the optimization is 3. Expected number of roll-calls is therefore, (4 - 3) / 2 = 0.5 .  For the second test case, the Orc labeled 2 is dead. Since he does not have any sub-ordinates, the optimization does not have any effect.    'I think that the enemy brought his own enemy with him,' answered Aragorn. 'These are Northern Orcs from far away. Among the slain are none of the great Orcs with the strange badges. There was a quarrel, I guess: it is no uncommon thing with these foul folk. Maybe there was some dispute about the road.' - Aragorn describing the nature of Orcs.    Indeed, everyone knows that the Orcs are treacherous creatures who look for their own satisfaction and more often than not disregard the rules. The only way to keep them in line, is by maintaining the chain of command over a strict hierarchy among the ranks, wherein each Orc is responsible to his immediate superior all the way up to the army's head.    Further, the powers that be, have decided to have regular checks of their army's loyalties, just in case some Orc has been killed and all his juniors end up turning rogue!    There are N orcs, numbered 1 to N, wherein the lead orc is numbered 1.  Step 1. Randomly choose a fixed order in which to test Orcs' loyalties.  Step 2. Going in this order, you make a ""roll-call"" to check if the current Orc is alive or not.  Step 3. If the current Orc is dead, then he is marked as ""deleted"".    With this information, it is possible to tell which all Orcs will be loyal, and which won't be. However, cunning Master Wormtongue suggests the following optimization:  In step 2, if any of the considered Orc's superiors (not necessarily immediate superior) is marked as deleted, then the roll-call is not made.    Now, given this algorithm and the hierarchy of the army, along with which Orcs are dead, what is the expected number of roll-calls (taken over all possible orderings in ""Step 1"") that you save by performing this optimization?    Input (STDIN):  The first line contains T, the number of test cases.  The first line of each test case contains N, the number of orcs in the army. The next N-1 lines contain two space-separated integers u v, denoting that u is the immediate superior of v or vice-versa. The head of the army is the orc labelled 1. The next line contains m, the number of dead orcs. The next line contains m space separated integers, which are the labels of the dead orcs.    Output (STDOUT):  Output one real number for each test case containing the expected number of roll-calls that you save. The results should be accurate within an error range of 10^-6.    Constraints:  1 <= T <= 5  1 <= N <= 100,000  1 <= u, v <= N  u != v  The given set of u-v pairs form a valid chain of command. That means every Orc, except the Orc labeeled 1, has exactly one immediate superior.    Sample Input:  2  2  1 2  1  1  2  1 2  1  2    Sample Output:  0.5  0    Notes/Explanation of Sample Input:  For the first test case, the Orc labelled 1 is dead. The two possible orderings are [1, 2] and [2, 1]. With the optimization, for the order [1, 2], we save the roll-call to 2. So, the total number of roll-calls without the optimization is 4, and with the optimization is 3. Expected number of roll-calls is therefore, (4 - 3) / 2 = 0.5 .  For the second test case, the Orc labeled 2 is dead. Since he does not have any sub-ordinates, the optimization does not have any effect.     ",-0.187683493759,FSSYNC,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012The Loyalty of the Orcs'I think that the enemy brought his own enemy with him,' answered Aragorn. 'These are Northern Orcs from far away. Among the slain are none of the great Orcs with the strange badges. There was a quarrel, I guess: it is no uncommon thing with these foul folk. Maybe there was some dispute about the road.' - Aragorn describing the nature of Orcs.

Indeed, everyone knows that the Orcs are treacherous creatures who look for their own satisfaction and more often than not disregard the rules. The only way to keep them in line, is by maintaining the chain of command over a strict hierarchy among the ranks, wherein each Orc is responsible to his immediate superior all the way up to the army's head.

Further, the powers that be, have decided to have regular checks of their army's loyalties, just in case some Orc has been killed and all his juniors end up turning rogue!

There are N orcs, numbered 1 to N, wherein the lead orc is numbered 1.
Step 1. Randomly choose a fixed order in which to test Orcs' loyalties.
Step 2. Going in this order, you make a ""roll-call"" to check if the current Orc is alive or not.
Step 3. If the current Orc is dead, then he is marked as ""deleted"".

With this information, it is possible to tell which all Orcs will be loyal, and which won't be. However, cunning Master Wormtongue suggests the following optimization:
In step 2, if any of the considered Orc's superiors (not necessarily immediate superior) is marked as deleted, then the roll-call is not made.

Now, given this algorithm and the hierarchy of the army, along with which Orcs are dead, what is the expected number of roll-calls (taken over all possible orderings in Step 1) that you save by performing this optimization?The first line contains T, the number of test cases.
The first line of each test case contains N, the number of orcs in the army. The next N-1 lines contain two space-separated integers u v, denoting that u is the immediate superior of v or vice-versa. The head of the army is the orc labelled 1. The next line contains m, the number of dead orcs. The next line contains m space separated integers, which are the labels of the dead orcs.Output one real number for each test case containing the expected number of roll-calls that you save. The results should be accurate within an error range of 10^-6.",766,3649,0,848,0.680124223602,6,1
8280,-0.242680220686,AMR12C,"    Hoo, ho! Good morning, Merry and Pippin!' he boomed, when he saw them. 'You sleep long. I have been many a hundred strides already today. Now we will have a drink, and go to Entmoot.'  'Where is Entmoot?' Pippin ventured to ask.  'Hoo, eh? Entmoot?' said Treebeard, turning round. 'It is not a place, it is a gathering of Ents - which does not often happen nowadays. But I have managed to make a fair number promise to come.'  Indeed, Entmoot cannot be thought of as any particular place, since where it occurs changes from time to time. The choice of the location however, follows a basic principle: Although the Ents (walking and talking Trees - ""shepherds of Fangorn Forest"") are by and large not hasty, when it comes to gathering for Entmoot, they would like to choose a location that ensures all the Ents can reach as soon as possible.  Note however, that the speed they can travel varies from Ent to Ent. Also, although Fangorn Forest has dense overgrowth, with regard to the Ents, the forest poses no obstacles.  You are given the locations of N Ents who have agreed to join in for Entmoot, as well as their speeds. You need to find out where Entmoot will occur. Formally, given the (x_i,y_i) along with speed s_i for each Ent, find the point (X, Y) such that the maximum time taken by any of the Ents to reach (X, Y) is minimized. Output the earliest time when all the Ents can meet.  Input (STDIN):  The first line contains T, the number of test cases.  The first line of each test case contains N, the number of Ents.  The next N lines contain three space-separated integers each. The ith of these lines contains : x_i, y_i, s_i.  Output (STDOUT):  Output one line per test case, containing the earliest time when the Ents can meet. Relative and absolute error of 10^-4 are acceptable.  Constraints:  1 <= T <= 10  2 <= N <= 50  -1,000,000 <= x_i, y_i <= 1,000,000  1 <= s_i <= 1,000,000  Sample Input:  4  3  0 3 3  4 0 4  -3 -4 5  3  0 10 2  0 20 2  0 40 2  3  0 100 15  0 -100 15  8 0 7  3  0 0 1  10000 0 1  5000 8661 1  Sample Output:  1.000000  7.500000  6.666667  5773.751357  Notes/Explanation of Sample Input:  In the first test case, all the ents can meet at origin in 1 unit of time.  In the second test case, the first and the third ent reach (25,0) after 7.5 units of ime, whereas the second ent reaches there after 2.5 units of time and waits for the remaining ents to arrive.  In the third test case, all the ents can meet at origin in 100/15 units of time.    Hoo, ho! Good morning, Merry and Pippin!' he boomed, when he saw them. 'You sleep long. I have been many a hundred strides already today. Now we will have a drink, and go to Entmoot.'  'Where is Entmoot?' Pippin ventured to ask.  'Hoo, eh? Entmoot?' said Treebeard, turning round. 'It is not a place, it is a gathering of Ents - which does not often happen nowadays. But I have managed to make a fair number promise to come.'    Indeed, Entmoot cannot be thought of as any particular place, since where it occurs changes from time to time. The choice of the location however, follows a basic principle: Although the Ents (walking and talking Trees - ""shepherds of Fangorn Forest"") are by and large not hasty, when it comes to gathering for Entmoot, they would like to choose a location that ensures all the Ents can reach as soon as possible.    Note however, that the speed they can travel varies from Ent to Ent. Also, although Fangorn Forest has dense overgrowth, with regard to the Ents, the forest poses no obstacles.    You are given the locations of N Ents who have agreed to join in for Entmoot, as well as their speeds. You need to find out where Entmoot will occur. Formally, given the (x_i,y_i) along with speed s_i for each Ent, find the point (X, Y) such that the maximum time taken by any of the Ents to reach (X, Y) is minimized. Output the earliest time when all the Ents can meet.    Input (STDIN):  The first line contains T, the number of test cases.  The first line of each test case contains N, the number of Ents.  The next N lines contain three space-separated integers each. The ith of these lines contains : x_i, y_i, s_i.    Output (STDOUT):  Output one line per test case, containing the earliest time when the Ents can meet. Relative and absolute error of 10^-4 are acceptable.    Constraints:  1 <= T <= 10  2 <= N <= 50  -1,000,000 <= x_i, y_i <= 1,000,000  1 <= s_i <= 1,000,000    Sample Input:  4  3  0 3 3  4 0 4  -3 -4 5  3  0 10 2  0 20 2  0 40 2  3  0 100 15  0 -100 15  8 0 7  3  0 0 1  10000 0 1  5000 8661 1    Sample Output:  1.000000  7.500000  6.666667  5773.751357    Notes/Explanation of Sample Input:  In the first test case, all the ents can meet at origin in 1 unit of time.  In the second test case, the first and the third ent reach (25,0) after 7.5 units of ime, whereas the second ent reaches there after 2.5 units of time and waits for the remaining ents to arrive.  In the third test case, all the ents can meet at origin in 100/15 units of time.     ",-0.199693732123,BALL,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012Entmoot'Hoo, ho! Good morning, Merry and Pippin!' he boomed, when he saw them. 'You sleep long. I have been many a hundred strides already today. Now we will have a drink, and go to Entmoot.'
'Where is Entmoot?' Pippin ventured to ask.
'Hoo, eh? Entmoot?' said Treebeard, turning round. 'It is not a place, it is a gathering of Ents - which does not often happen nowadays. But I have managed to make a fair number promise to come.'

Indeed, Entmoot cannot be thought of as any particular place, since where it occurs changes from time to time. The choice of the location however, follows a basic principle: Although the Ents (walking and talking Trees - ""shepherds of Fangorn Forest"") are by and large not hasty, when it comes to gathering for Entmoot, they would like to choose a location that ensures all the Ents can reach as soon as possible.

Note however, that the speed they can travel varies from Ent to Ent. Also, although Fangorn Forest has dense overgrowth, with regard to the Ents, the forest poses no obstacles.

You are given the locations of N Ents who have agreed to join in for Entmoot, as well as their speeds. You need to find out when Entmoot will occur. Formally, given the (x[i],y[i]) along with speed s[i] for each Ent, find the point (X, Y) such that the maximum time taken by any of the Ents to reach (X, Y) is minimized. Output the earliest time when all the Ents can meet.The first line contains T, the number of test cases.
The first line of each test case contains N, the number of Ents.
The next N lines contain three space-separated integers each. The ith of these lines contains : x[i], y[i], s[i].",767,3354,0,759,0.604395604396,6,1
8300,-0.264153508372,AMR12H,"    Wormtongue looked from face to face. In his eyes was the hunted look of a beast seeking some gap in the ring of his enemies.  'Nay, Eomer, you do not fully understand the mind of Master Wormtongue,' said Gandalf, turning his piercing glance upon him. 'He is bold and cunning. Even now he plays a game with peril and wins a throw.' - Gandalf, trying to figure out Wormtongue's mind.  In fact, Wormtongue's mind is a complicated system of evaluating various variables and parameters. In essence, each parameter is a uniform random floating point variable between 0 and 1 (inclusive). Further, his mind works on calculating best and worst-case values, which are equivalent to min/max of 2 expressions.  For example, right now Wormtongue is calculating :  'Chances of escaping' = max('Theoden letting me go', 'Me killing everyone')  'Theoden letting me go' = max('Theoden is forgiving by nature', 'Gandalf advises him to let me go').  'Me killing everyone' = min('Me killing Gandalf', 'Me killing Theoden').  So, you are given an expression consisting of independent uniform [0, 1] random variables, on which you have an expression consisting of ""min"", and ""max"" alone. Help Gandalf figure out Wormtongue's mind by finding the expected value of this expression.  Input (STDIN):  The first line contains T, the number of test cases.  Each test case consists of a single line describing the expression. The characters of the string are derived from the set {'M','m','x'}, where 'M' stands for max, 'm' stands for min, and 'x' is a random variable  Formally, in the expression tree, each node which asks for max is labeled as 'M', each node which asks for min is labelled 'm', and all the leaves are labeled 'x'. The description of the expression is preorder traversal of this tree.  For example, Mxmxx describes the expression max(x1, min(x2, x3)).  Output (STDOUT):  For each test case, output one line which contains the expected value of the expression. The results should be accurate within an error range of 10^-6.  Constraints:  1 <= T <= 1,000  1 <= input string length <= 100  Sample Input:  4  x  mxx  Mxx  MmxxMxx  Sample Output:  0.500000  0.333333  0.666667  0.700000  Notes/Explanation of Sample Input:  For the first test case, it asks for the mean of a random number between 0 and 1, which is 0.5.  Note:  It is recommended to use long long and long double data types in calculation to avoid precision errors.  Wormtongue looked from face to face. In his eyes was the hunted look of a beast seeking some gap in the ring of his enemies.  'Nay, Eomer, you do not fully understand the mind of Master Wormtongue,' said Gandalf, turning his piercing glance upon him. 'He is bold and cunning. Even now he plays a game with peril and wins a throw.' - Gandalf, trying to figure out Wormtongue's mind.    In fact, Wormtongue's mind is a complicated system of evaluating various variables and parameters. In essence, each parameter is a uniform random floating point variable between 0 and 1 (inclusive). Further, his mind works on calculating best and worst-case values, which are equivalent to min/max of 2 expressions.    For example, right now Wormtongue is calculating :  'Chances of escaping' = max('Theoden letting me go', 'Me killing everyone')  'Theoden letting me go' = max('Theoden is forgiving by nature', 'Gandalf advises him to let me go').  'Me killing everyone' = min('Me killing Gandalf', 'Me killing Theoden').    So, you are given an expression consisting of independent uniform [0, 1] random variables, on which you have an expression consisting of ""min"", and ""max"" alone. Help Gandalf figure out Wormtongue's mind by finding the expected value of this expression.    Input (STDIN):  The first line contains T, the number of test cases.  Each test case consists of a single line describing the expression. The characters of the string are derived from the set {'M','m','x'}, where 'M' stands for max, 'm' stands for min, and 'x' is a random variable  Formally, in the expression tree, each node which asks for max is labeled as 'M', each node which asks for min is labelled 'm', and all the leaves are labeled 'x'. The description of the expression is preorder traversal of this tree.  For example, Mxmxx describes the expression max(x1, min(x2, x3)).    Output (STDOUT):  For each test case, output one line which contains the expected value of the expression. The results should be accurate within an error range of 10^-6.    Constraints:  1 <= T <= 1,000  1 <= input string length <= 100    Sample Input:  4  x  mxx  Mxx  MmxxMxx    Sample Output:  0.500000  0.333333  0.666667  0.700000    Notes/Explanation of Sample Input:  For the first test case, it asks for the mean of a random number between 0 and 1, which is 0.5.    Note:  It is recommended to use long long and long double data types in calculation to avoid precision errors.     ",-0.201473026696,MINMAX,"ACM International Collegiate Programming Contest, Asia-Amritapuri Site, 2012Wormtongue's MindWormtongue looked from face to face. In his eyes was the hunted look of a beast seeking some gap in the ring of his enemies.
'Nay, Eomer, you do not fully understand the mind of Master Wormtongue,' said Gandalf, turning his piercing glance upon him. 'He is bold and cunning. Even now he plays a game with peril and wins a throw.' - Gandalf, trying to figure out Wormtongue's mind.

In fact, Wormtongue's mind is a complicated system of evaluating various variables and parameters. In essence, each parameter is a uniform random floating point variable between 0 and 1 (inclusive). Further, his mind works on calculating best and worst-case values, which are equivalent to min/max of 2 expressions.

For example, right now Wormtongue is calculating :
'Chances of escaping' = max('Theoden letting me go', 'Me killing everyone')
'Theoden letting me go' = max('Theoden is forgiving by nature', 'Gandalf advises him to let me go').
'Me killing everyone' = min('Me killing Gandalf', 'Me killing Theoden').

So, you are given an expression consisting of independent uniform [0, 1] random variables, on which you have an expression consisting of ""min"", and ""max"" alone. Help Gandalf figure out Wormtongue's mind by finding the expected value of this expression.The first line contains T, the number of test cases.
Each test case consists of a single line describing the expression. The characters of the string are derived from the set {'M','m','x'}, where 'M' stands for max, 'm' stands for min, and 'x' is a random variable
Formally, in the expression tree, each node which asks for max is labeled as 'M', each node which asks for min is labelled 'm', and all the leaves are labeled 'x'. The description of the expression is preorder traversal of this tree.
For example, Mxmxx describes the expression max(x1, min(x2, x3)).For each test case, output one line which contains the expected value of the expression. The results should be accurate within an error range of 10^-6.",768,3263,0,574,0.697318007663,6,1
10416,0.775540265948,PT07X,"  You are given an unweighted, undirected tree.
Write a program to find a vertex set of minimum size in this tree such that each edge has as least one of its end-points in that set.   The first line of the input file contains one integer N --- number of nodes in the tree
(0 N N-1 lines contain N -1 edges of that tree --- Each line contains a pair ( u , v ) means
there is an edge between node u and node v (1 u, v N).   Print number of nodes in the satisfied vertex set on one line.  Example 1   Input: 3
1 2
1 3 Output: 1 Explanation: The set can be {1}  Example 2   Input: 3
1 2
2 3 Output: 1 Explanation: The set can be {2} ",-0.0563094714084,PD31,"You are given an unweighted, undirected graph. Write a program to check if it's a tree topology.The first line of the input file contains two integers N and M --- number of nodes and number of edges in the graph (0 < N <= 10000, 0 <= M <= 20000). Next M lines contain M edges of that graph --- Each line contains a pair (u, v) means there is an edge between node u and node v (1 <= u,v <= N).Print YES if the given graph is a tree, otherwise print NO.",1066,4697,0,46,0.327272727273,4,1
10420,3.56187605955,PT07Y,"  You are given an unweighted, undirected graph.
Write a program to check if it's a tree topology.   The first line of the input file contains two integers N and M --- number of nodes and number of edges in the graph
(0 N M M lines contain M edges of that graph --- Each line contains a pair ( u , v ) means
there is an edge between node u and node v (1 u, v N).   Print YES if the given graph is a tree, otherwise print NO .  Example   Input: 3 2
1 2
2 3 Output: YES ",-0.0563094714084,PD31,"You are given an unweighted, undirected graph. Write a program to check if it's a tree topology.The first line of the input file contains two integers N and M --- number of nodes and number of edges in the graph (0 < N <= 10000, 0 <= M <= 20000). Next M lines contain M edges of that graph --- Each line contains a pair (u, v) means there is an edge between node u and node v (1 <= u,v <= N).Print YES if the given graph is a tree, otherwise print NO.",1067,4697,0,12,0.559523809524,4,1
10424,2.88827874646,PT07Z,"  You are given an unweighted, undirected tree.
Write a program to output the length of the longest path (from one node to another) in that tree.
The length of a path in this case is number of edges we traverse from source to destination.   The first line of the input file contains one integer N --- number of nodes in the tree
(0 N N-1 lines contain N -1 edges of that tree --- Each line contains a pair ( u , v ) means
there is an edge between node u and node v (1 u, v N).   Print the length of the longest path on one line.  Example   Input: 3
1 2
2 3 Output: 2 ",-0.0563094714084,PD31,"You are given an unweighted, undirected graph. Write a program to check if it's a tree topology.The first line of the input file contains two integers N and M --- number of nodes and number of edges in the graph (0 < N <= 10000, 0 <= M <= 20000). Next M lines contain M edges of that graph --- Each line contains a pair (u, v) means there is an edge between node u and node v (1 <= u,v <= N).Print YES if the given graph is a tree, otherwise print NO.",1068,4697,0,28,0.352941176471,4,1
10427,-0.319146662788,MATOPE,"  There is a set of points in the 2D plane. Mario starts at the point with the least X and greatest Y value, and ends at the point with the greatest X and least Y value where princess Peach is waiting for him. The rules for the movement are:  a) Mario can not move to a point with a lesser X value as compared to the X value of the point he is on.  b) For points having the same X value, Mario needs to visit the point with the greatest Y value before visiting the next point with the same X value.  So, if there are 2 points: (0,2 and 2,0) Mario would start with (0,2) - i.e. least X takes precedence over greatest Y.  c) Mario needs to visit every point in the set.    Now, Princess Peach wants you to write a code to find the distance Mario has to travel to meet her.   First line of the input would have an integer t(1<=t<=3) representing the number of test cases. A new line follows; after which the t test cases are given. Each test case starts with a blank line followed by an integer n(2<=n<=100000), which represents the number of points to follow. Following n lines would have a pair of integers (X and Y coordinates (0<=X,Y<=10000) ) separated by a single space.   For each test case, print the total distance Mario has to travel from start to finish; keeping in mind the rules mentioned above, correct to 2 decimal places.  Example  Input:  3  2  0 0  0 1 3 0 0  3 3  2 2  4  0 0  1 15  1 7  2 1  Output:  1.00 4.24
29.12  ",0.145606927079,POINTS,"You are given a set of points in the 2D plane. You start at the point with the least X and greatest Y value, and end at the point with the greatest X and least Y value. The rule for movement is that you can not move to a point with a lesser X value as compared to the X value of the point you are on. Also for points having the same X value, you need to visit the point with the greatest Y value before visiting the next point with the same X value. So, if there are 2 points: (0,4 and 4,0) we would start with (0,4) - i.e. least X takes precedence over greatest Y. You need to visit every point in the plane.You will be given an integer t(1<=t<=20) representing the number of test cases. A new line follows; after which the t test cases are given. Each test case starts with a blank line followed by an integer n(2<=n<=100000), which represents the number of points to follow. This is followed by a new line. Then follow the n points, each being a pair of integers separated by a single space; followed by a new line. The X and Y coordinates of each point will be between 0 and 10000 both inclusive.For each test case, print the total distance traveled by you from start to finish; keeping in mind the rules mentioned above, correct to 2 decimal places. The result for each test case must be on a new line.",1070,3890,0,55,0.553072625698,6,1
10661,0.413516720682,LOOPEXP,"  Consider the following pseudo-code  int a[1..N];  int max = -1;  for i = 1..N:   if(a[i] > max)   max = a[i];    Your task is to calculate the expected number of times the 'if' block of the above pseudo-code executes. The array 'a' is a random permutation of numbers from 1..N chosen uniformly at random.   First line contains t, the number of test cases. t lines follow, each containing N, the number of elements in the array.  1<= t <= 100  1<= n <=100,000   For each test case, output a single decimal. Your answer should be within 10^-6 of the correct answer.  Example  Input: 1  2 Output:   1.5  Explaination :  for N=2, you can have the following two permutations: [1,2]  and [2,1] .  for the first case the if block gets executed 2 times and for the second one the if block gets executed 1 time. So the expected  value is (3)/2 = 1.5 ",-0.209035028638,CDGNCD,"Aladdin is trying to teach coding to his Genie.
After teaching him the concepts, he gives him the following pseudo code :-int a[1..N]; 
int max = -1;
for i = 1..N:
   if(a[i] > max) 
       max = a[i];In order to assess his level of understanding, he asks his Genie to calculate the expected number of times the 'if' block of the above pseudo-code executes.
The array 'a' is a random permutation of numbers from 1..N chosen uniformly at random.First line contains t, the number of test cases. t lines follow, each containing N, the number of elements in the array.For each test case, output a single decimal.
Your answer should be within 10-6 of the correct answer.",1120,780,0,60,0.402985074627,7,1
10668,-0.174322150918,TAUT,"  Write a program that checks if the given logical expression is a tautology. The logical expression is a tautology if it is always true, regardless of logical value of its variables.   On the first line there is the number of expressions to check (at most 35). The expression is in a prefix notation, that means that operator precedes its arguments. The following logical operators will be used:  C - and 
D - or
I - implies
E - if, and only if
N - not  The variables will be lowercase letters (a-z). There will be no more than 16 different letters in the expression. The length of the expression will not exceed 111 characters.   For each expression write one word: YES if it is a tautology, NO in other case.  Example  Sample input: 7
IIpqDpNp
NCNpp
Iaz
NNNNNNNp
IIqrIIpqIpr
Ipp
Ezz Sample output: YES
YES
NO
NO
YES
YES
YES ",-0.199914452027,TAUT,"Write a program that checks if the given logical expression is a tautology. The logical expression is a tautology if it is always true, regardless of logical value of its variables.On the first line there is the number of expressions to check (at most 35). The expression is in a prefix notation, that means that operator precedes its arguments. The following logical operators will be used:C - and 
D - or
I - implies
E - if, and only if
N - notThe variables will be lowercase letters (a-z). There will be no more than 16 different letters in the expression. The length of the expression will not exceed 111 characters.For each expression write one word: YES if it is a tautology, NO in other case.",1121,4309,1,22,0.813186813187,0,1
10814,-0.294705756433,PT07B,"  You are given an unweighted, undirected tree T .
We say T is special iff it has this property:  ""All nodes of degree greater than or equal to 3 are surrounded by at most two nodes of degree two or greater.""  Finding maximal size subtree of this tree so that it's a special tree.   The first line of the input file contains one integer N --- number of nodes in the tree
(0 N 6). Next N -1 lines contain N -1 edges of that tree --- Each line contains a pair ( u , v ) means
there is an edge between node u and node v (1 u, v N).   At the first line, output number of nodes in the optimal subtree you found.
Next lines, print all edges belong to that subtree, each line contains a pair u  v means an edge between node u and node v .  Example   Input: 5
1 2
2 3
2 4
2 5 Output: 5
1 2
2 3
2 4
2 5 ",-0.0563094714084,PD31,"You are given an unweighted, undirected graph. Write a program to check if it's a tree topology.The first line of the input file contains two integers N and M --- number of nodes and number of edges in the graph (0 < N <= 10000, 0 <= M <= 20000). Next M lines contain M edges of that graph --- Each line contains a pair (u, v) means there is an edge between node u and node v (1 <= u,v <= N).Print YES if the given graph is a tree, otherwise print NO.",1151,4697,0,80,0.322580645161,4,1
10973,0.212307989936,GCJ1C09A,"  Problem  In A.D. 2100, aliens came to Earth.  They wrote a message in a  cryptic language, and next to it they wrote a series of symbols.  We've  come to the conclusion that the symbols indicate a number: the number of  seconds before war begins!  Unfortunately we have no idea what each symbol means.  We've decided  that each symbol indicates one digit, but we aren't sure what each digit  means or what base the aliens are using.  For example, if they wrote  ""ab2ac999"", they could have meant ""31536000"" in base 10 -- exactly one  year -- or they could have meant ""12314555"" in base 6 -- 398951 seconds,  or about four and a half days. We are sure of three things: the number  is positive; like us, the aliens will never start a number with a zero;  and they aren't using unary (base 1).  Your job is to determine the minimum possible number of seconds before war begins.   The first line of input contains a single integer, T . T test cases follow. Each test case is a string on a line by itself. The  line will contain only characters in the 'a' to 'z' and '0' to '9'  ranges (with no spaces and no punctuation), representing the message the  aliens left us.  The test cases are independent, and can be in  different bases with the symbols meaning different things.   For each test case, output a line in the following format:  Case # X : V  Where X is the case number (starting from 1) and V is the minimum number of seconds before war begins.  Limits  1  T  100 The answer will never exceed 10 18  1  the length of each line < 61  Sample      Input     Output      3 11001001 cats zig   Case #1: 201 Case #2: 75 Case #3: 11    ",-0.208381419904,D02,"Ancient Maya civilization Message was found during excavation process.They wrote the message in cryptic language and next to it wrote a series of symbols.We Have come to conclusion that symbols indicate a number :the number of seconds before the world ends.Unfortunately we have no idea what each symbol means.We have decided that each symbol indicates a digit, but we are not sure what each digit means or what base Maya civilization people are using. For example, if they wrote ""ab2ac999"", they could have meant ""31536000"" in base 10 -- exactly one year -- or they could have meant ""12314555"" in base 6 -- 398951 seconds, or about four and a half days. We are sure of three things: the number is positive; the Maya people will never start a number with a zero; and they aren't using unary (base 1).Your job is to determine the minimum possible number of seconds before world ends.The Input line contain only characters in the 'a' to 'z' and '0' to '9' ranges (with no spaces and no punctuation), representing the message the Maya people wrote.Display the minimum number of seconds before the world ends.Constraints:
1 ≤ the length of input line < 10",1173,2225,0,159,0.479591836735,7,1
10974,0.212307989936,GCJ1C09A,"  Problem  In A.D. 2100, aliens came to Earth.  They wrote a message in a  cryptic language, and next to it they wrote a series of symbols.  We've  come to the conclusion that the symbols indicate a number: the number of  seconds before war begins!  Unfortunately we have no idea what each symbol means.  We've decided  that each symbol indicates one digit, but we aren't sure what each digit  means or what base the aliens are using.  For example, if they wrote  ""ab2ac999"", they could have meant ""31536000"" in base 10 -- exactly one  year -- or they could have meant ""12314555"" in base 6 -- 398951 seconds,  or about four and a half days. We are sure of three things: the number  is positive; like us, the aliens will never start a number with a zero;  and they aren't using unary (base 1).  Your job is to determine the minimum possible number of seconds before war begins.   The first line of input contains a single integer, T . T test cases follow. Each test case is a string on a line by itself. The  line will contain only characters in the 'a' to 'z' and '0' to '9'  ranges (with no spaces and no punctuation), representing the message the  aliens left us.  The test cases are independent, and can be in  different bases with the symbols meaning different things.   For each test case, output a line in the following format:  Case # X : V  Where X is the case number (starting from 1) and V is the minimum number of seconds before war begins.  Limits  1  T  100 The answer will never exceed 10 18  1  the length of each line < 61  Sample      Input     Output      3 11001001 cats zig   Case #1: 201 Case #2: 75 Case #3: 11    ",-0.205377547701,SCNDWAR,"Intelligence Bureau(IB) has found an email conversation between Osama bin Laden and Al-Qaeda People in cryptic language. The email contains some encrypted message and some symbols next to it. IB people were able to decrypt the message containing details of planning for a bomb blast in Mumbai but were unable to decrypt the symbols. They have come to a conclusion that each symbol represents a digit and the decrypted symbols represents the number of seconds remaining for the bomb blast. They have to decrypt the symbols so that they can plan to vacant the site well before time.They have no idea what each symbol means. They were not sure what each digit means or what base the Al-Qaeda people were using. For example, if Al-Qaeda people wrote “mn5mo888”, they could have meant “31536000” in base 10 -- exactly 1 year or they could have meant “21325444” in base 6 -- 633700 seconds. IB people were sure of 3 things: the number is positive, number never start with zero and Al-Qaeda people were not using unary ( base 1 ).


Help the IB people to determine the minimum possible number of seconds remaining for the bomb blast.The first line of input contains a single integer, T. T test cases follow. Each test case is a string on a line by itself. The line will contain only characters in the 'a' to 'z' and '0' to '9' ranges (with no spaces and no punctuation), representing the message. The test cases are independent, and can be in different bases with the symbols meaning different things.For each test case, output a line with the minimum number of seconds before the bomb blasts.",1173,2824,0,80,0.416666666667,7,1
10982,0.0305712814297,GCJ1C09C,"            Problem  In a kingdom there are prison cells (numbered 1 to P ) built to form a straight line segment. Cells number i and i+1 are adjacent, and prisoners in adjacent cells are called ""neighbours.""    A wall with a window separates adjacent cells, and neighbours can  communicate through that window.  All prisoners live in peace until a prisoner is released.  When that  happens, the released prisoner's neighbours find out, and each  communicates this to his other neighbour.  That prisoner passes it on to his other neighbour, and so on until they reach a prisoner with no other neighbour (because he is in cell 1, or in cell P ,  or the other adjacent cell is empty).  A prisoner who discovers that  another prisoner has been released will angrily break everything in his  cell, unless he is bribed with a gold coin. So, after releasing a  prisoner in cell A , all prisoners housed on either side of cell A - until cell 1, cell P or an empty cell - need to be bribed.  Assume that each prison cell is initially occupied by exactly one  prisoner, and that only one prisoner can be released per day. Given the  list of Q prisoners to be released in Q days, find the minimum total number of gold coins needed as bribes if the prisoners may be released in any order.  Note that each bribe only has an effect for one day. If a prisoner who  was bribed yesterday hears about another released prisoner today, then  he needs to be bribed again.   The first line of input gives the number of cases, N . N test cases follow. Each case consists of 2 lines. The first line is formatted as  P Q where P is the number of prison cells and Q is the number of prisoners to be released. This will be followed by a line with Q distinct cell numbers (of the prisoners to be released), space separated, sorted in ascending order.  For each test case, output one line in the format  Case #X: C where X is the case number, starting from 1, and C is the minimum number of gold coins needed as bribes. Limits  1  N  100  Q  P Each cell number is between 1 and P , inclusive.  Large dataset  1  P  10000 1  Q  100  Sample       Input     Output      2 8 1 3 20 3 3 6 14   Case #1: 7 Case #2: 35       Note  In the second sample case, you first release the person in cell 14, then  cell 6, then cell 3. The number of gold coins needed is 19 + 12 + 4 =  35. If you instead release  the person in cell 6 first, the cost will be  19 + 4 + 13 = 36.  ",-0.207990034076,PRSN," At Area-51, USA, there is an advanced biological laboratory with compartments (numbered 1 to M) forming a straight line segment. There are genetically modified monkeys present in the lab, which can communicate with each other as humans do. Compartments number i and i+1 are adjacent, and monkeys in adjacent compartments are called ""neighbours."" A wall with a window separates adjacent compartments, and neighbours can communicate through that window.


All monkeys live in peace until a monkey is released. When that happens, the released monkey's neighbours find out, and each communicates this to his other neighbour in their own language. That monkey passes it on to his other neighbour, and so on until they reach a monkey with no other neighbour (because he is in cell 1, or in cell M, or the other adjacent cell is empty). A monkey who discovers that another monkey has been released will angrily break everything in his cell, unless he is bribed with a banana. So, after releasing a monkey in cell A, all monkeys housed on either side of cell A - until cell 1, cell M or an empty cell - need to be bribed.


Assume that each compartment is initially occupied by exactly one monkey, and that only one monkey can be released per day. Given the list of Z monkeys to be released in Z days, find the minimum total number of bananas needed as bribes if the monkeys may be released in any order.


Note that each bribe only has an effect for one day. If a monkey who was bribed yesterday finds out about another released monkey today, then he needs to be bribed again. The first line of input gives the number of cases, N. N test cases follow. Each case consists of 2 lines. The first line is as:

M Z

where M is the number of compartments and Z is the number of monkeys to be released.
This will be followed by a line with Z distinct cell numbers (of the monkeys to be released), sorted in ascending order and space separated.For each test case, output a line with the minimum number of bananas needed as bribes.",1175,2152,0,185,0.532075471698,8,1
10988,-0.318922388776,GCJ1C9CS,"           Hard version: GCJ1C09C  Problem  In a kingdom there are prison cells (numbered 1 to P ) built to form a straight line segment. Cells number i and i+1 are adjacent, and prisoners in adjacent cells are called ""neighbours.""     A wall with a window separates adjacent cells, and neighbours can   communicate through that window.  All prisoners live in peace until a prisoner is released.  When that   happens, the released prisoner's neighbours find out, and each   communicates this to his other neighbour.  That prisoner passes it on to his other neighbour, and so on until they reach a prisoner with no other neighbour (because he is in cell 1, or in cell P ,   or the other adjacent cell is empty).  A prisoner who discovers that   another prisoner has been released will angrily break everything in his   cell, unless he is bribed with a gold coin. So, after releasing a   prisoner in cell A , all prisoners housed on either side of cell A - until cell 1, cell P or an empty cell - need to be bribed.  Assume that each prison cell is initially occupied by exactly one   prisoner, and that only one prisoner can be released per day. Given the   list of Q prisoners to be released in Q days, find the minimum total number of gold coins needed as bribes if the prisoners may be released in any order.  Note that each bribe only has an effect for one day. If a prisoner  who  was bribed yesterday hears about another released prisoner today,  then  he needs to be bribed again.   The first line of input gives the number of cases, N . N test cases follow. Each case consists of 2 lines. The first line is formatted as  P Q where P is the number of prison cells and Q is the number of prisoners to be released. This will be followed by a line with Q distinct cell numbers (of the prisoners to be released), space separated, sorted in ascending order.  For each test case, output one line in the format  Case #X: C where X is the case number, starting from 1, and C is the minimum number of gold coins needed as bribes. Limits  1  N  100  Q  P Each cell number is between 1 and P , inclusive.  Small dataset 1  P  100 1  Q  5  Sample       Input     Output      2 8 1 3 20 3 3 6 14   Case #1: 7 Case #2: 35       Note  In the second sample case, you first release the person in cell 14,  then  cell 6, then cell 3. The number of gold coins needed is 19 + 12 + 4  =  35. If you instead release  the person in cell 6 first, the cost  will be  19 + 4 + 13 = 36.  ",-0.207990034076,PRSN," At Area-51, USA, there is an advanced biological laboratory with compartments (numbered 1 to M) forming a straight line segment. There are genetically modified monkeys present in the lab, which can communicate with each other as humans do. Compartments number i and i+1 are adjacent, and monkeys in adjacent compartments are called ""neighbours."" A wall with a window separates adjacent compartments, and neighbours can communicate through that window.


All monkeys live in peace until a monkey is released. When that happens, the released monkey's neighbours find out, and each communicates this to his other neighbour in their own language. That monkey passes it on to his other neighbour, and so on until they reach a monkey with no other neighbour (because he is in cell 1, or in cell M, or the other adjacent cell is empty). A monkey who discovers that another monkey has been released will angrily break everything in his cell, unless he is bribed with a banana. So, after releasing a monkey in cell A, all monkeys housed on either side of cell A - until cell 1, cell M or an empty cell - need to be bribed.


Assume that each compartment is initially occupied by exactly one monkey, and that only one monkey can be released per day. Given the list of Z monkeys to be released in Z days, find the minimum total number of bananas needed as bribes if the monkeys may be released in any order.


Note that each bribe only has an effect for one day. If a monkey who was bribed yesterday finds out about another released monkey today, then he needs to be bribed again. The first line of input gives the number of cases, N. N test cases follow. Each case consists of 2 lines. The first line is as:

M Z

where M is the number of compartments and Z is the number of monkeys to be released.
This will be followed by a line with Z distinct cell numbers (of the monkeys to be released), sorted in ascending order and space separated.For each test case, output a line with the minimum number of bananas needed as bribes.",1177,2152,0,202,0.526119402985,8,1
14117,0.413706535889,TETRA,"  Of course a Sphere Online Judge System is bound to have some tasks about spheres.
So here is one. Given the lengths of the edges of a tetrahedron
calculate the radius of a sphere inscribed in that tetrahedron
(i.e. a sphere tangent to all the faces).   Number N of test cases in a single line. ( N  N lines, each consisting of a real number given with four digits decimal precision
equal to the radius of a sphere inscribed in the given tetrahedron.  Example   Input:
2
1 1 1 1 1 1
1000 999 998 5 5 6

Output:
0.2041
1.4189 ",-0.164916890613,TETRA,"Given the lengths of the edges of a tetrahedron calculate the radius of a sphere inscribed in that tetrahedron (i.e. a sphere tangent to all the faces).An integer t, 1<=t<=30, denoting the number of test cases, followed by t lines, each containing 6 integers describing the lengths of the edges of a tetrahedron separated by single spaces. The edges are not longer than 1000 and for the tetrahedron WXYZ, the order of the edges is: WX, WY, WZ, XY, XZ, YZ.t lines, each consisting of a real number given with four digits decimal precision equal to the radius of a sphere inscribed in the given tetrahedron.",1479,3799,1,6,0.278350515464,0,1
14220,-0.295871229917,NITK04,"  Ranbir has deposited some money in Deepika's account. Deepika would like to withdraw X $US from an ATM. The ATM machine will only accept the transaction if X is a multiple of 10, and Deepika's account balance has enough cash to  perform the withdrawal transaction (including bank charges).  For each  successful withdrawal the bank charges 0.50 $US.  Calculate Deepika's account balance after an attempted transaction.   The first like contains T ( T<20), the number of Test cases followed by T line containing X and Y each.  Positive integer 0 < X <= 2000 - the amount of cash which Deepika wishes to withdraw.  Nonnegative number 0<= Y <= 2000 with two digits of precision - Deepika's initial account balance.   Output the account balance after the attempted transaction, given as a  number with two digits of precision.  If there is not enough money in  the account to complete the transaction, output the current bank  balance.  Example  Input:  2 30 120.00
42 120.00  Output: 89.50 120.00 ",-0.201890465188,VITC01," Radhika would like to withdraw X INR from an ATM. The cash machine will only accept the transaction if X is a multiple of 5, and Radhika's account balance has enough cash to perform the withdrawal transaction (including bank charges). For each successful withdrawal the bank charges 0.50 INR.
Calculate Radhika's account balance after an attempted transaction. Positive integer 0 < X <= 2000 - the amount of cash which Pooja wishes to withdraw.
Nonnegative number 0<= Y <= 2000 with two digits of precision - Pooja's initial account balance.Output the account balance after the attempted transaction, given as a number with two digits of precision. If there is not enough money in the account to complete the transaction, output the current bank balance. ",1505,2799,0,60,0.622807017544,3,1
14221,-0.295871229917,NITK04,"  Ranbir has deposited some money in Deepika's account. Deepika would like to withdraw X $US from an ATM. The ATM machine will only accept the transaction if X is a multiple of 10, and Deepika's account balance has enough cash to  perform the withdrawal transaction (including bank charges).  For each  successful withdrawal the bank charges 0.50 $US.  Calculate Deepika's account balance after an attempted transaction.   The first like contains T ( T<20), the number of Test cases followed by T line containing X and Y each.  Positive integer 0 < X <= 2000 - the amount of cash which Deepika wishes to withdraw.  Nonnegative number 0<= Y <= 2000 with two digits of precision - Deepika's initial account balance.   Output the account balance after the attempted transaction, given as a  number with two digits of precision.  If there is not enough money in  the account to complete the transaction, output the current bank  balance.  Example  Input:  2 30 120.00
42 120.00  Output: 89.50 120.00 ",-0.127314048191,ATM5," Problem description. Pooja would like to withdraw X $US from an ATM. The cash machine will only accept the transaction if X is a multiple of 5, and Pooja's account balance has enough cash to perform the withdrawal transaction (including bank charges). For each successful withdrawal the bank charges 0.50 $US.
Calculate Pooja's account balance after an attempted transaction.Positive integer 0 < X <= 2000 - the amount of cash which Pooja wishes to withdraw.
Nonnegative number 0<= Y <= 2000 with two digits of precision - Pooja's initial account balance.Output the account balance after the attempted transaction, given as a number with two digits of precision. If there is not enough money in the account to complete the transaction, output the current bank balance.",1505,3982,0,60,0.614035087719,5,1
14222,-0.295871229917,NITK04,"  Ranbir has deposited some money in Deepika's account. Deepika would like to withdraw X $US from an ATM. The ATM machine will only accept the transaction if X is a multiple of 10, and Deepika's account balance has enough cash to  perform the withdrawal transaction (including bank charges).  For each  successful withdrawal the bank charges 0.50 $US.  Calculate Deepika's account balance after an attempted transaction.   The first like contains T ( T<20), the number of Test cases followed by T line containing X and Y each.  Positive integer 0 < X <= 2000 - the amount of cash which Deepika wishes to withdraw.  Nonnegative number 0<= Y <= 2000 with two digits of precision - Deepika's initial account balance.   Output the account balance after the attempted transaction, given as a  number with two digits of precision.  If there is not enough money in  the account to complete the transaction, output the current bank  balance.  Example  Input:  2 30 120.00
42 120.00  Output: 89.50 120.00 ",-0.113553734297,MRIU11,"Problem description.Pooja would like to withdraw X $US from an ATM. The cash machine will only accept the transaction if X is a multiple of 5, and Pooja's account balance has enough cash to perform the withdrawal transaction (including bank charges). For each successful withdrawal the bank charges 0.50 $US.
Calculate Pooja's account balance after an attempted transaction.Input description.Positive integer 0 < X <= 2000 - the amount of cash which Pooja wishes to withdraw.

Nonnegative number 0<= Y <= 2000 with two digits of precision - Pooja's initial account balance.Output the account balance after the attempted transaction, given as a number with two digits of precision. If there is not enough money in the account to complete the transaction, output the current bank balance.",1505,4451,0,61,0.6,6,1
14223,-0.295871229917,NITK04,"  Ranbir has deposited some money in Deepika's account. Deepika would like to withdraw X $US from an ATM. The ATM machine will only accept the transaction if X is a multiple of 10, and Deepika's account balance has enough cash to  perform the withdrawal transaction (including bank charges).  For each  successful withdrawal the bank charges 0.50 $US.  Calculate Deepika's account balance after an attempted transaction.   The first like contains T ( T<20), the number of Test cases followed by T line containing X and Y each.  Positive integer 0 < X <= 2000 - the amount of cash which Deepika wishes to withdraw.  Nonnegative number 0<= Y <= 2000 with two digits of precision - Deepika's initial account balance.   Output the account balance after the attempted transaction, given as a  number with two digits of precision.  If there is not enough money in  the account to complete the transaction, output the current bank  balance.  Example  Input:  2 30 120.00
42 120.00  Output: 89.50 120.00 ",10.5810313162,HS08TEST,"Pooja would like to withdraw X $US from an ATM. The cash machine will only accept the transaction if X is a multiple of 5, and Pooja's account balance has enough cash to perform the withdrawal transaction (including bank charges). For each successful withdrawal the bank charges 0.50 $US. Calculate Pooja's account balance after an attempted transaction.Positive integer 0 < X <= 2000 - the amount of cash which Pooja wishes to withdraw.Nonnegative number 0<= Y <= 2000 with two digits of precision - Pooja's initial account balance.Output the account balance after the attempted transaction, given as a number with two digits of precision. If there is not enough money in the account to complete the transaction, output the current bank balance.",1505,5167,0,62,0.63963963964,7,1
14224,-0.27700782575,NITK05,"  John is in a Market buying some vegetables and fruits. There N  variety each of Vegetables and fruits available. The price of each  different vegetable is stored in an integer array A while that of each  different fruit is stored in an integer array B. Each array containing N   integers. The size of the array is <= 1000. The vegetables and  fruits are in any order and you can permute the order of the elements in  the arrays.  Now for the real question - is there an arrangement of the Fruits and Vegetables such that price of A i +B i >=K for all i where A i denotes the i th Vegetable in the array A. Bi denotes the i th Fruit in the array B. K is the money present in John's Wallet.   The first line contains the an integer T denoting the number of   test-cases. T test cases follow. Each test case is given in the   following format.  The first line contains two integers, N and K. The second line   contains N integers separated by a single space, denoting A array. The   third line describes B array in a same format.  1 <= T <= 10 1 <= N <= 1000 1 <= K <= 10 9 0 <= A i , B i <= 10 9   or each test case, if there is such arrangement exists output YES, otherwise NO (quotes for clarity).  Example  Input:  2
3 10
2 1 3
7 8 9
4 5
1 2 2 1
3 3 3 4  Output:  YES
NO  Explanation:  The first input has 3 elements in Array A and Array B , we see that the one of the arrangements, 3 2 1 and 7 8 9 has each pair of elements (3+7, 2 + 8 and 9 + 1) summing upto 10 and hence the answer is YES.   The second input has B array with three 3s. So, we need at least  three numbers in A to be greater than 1. As its not the case, the answer  is NO. ",-0.186593133372,ARRAY," There are two integer arrays: A and B having a size N where N<=1000. You are free to permute the order of the elements in the arrays.




Main problem: Among all the arrangements of the two arrays, is there any case such that Ai+Bi>=K for all i where Ai denotes the ith element in the array A. The first line contains an integer T denoting the number of test-cases. T test cases follow. Each test case is given in the following format.




The first line contains two integers, N and K. The second line contains N integers separated by a single space, denoting A array. The third line describes B array in a same format.For each test case, if there is such arrangement exists output YES, otherwise NO.",1506,124,0,246,0.370165745856,6,1
15069,-0.155780882639,QTREE6,"  You are given a tree (an acyclic undirected connected graph) with n nodes. The tree nodes are numbered from 1 to n . Each node has a color, white or black. All the nodes are black initially. We will ask you to perform some instructions of the following form:   0 u : ask for how many nodes are connected to u , two nodes are connected if all the node on the path from u to v (inclusive u and v ) have the same color.  1 u : toggle the color of u (that is, from black to white, or from white to black).    The first line contains a number n that denotes the number of nodes in the tree (1  n  10 5 ). In each of the following n-1 lines, there will be two numbers ( u , v ) that describes an edge of the tree (1  u , v  n ). The next line contains a number m denoting number of operations we are going to process (1  m  10 5 ). Each of the following m lines describe an operation ( t , u ) as we mentioned above(0  t  1, 1  u  n ).   For each query operation, output the corresponding result.  Example  Input 1: 5
1 2
1 3
1 4
1 5
3
0 1
1 1
0 1 Output 1: 5
1  Input 2: 7
1 2
1 3
2 4
2 5
3 6
3 7
4
0 1
1 1
0 2
0 3 Output 2: 7
3
3 Warning: large input/output data,be careful with certain languages     ",-0.166827794431,QTREE6,"You are given a tree (an acyclic undirected connected graph) with n nodes. The tree nodes are numbered from 1 to n. Each node has a color, white or black. All the nodes are black initially. We will ask you to perfrom some instructions of the following form:0 u: ask for how many nodes are connected to u, two nodes are connected if all the node on the path from u to v (inclusive u and v) have the same color.
1 u: toggle the color of u (that is, from black to white, or from white to black).The first line contains a number n that denotes the number of nodes in the tree (1 ≤ n ≤ 105). In each of the following n-1 lines, there will be two numbers (u, v) that describes an edge of the tree (1 ≤ u, v ≤ n). The next line contains a number m denoting number of operations we are going to process (1 ≤ m ≤ 105). Each of the following m lines describe an operation (t, u) as we mentioned above(0 ≤ t ≤ 1, 1 ≤ u ≤ n).For each query operation, output the corresponding result.",1583,4105,1,78,0.62091503268,0,1
15080,-0.223016287925,QTREE7,"  You are given a tree (an acyclic undirected connected graph) with n nodes. The tree nodes are numbered from 1 to n . Each node has a color, white or black, and a weight. We will ask you to perfrom some instructions of the following form:   0 u : ask for the maximum weight among the nodes which are connected to u , two nodes are connected if all the node on the path from u to v (inclusive u and v ) have a same color.  1 u : toggle the color of u (that is, from black to white, or from white to black).  2 u w : change the weight of u to w .    The first line contains a number n denoted how many nodes in the tree(1  n  10 5 ). The next n -1 lines, each line has two numbers ( u , v ) describe a edge of the tree(1  u , v  n).  The next 2 lines, each line contains n number, the first line is the initial color of each node(0 or 1), and the second line is the initial weight, let's say Wi, of each node(| Wi |  10 9 ).  The next line contains a number m denoted how many operations we are going to process(1  m  10 5 ). The next m lines, each line describe a operation ( t , u ) as we mentioned above(0  t  2, 1  u  n , | w |  10 9 ).   For each query operation, output the corresponding result.  Example  Input 1: 5 5
1 2
1 3
1 4
1 5
0 1 1 1 1
1 2 3 4 5
3
0 1
1 1
0 1 1 2 Output 1: 1
5  Input 2: 7
1 2
1 3
2 4
2 5
3 6
3 7
0 0 0 0 0 0 0
1 2 3 4 5 6 7
4
0 1
1 1
0 2
0 3 Output 2: 7
5
7 Warning: large input/output data,be careful with certain languages     ",-0.166827794431,QTREE6,"You are given a tree (an acyclic undirected connected graph) with n nodes. The tree nodes are numbered from 1 to n. Each node has a color, white or black. All the nodes are black initially. We will ask you to perfrom some instructions of the following form:0 u: ask for how many nodes are connected to u, two nodes are connected if all the node on the path from u to v (inclusive u and v) have the same color.
1 u: toggle the color of u (that is, from black to white, or from white to black).The first line contains a number n that denotes the number of nodes in the tree (1 ≤ n ≤ 105). In each of the following n-1 lines, there will be two numbers (u, v) that describes an edge of the tree (1 ≤ u, v ≤ n). The next line contains a number m denoting number of operations we are going to process (1 ≤ m ≤ 105). Each of the following m lines describe an operation (t, u) as we mentioned above(0 ≤ t ≤ 1, 1 ≤ u ≤ n).For each query operation, output the corresponding result.",1593,4105,0,156,0.435483870968,1,1
15219,2.34028950232,EASYPROB,"   There's no input.   Output some form of these numbers: 137, 1315, 73, 136, 255, 1384, 16385, one per line in the listed order.  Example  The first two lines of the CORRECT output file are:  137=2(2(2)+2+2(0))+2(2+2(0))+2(0)
1315=2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)  The correct output file should contain 7 lines. ",1.00591609237,EASYPROB,"There's no input.There's no input.Output some form of these numbers: 137, 1315, 73, 136, 255, 1384, 16385, one per line in the listed order.",1635,3761,1,29,0.512195121951,0,1
16172,0.802544063982,POLEVAL,"  Your task consists of evaluate a polynomial of degree n ( 0 <= n <= 999 ) represented by its n+1 coefficients of the form:   p n (x)  = c n x n + c n-1 x n-1 +  + c 2 x 2 + c 1 x + c 0   in each one of the k ( 1 <= k <= 100 ) points x 1 , x 2 ,  , x k . The coefficients of the polynomial and the values where they will be evaluated are integers in the interval [-100, 100] that guarantees that the polynomial's evaluation is at the most 2 63  1 .   There will be multiple test cases, each one with 4 lines that are described below  n : degree of polynomial.  c n c n-1   c 2 c 1 c 0 : coefficients of the polynomial separated by a single space.  k : number of points to evaluate the polynomial.  x 1 x 2   x k-1 x k : points to evaluate the polynomial separated by a single space.  The final test case is a single line where n = -1 and this case should not be processed.   For each test case you should print k + 1 lines of output, the very first line containing the case number and the following k lines with the result of the polynomial's evaluation in each one of the k given points. See the sample.  Example   Input: 2 1 -2 -1 5 0 1 -1 2 -2 3 2 1 -2 -1 4 0 -1 2 -2 -1  Output: Case 1: -1 -2 2 -1 7 Case 2: -1 0 15 -9  ",-0.205808432352,PD23,"Your task consists of evaluate a polynomial of degree n (0 <= n <= 999) represented by its n+1 coefficients of the form: pn(x) = cnxn + cn-1xn-1 + … + c2x2 + c1x + c0 in each one of the k (1 <= k <= 100) points x1, x2, …, xk. The coefficients of the polynomial and the values where they will be evaluated are integers in the interval [-100, 100] that guarantees that the polynomial's evaluation is at the most 263 – 1.There will be multiple test cases, each one with 4 lines that are described below n: degree of polynomial. cn cn-1 … c2 c1 c0: coefficients of the polynomial separated by a single space. k: number of points to evaluate the polynomial. x1 x2 … xk-1 xk: points to evaluate the polynomial separated by a single space. The final test case is a single line where n = -1 and this case should not be processed.For each test case you should print k + 1 lines of output, the very first line containing the case number and the following k lines with the result of the polynomial's evaluation in each one of the k given points. See the sample.",1720,2958,0,103,0.557142857143,6,1
16184,-0.114778047915,DIVSUM2,"  Given a natural number n (1 <= n <= 1e16), please output the summation of all its proper divisors. Definition: A proper divisor of a natural number is the divisor that is strictly less than the number. e.g. number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.  An integer stating the number of test cases (equal to 500), and that many lines follow, each containing one integer between 1 and 1e16 inclusive.  One integer each line: the divisor summation of the integer given respectively. Example   Input: 3
2
10
20 Output: 1
8
22  warning: a naive algorithm may not run in time. ",-0.0520073430479,PD13,"Given a natural number n (1 <= n <= 500000), please output the summation of all its proper divisors. Definition: A proper divisor of a natural number is the divisor that is strictly less than the number. e.g. number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.An integer stating the number of test cases (equal to about 200000), and that many lines follow, each containing one integer between 1 and 500000 inclusive.One integer each line: the divisor summation of the integer given respectively.",1730,4768,0,23,0.686046511628,7,1
16655,1.44461994312,DANGER,"  Flavius Josephus and 40 fellow rebels were trapped by the Romans.
His companions preferred suicide to surrender, so they decided to form a circle and to kill every third person and to proceed around the circle until no one was left.
Josephus was not excited by the idea of killing himself, so he calculated the position to be the last man standing (and then he did not commit suicide since nobody could watch). We will consider a variant of this ""game"" where every second person leaves.
And of course there will be more than 41 persons, for we now have computers.
You have to calculate the safe position.
Be careful because we might apply your program to calculate the winner of this contest! Input Specification The input contains several test cases.
Each specifies a number n , denoting the number of persons participating in the game.
To make things more difficult, it always has the format "" xy e z "" with the following semantics: when n is written down in decimal notation, its first digit is x , its second digit is y , and then follow z zeros.
Whereas 0<=x,y<=9 , the number of zeros is 0<=z<=6 .
You may assume that n>0 .
The last test case is followed by the string 00e0 . Output Specification For each test case generate a line containing the position of the person who survives.
Assume that the participants have serial numbers from 1 to n and that the counting starts with person 1, i.e., the first person leaving is the one with number 2.
For example, if there are 5 persons in the circle, counting proceeds as 2, 4, 1, 5 and person 3 is staying alive. Sample Input  05e0
01e1
42e0
66e6
00e0  Sample Output  3
5
21
64891137 ",-0.203493819923,P8,"Flavius Josephus and 40 fellow rebels were trapped by the Romans. His companions preferred suicide to surrender, so they decided to form a circle and to kill every third person and to proceed around the circle until no one was left. Josephus was not excited by the idea of killing himself, so he calculated the position to be the last man standing (and then he did not commit suicide since nobody could watch). We will consider a variant of this ""game"" where every second person leaves. And of course there will be more than 41 persons, for we now have computers. You have to calculate the safe position. Be careful because we might apply your program to calculate the winner of this contest!The input contains several test cases. Each specifies a number n, denoting the number of persons participating in the game. To make things more difficult, it always has the format ""xyez"" with the following semantics: when n is written down in decimal notation, its first digit is x, its second digit is y, and then follow z zeros. Whereas 0<=x,y<=9, the number of zeros is 0<=z<=6. You may assume that n>0. The last test case is followed by the string 00e0.For each test case generate a line containing the position of the person who survives. Assume that the participants have serial numbers from 1 to n and that the counting starts with person 1, i.e., the first person leaving is the one with number 2. For example, if there are 5 persons in the circle, counting proceeds as 2, 4, 1, 5 and person 3 is staying alive.",1774,188,0,17,0.717073170732,6,1
16907,0.0247316403579,DOSA,"    Lalith is going to have dinner and he has N dosas in front of him with their prices represented by sequence of integers a1,a2,a3...an.  And he has decided to eat in a different manner . You are free to replace the price of any dosa with any positive integer.  How many prices(integers) must be replaced to make the resulting sequence strictly increasing?  Lalith is going to have dinner and he has N dosas in front of him with their prices represented by sequence of integers a1,a2,a3...an.  And he has decided to eat in a different manner . You are free to replace the price of any dosa with any positive integer.  How many prices(integers) must be replaced to make the resulting sequence strictly increasing?      The first line of the test case contains an integer N - the number of dosas.  The next line contains N space separated integers where the ith integer is ai , representing thr price of i-th dosa.    Output the minimal number of prices(integers) that should be replaced to make the sequence strictly increasing.   Constraints  0 < N <= 10^6  0 < ai <= 10^9    Sample Input #01  6  1 7 10 2 20 22  Sample Output #01  1    Sample Input #02  5  1 2 2 3 4  Sample Output #02  3  Explanation   In the first sample input, we can replace 2 with any integer between 11 and 19 to make the price sequence strictly increasing, hence the output is 1.  In the second sample input, we can obtain 1, 2, 3, 4, 5 by changing the last three elements of the price sequence.   ",-0.198679516549,SMHTD,"This problem is present in SPOJ platform and uploaded by the same author . Lalith is going to have dinner and he has N dosas in front of him with their prices represented by sequence of integers a1,a2,a3...an.And he has decided to eat in a different manner . You are free to replace the price of any dosa with any positive integer.How many prices(integers) must be replaced to make the resulting sequence strictly increasing?The first line of the test case contains an integer N - the number of dosas.The next line contains N space separated integers where the ith integer is ai , representing thr price of i-th dosa.Output the minimal number of prices(integers) that should be replaced to make the sequence strictly increasing.",1791,3259,0,186,0.503703703704,5,1
17271,2.71379857395,SHAKTI,"  Since very long time shaktiman and kilwish have been fighting with  each other but the fight never came to end . So finally  I came to rescue . I decided that the result of the fight will be  decided by a mathematical game, in which  I will  write a number (N) . Kilwish and shaktiman will play the game  alternatively and each of them would subtract a number(n) [n is less than N]  such that N modulo n gives zero. The game is repeted turn by  turn until the one, who now cannot make a further move looses the game  Shaktiman being weak at mathematics asks you for help, whether or not he can win in that particular case. If Shaktimaan wins that game then print ""Thankyou Shaktiman"" otherwise print ""Sorry Shaktiman"".The game begins with shaktimaan playing first move.It is well understood that both of them will make moves in optimal way.  INPUT  Input contains test cases t ( OUTPUT  If Shaktimaan wins that game then print ""Thankyou Shaktiman"" otherwise print ""Sorry Shaktiman"" .  Sample Input: 2
212
424 Sample Output: Thankyou Shaktiman
Thankyou Shaktiman ",-0.185346361424,GOT," Arya Stark, daughter of Ned Stark has decided to take vengeance of her father's death. She considers Cersei Lannister as her prime enemy. Because of the large army serving under Cersei Lannister, Arya cannot challenge her directly in a war. So she has finally decided to challenge Cersei in a game of mathematics. Since Arya never got a chance during her stay in Winterfell to study Mathematics, she has also decided to rely on you to help her put in this part.




In a game a random number N is chosen. Arya and Cersei will play the game alternatively and each of them would subtract a number(n) [n is less than N] such that N modulo n gives zero. The game is repeated turn by turn until the one , who now cannot make a further move looses the game.




Your role is to tell Arya if she can win this case or not. If Arya wins that game then print ""Valar Morghulis"" otherwise print ""Lannisters always pays their debts"". The game begins with Arya playing first move. It is well understood that both of them will make moves in optimal way. Input contains test cases t (< 105) and followed by t numbers (1 <= N <= 106 ).If Arya wins that game then print ""Valar Morghulis"" otherwise print ""Lannisters always pays their debts"".",1835,3591,0,26,0.353846153846,5,1
17275,3.31760838644,ATOMS,"  Mr. Yagami is a scientist in the Bhabha Atomic Research Centre. They are   conducting a lab experiment on nuclear fission. In nuclear fission, one atom   breaks into more than one atom of the same type.  Initially, there are N atoms in the lab. Starting from now (t=0) , after each   second, every atom will break into K atoms of the same type. They dont want   the number of atoms to exceed M , so they have to stop the reaction at some   time t=T . Can you find this value T for Mr. Yagami.  Input Format:  First line contains P , the number of test cases. Next P lines contain three   integers each. These three integers represent the values of N , K and M respectively.  Output Format:  For each test case print the time at which the reaction will have to be   stopped.  Constraints:  1  P  10^4 2  N, K, M  10^18    Sample Input:  2
2 2 7
2 2 8  Sample Output:  1
2  Explanation:  1st test case: at t=1, number of atoms=4 at t=2, number of atoms will be 8. So reaction has to be stopped at t=1.  2nd test case: at t=1, number of atoms=4 at t=2, number of atoms will be 8. at t=3, number of atoms will be 16.   Problem Setter: Lalit Kundu ",-0.117144966757,ATOM,"Mr. Yagami is a scientist in the Bhabha Atomic Research Centre. They are
conducting a lab experiment on nuclear fission. In nuclear fission, one atom
breaks into more than one atom of the same type.Initially, there are N atoms in the lab. Starting from now (t=0), after each
second, every atom will break into K atoms of the same type. They don’t want
the number of atoms to exceed M, so they have to stop the reaction at some
time t=T. Can you find this value T for Mr. Yagami.First line contains P, the number of test cases. Next P lines contain three
integers each. These three integers represent the values of N, K and M
respectively.For each test case print the time at which the reaction will have to be
stopped.",1839,4375,0,131,0.531034482759,1,1
17278,-0.313203149784,NCOPRIME,"  Mr. Yagami is playing a game of arrays. He is given two random arrays A and B consisting of N positive integer elements. Game starts by Mr. Yagami assigning 0 or 1 to each element in A and B .  After this assignment is done, a graph is constructed with a node for each   element in the array A and B ( 2N nodes) and no edges. The game proceeds with a   valid move being defined in the following way:    One of the arrays from A or B is selected.   From the selected array, an element which has been marked 0 is chosen. Let us   call this element as X .    A set of elements, Y , are chosen from the array, which was not chosen in the   first step, such that all elements of Y should be marked as 1 and all elements   of Y should be greater than X and no element of Y should be coprime to X .    Finally an edge is drawn from the node labelled X to all the nodes   corresponding to the elements in set Y . There can only be a single edge   between any 2 nodes in the graph.    He can make as many valid moves. Mr. Yagami receives 1 point for each edge   that is drawn in the graph.  Mr. Yagami is very clever, so he makes the initial assignment in such a way   that it maximizes the number of points he receives in the game. You have to   return the maximum number of points that Mr. Yagami can receive.  Input Format:  The first line of the input contains a single integer, N (1  N    40) The second line of input contains N integers separated by a single space   character, which represent the elements of the array A. (2  A[i]   10^9) Similarly, the last line of input also contains N integers separated by a   single space character, which represent the elements of the array B. (2     B[i]  10^9)  Output Format:  A single integer representing the maximum score which Mr. Yagami can receive.  Sample Input:  4
16 3 2 9
12 18 13 4  Sample Output:  8  Explanation:  He picks 2 from first array. So he gets to put 3 edges ie. 2->4, 2->12,   2->18. Next he picks 3 from the first array. So he gets to put 2 edges ie. 3->12,   3->18. Next he picks 9 from the first array. So he gets to put 2 edges ie. 9->12,   9->18. Next he picks 16 from the first array. So he gets to put 1 edge ie. 16->18.   Total edges=8.   Problem Setter: Lalit Kundu ",-0.207209398257,COPRIME,"Mr. Yagami is playing a game of arrays. He is given two random arrays A and B
consisting of N positive integer elements. Game starts by Mr. Yagami assigning 0 or 1
to each element in A and B.After this assignment is done, a graph is constructed with a node for each
element in the array A and B (2N nodes) and no edges. The game proceeds with a
valid move being defined in the following way:One of the arrays from A or B is selected.
From the selected array, an element which has been marked 0 is chosen. Let us
call this element as X.
A set of elements, Y, are chosen from the array, which was not chosen in the
first step, such that all elements of Y should be marked as 1 and all elements
of Y should be greater than X and no element of Y should be coprime to X.
Finally an edge is drawn from the node labelled X to all the nodes
corresponding to the elements in set Y. There can only be a single edge
between any 2 nodes in the graph.He can make as many valid moves. Mr. Yagami receives 1 point for each edge
that is drawn in the graph.Mr. Yagami is very clever, so he makes the initial assignment in such a way
that it maximizes the number of points he receives in the game. You have to
return the maximum number of points that Mr. Yagami can receive.The first line of the input contains a single integer, N (1 ≤ N ≤
40)
The second line of input contains N integers separated by a single space
character, which represent the elements of the array A. (2 ≤ A[i] ≤ 10^9)
Similarly, the last line of input also contains N integers separated by a
single space character, which represent the elements of the array B. (2 ≤
B[i] ≤ 10^9)A single integer representing the maximum score which Mr. Yagami can receive.",1840,439,0,195,0.588235294118,1,1
17290,0.261660648569,BITS,"  Given N , if we write all numbers from 1 to N (both inclusive) in binary what is the count of 1s I have written. For example, if N=3, I will write down: 1 10 11 Therefore, a total of 4 ones.  Input Format:  First line contains, T , the number of testcases. Each testcase consists of one integer per line denoting N .  Output Format:  Print the required answer.  Constraints:  1  T  1000 1  N  1000   Sample Input:  1
3  Sample Output:  4   Problem Setter: Lalit Kundu  Solve harder version here: http://www.spoj.com/problems/BIT2 ",-0.0258634483434,BIT,"Given N, if we write all numbers from 1 to N (both inclusive) in binary what is
the count of 1s I have written.
For example, if N=3,
I will write down:
1
10
11Therefore, a total of 4 ones.First line contains, T, the number of testcases. Each testcase consists of one integer per line denoting N.Print the required answer.",1841,4683,0,59,0.4875,1,1
17291,0.489137427673,SUBXOR,"  A straightforward question. Given an array of positive integers you have to   print the number of subarrays whose XOR is less than K . Subarrays are defined as a sequence of continuous elements A i , A i+1 , ..., A j  .   XOR of a subarray is defined as A i ^A i+1 ^ ... ^A j . Symbol ^ is Exclusive Or. You can read more about it here:  http://en.wikipedia.org/wiki/Exclusive_or   Input Format:  First line contains T , the number of test cases. Each of the test case   consists of N and K in one line, followed by N space separated integers in   next line.  Output Format:  For each test case, print the required answer.  Constraints:  1   T   10 1   N   10^5 1   A[i]   10^5 1   K   10^6 Sum of N over all testcases will not exceed 10^5.   Sample Input:  1
5 2
4 1 3 2 7  Sample Output:  3  Explanation:  Only subarrays satisfying the conditions are [1],[1,3,2] and [3,2].   Problem Setter: Lalit Kundu ",-0.160960095594,SUBBXOR,"A straightforward question. Given an array of positive integers you have to
print the number of subarrays whose XOR is less than K.
Subarrays are defined as a sequence of continuous elements Ai, Ai+1, ..., Aj .
XOR of a subarray is defined as Ai^Ai+1^ ... ^Aj.
Symbol ^ is Exclusive Or. You can read more about it here:
http://en.wikipedia.org/wiki/Exclusive_orFirst line contains T, the number of test cases. Each of the test case
consists of N and K in one line, followed by N space separated integers in
next line.For each test case, print the required answer.",1842,3978,0,119,0.464,1,1
17295,0.18508631629,NAUGHTY,"  Mr. Naughty likes to play with balls. So his friend, Mr Nice, gave him n balls to play a game. Each ball has exactly two numbers (the number on the top   and the number on the bottom). In one move Mr Naughty can rotate any ball so   that its bottom now becomes the top. Mr Nice knows the minimum number of such   moves that can make at least half of the balls show same number on their top.   So to win Mr Nice's game, Mr Naughty should figure out the minimum number of   moves. Its not always possible to make such moves that satisfy the given   condition.In this case Mr Naughty should figure out that it is ""Impossible"" to   make such moves.  Help Mr Naughty to win the game.  Input Format:  The first line contains a single integer n - the number of balls. The   following n lines contain the description of all balls, one ball per line.   Each description has a pair of non-negative integers not exceeding 10^5 -   numbers on top and bottom. The first number in a line is the number on top,   the second one - on the bottom. The number on the top of the ball may be same   as the number on the bottom. The numbers in the lines are separated by single spaces.  Output Format:  On a single line print a single integer - the minimum number of moves to win   the game. If it is impossible to make the set funny, print ""Impossible"" (quotes for clarity).  Constraints:  1  n  10^5   Sample Input:  3
3 100
100 3
5 4  Sample Output:  1  Explanation:  In this case Mr Naughty can rotate the first ball so that number on the top   becomes 100. Since two of the three balls have same number on their top (100),   you do not need to change anything else, so the answer is 1.  Sample Input:  5 
5 9
5 9
3 2
1 4
5 7  Sample Output:  0  Sample Input:  3
1 2
3 4
5 6  Sample Output:  Impossible   Problem Setter: Prateek Sachdev ",-0.186518920752,BALLS,"Mr. Naughty likes to play with balls. So his friend, Mr Nice, gave him n
balls to play a game. Each ball has exactly two numbers (the number on the top
and the number on the bottom). In one move Mr Naughty can rotate any ball so
that its bottom now becomes the top. Mr Nice knows the minimum number of such
moves that can make at least half of the balls show same number on their top.
So to win Mr Nice's game, Mr Naughty should figure out the minimum number of
moves. Its not always possible to make such moves that satisfy the given
condition.In this case Mr Naughty should figure out that it is ""Impossible"" to
make such moves.Help Mr Naughty to win the game.The first line contains a single integer n - the number of balls. The
following n lines contain the description of all balls, one ball per line.
Each description has a pair of non-negative integers not exceeding 10^5 -
numbers on top and bottom. The first number in a line is the number on top,
the second one - on the bottom. The number on the top of the ball may be same
as the number on the bottom.
The numbers in the lines are separated by single spaces.On a single line print a single integer - the minimum number of moves to win
the game. If it is impossible to make the set funny, print ""Impossible""
(quotes for clarity).",1848,3582,0,165,0.586592178771,6,1
17303,-0.297273197538,DRUNK,"  Alice and Bob were getting bored and decided to play a game. The game involves   a pile of coins. Both players take turns in picking a certain number of coins   from the pile. Initially, the pile contains N coins. Alice makes the first   move. The player who is unable to pick up any coins in his/her turn loses the   game. Some of the details of the game are:    In each turn a player can only decide on picking up 1, 4, 9, 16 coins from the   pile.    As both the players are drunk and not in complete control of their actions,   even if they decide on picking up some coins, they might end up picking   something else completely. So, if a person decides on picking up X coins from   the pile, he/she might end up with (X - 1), X or (X + 1) coins with the   relative probability of C1: C2: C3    In each turn a player has to eventually pick up at least 1 coin.    Note that a player cannot decide on picking up X coins from the pile if the   pile contains less than X coins at the time. Also, if a player decided on   picking up X coins and it happens that picking up (X + 1) is not valid (This   might happen if there are only X coins in the pile), then the relative   probability distribution for the valid moves will be C1: C2 . Similarly, if   picking up (X - 1) coins is not valid, then the relative probability   distribution for the valid moves will be C2: C3 .  As both of them are not in their right minds, they sometimes want to win and   sometimes want to lose. But Bob still wonders what is his probability of   winning/losing the game (depending on what he wants for a particular game).   Help him find out his probability!  Input Format:  The first line of the input contains a single integer, T , which represents the   number of test cases. Each test case contains 3 lines. The first line of each   test contains a single integer, N , which represents the number of coins in the   pile initially. The second line contains 3 integers C1, C2 and C3 . The last   line of each test contains 2 integers describing the mood of Alice and Bob   respectively. 0 is for losing and 1 is for winning.  Output Format:  For each test cases, the probability of winning/losing (depending on the test   case) rounded to 4 places of precision.  Constraints:  1  T  10 1  N  1000000 1   (C1,C2,C3)   100000   Sample Input:  2
1
1 2 3
0 0
5
1 2 3
0 1  Sample Output:  1.0000
0.4333   Problem Setter: Sukhjashan Singh ",-0.207817941725,DRUNKG,"Alice and Bob were getting bored and decided to play a game. The game involves
a pile of coins. Both players take turns in picking a certain number of coins
from the pile. Initially, the pile contains N coins. Alice makes the first
move. The player who is unable to pick up any coins in his/her turn loses the
game. Some of the details of the game are:In each turn a player can only decide on picking up 1, 4, 9, 16 coins from the
pile.
As both the players are drunk and not in complete control of their actions,
even if they decide on picking up some coins, they might end up picking
something else completely. So, if a person decides on picking up X coins from
the pile, he/she might end up with (X - 1), X or (X + 1) coins with the
relative probability of C1: C2: C3
In each turn a player has to eventually pick up at least 1 coin.Note that a player cannot decide on picking up X coins from the pile if the
pile contains less than X coins at the time. Also, if a player decided on
picking up X coins and it happens that picking up (X + 1) is not valid (This
might happen if there are only X coins in the pile), then the relative
probability distribution for the valid moves will be C1: C2. Similarly, if
picking up (X - 1) coins is not valid, then the relative probability
distribution for the valid moves will be C2: C3.As both of them are not in their right minds, they sometimes want to win and
sometimes want to lose. But Bob still wonders what is his probability of
winning/losing the game (depending on what he wants for a particular game).
Help him find out his probability!The first line of the input contains a single integer, T, which represents the
number of test cases. Each test case contains 3 lines. The first line of each
test contains a single integer, N, which represents the number of coins in the
pile initially. The second line contains 3 integers C1, C2 and C3. The last
line of each test contains 2 integers describing the mood of Alice and Bob
respectively. 0 is for losing and 1 is for winning.For each test cases, the probability of winning/losing (depending on the test
case) rounded to 4 places of precision.",1849,504,0,151,0.675213675214,1,1
17314,-0.272536812213,DURIN,"  Reference:: The Hobbit : Desolation of Smaug  The_Hobbit:_The_Desolation_of_Smaug   J. R. R. Tolkien decided to make Thorin Oakenshields task more difficult.   This time he was given an infinite number of keys represented by a small   string. The hidden entrance has a lot of keyholes side by side represented by   one long string. The key fits only into a slit that matches it completely.   Oakenshield does not know how many keys he would require and which all   keyholes he will have to try out. So if there are n keyholes where the key   fits, he might need any number of keys between 1 to n (both inclusive).   Moreover he does not know which keyholes among the ones where the keys fit, he   will have to use. All he knows is that there is a unique way to open the door.   Trying out each configuration takes 1 second. The last light of Durins day   does not last long and will have to try out all possibilities before it goes.   He wants you to find out how long, in the worst case, it will take for him to   try out all possibilities.  Since the answers may be huge, output it modulo 1000000007 .   If there are no keyholes where the key fits, output 0 .  Input Format:  First line containing a string representing the key.   Second line containing a string representing the keyholes.  Output Format:  Single line containing an integer for the required answer.  Notes:  1. Key fits into a keyhole at index i if key is a substring of keyhole string   at index i . 2. If there are two overlapping keyholes where the key may fit, you cannot   insert a key in both simultaneously  Constraints:  1  key  10^4 1  keyholes  5*(10^5)   Sample Input:  c
a  Sample Output:  0  Sample Input:  aba
abababa  Sample Output:  4  Explanation:   Explanation for Test Case #1: The key fits into keyholes at positions {1, 3, 5} If he requires only 1 key he may put them at {1} or {3} or {5} = 3 seconds. If he required 2 keys, he may put them at {1,5} = 1 second. Total = 1+3 = 4 seconds. He cannot use 3 keys without overlapping them.  Explanation for Test Case #2: There is no slit where the key fits hence 0 seconds.    Problem Setter: Vidit Gupta ",-0.203558137539,DURIND,"Reference:: The Hobbit : Desolation of Smaug
'http://en.wikipedia.org/wiki/The_Hobbit:_The_Desolation_of_Smaug'>http://en.wikipedia.org/wiki/The_Hobbit:_The_Desolation_of_SmaugJ. R. R. Tolkien decided to make Thorin Oakenshield’s task more difficult.
This time he was given an infinite number of keys represented by a small
string. The hidden entrance has a lot of keyholes side by side represented by
one long string. The key fits only into a slit that matches it completely.
Oakenshield does not know how many keys he would require and which all
keyholes he will have to try out. So if there are n keyholes where the key
fits, he might need any number of keys between 1 to n (both inclusive).
Moreover he does not know which keyholes among the ones where the keys fit, he
will have to use. All he knows is that there is a unique way to open the door.
Trying out each configuration takes 1 second. The last light of Durin’s day
does not last long and will have to try out all possibilities before it goes.
He wants you to find out how long, in the worst case, it will take for him to
try out all possibilities.Since the answers may be huge, output it modulo 1000000007.
If there are no keyholes where the key fits, output 0.First line containing a string representing the key.
Second line containing a string representing the keyholes.Single line containing an integer for the required answer.",1850,294,0,236,0.502242152466,1,1
17323,-0.274303696879,GIVEAWAY,"  You are given a 1-indexed array X , consisting of N integers, and a set of Q queries. There are two kinds of queries:   0 a b c Here you are required to return the number of elements with indices in [a,b] greater than or equal to c  1 a b Here you are required to change the a th element of array to b .   Input Format:  First line contains N , the number of elements in the array X . The next line   contains N space separated integers representing the elements of X . The third   line of input contains a single integer, Q , the number of queries. The next Q lines of input each contain queries of two kinds as described above.  Output Format:  Q lines with the ith line contains the answer for the i th query  Constraints:  1  N  5*10^5 1  Q  10^5 1  X[i]  10^9 1  a  b  N for query type 0 1  a  10^5, 1  1  c  10^9  Example  Sample Input: 5
1 2 3 4 5
3
0 1 5 10
1 2 20
0 1 3 10 Sample Output: 0
1  Problem Setter: Pulkit Goel and Vidit Gupta ",-0.207817941725,GIVEAWAY,"You are given a 1-indexed array X, consisting of N integers, and a set of Q
queries.
There are two kinds of queries:
1. 0 a b c
Here you are required to return the number of elements with indices in [a,b]
greater than or equal to c
2. 1 a b
Here you are required to change the ath element of array to b.First line contains N, the number of elements in the array X. The next line
contains N space separated integers representing the elements of X. The third
line of input contains a single integer, Q, the number of queries. The next Q
lines of input each contain queries of two kinds as described above.Q lines with the ith line contains the answer for the ith query",1851,503,1,107,0.465517241379,0,1
17331,-0.320242698196,MACHMAY,"  It's the year 4224 and Giant Machine Corporation has started working on its   42nd Generation Robots. These robots are designed to have peculiar   specifications.  The company has N different parts (numbered from 1 to N ), each of which impart   a very specific property to the robot. The formation of a single robot R consists of M steps. At the i th step, one of the N parts is chosen and added   to the current robot. After the M th step, the robot is ready.   Let num(i, j) be the count of part number j till the i th step used for making   the robot R .  The 41st Generation Robots were found to be defective in the sense that one of   their properties overshadowed their other properties significantly. Hence, for   the 42nd Generation, it was decided that for any robot R , |num(i, j)  num(i,   k)|  2 for every 1  i  M and for every pair of j, k where 1  j,k  N .  Now, the Giant Machine Corporation is interested to know the number of   different 42nd Generation Robots that they can make which satisfy the above   criteria and hence they have hired you for the task. Since, this number can be   very large, output the result modulo 10^9 + 7 .  Note : Two robots R1 and R2 are considered different, if a different part is   used in any of the corresponding i steps out of M steps.  Input Format:  The first line starts with an integer T , denoting the number of test cases. T lines follow with each line consisting of two space separated integers M and N .  Output Format:  For each test case, print in a single line the required number.  Constraints:  1  T  20 1  N  50 1  M  10^18   Sample Input:  3
1 1
2 2
3 2  Sample Output:  1
4
6   Problem Setter: Vivek Hamirwasia ",-0.209035028638,MACMAY,"It's the year 4224 and Giant Machine Corporation has started working on it’s
42nd Generation Robots. These robots are designed to have peculiar
specifications.The company has N different parts (numbered from 1 to N), each of which impart
a very specific property to the robot. The formation of a single robot R
consists of M steps. At the ith step, one of the N parts is chosen and added
to the current robot. After the Mth step, the robot is ready.
Let num(i, j) be the count of part number j till the ith step used for making
the robot R.The 41st Generation Robots were found to be defective in the sense that one of
their properties overshadowed their other properties significantly. Hence, for
the 42nd Generation, it was decided that for any robot R, |num(i, j) – num(i,
k)| ≤ 2 for every 1 ≤ i ≤ M and for every pair of j, k where 1 ≤ j,k ≤ N
.Now, the Giant Machine Corporation is interested to know the number of
different 42nd Generation Robots that they can make which satisfy the above
criteria and hence they have hired you for the task. Since, this number can be
very large, output the result modulo 10^9 + 7.Note : Two robots R1 and R2 are considered different, if a different part is
used in any of the corresponding i steps out of M steps.The first line starts with an integer T, denoting the number of test cases. T
lines follow with each line consisting of two space separated integers M and
N.For each test case, print in a single line the required number.",1852,1413,0,111,0.661764705882,1,1
17339,-0.129419154264,INGRED,"  You are given n cities with m bi-directional roads connecting them and the   length of each road. There are two friends living in different cities who wish   to collect some ingredients available at different stores to make cake. There   are s such stores. They need not come back home after purchasing the   ingredients. Petrol is expensive and they would hence like to travel minimum   total distance (sum of distance distance traveled by both kids). Help them   find out what this distance is.  Input Format:  n m ( m lines of the form a i b i c i ) Here n is number of cities, m is number of roads, a i and b i are the cities(0   indexed) the roads connect and c i is the length of this road  s where s is the number of stores (1 line containing s space separated integers indicating the city number in   which the stores are located.) (two space separated integers indicating the cities in which the two kids   live)  Output Format:  Single integer x where x is the minimum distance that the duo will travel that   is minimum sum of distance travelled by first kid and second kid.  Constraints:  2  n  100 1  m  (n*(n-1))/2 0  a,b < n 0 c 1000 1  s  8   Sample Input:  5 6
0 1 5
1 4 1
0 4 10
0 2 2
1 2 3
2 3 4
2
2 4
0 1  Sample Output:  3   Problem Setter: Vidit Gupta ",-0.202341050625,INGREDIE,"You are given n cities with m bi-directional roads connecting them and the
length of each road. There are two friends living in different cities who wish
to collect some ingredients available at different stores to make cake. There
are s such stores. They need not come back home after purchasing the
ingredients. Petrol is expensive and they would hence like to travel minimum
total distance (sum of distance distance traveled by both kids). Help them
find out what this distance is.n m
(m lines of the form ai bi ci)
Here n is number of cities, m is number of roads, ai and bi are the cities(0
indexed) the roads connect and ci is the length of this road
s where s is the number of stores
(1 line containing s space separated integers indicating the city number in
which the stores are located.)
(two space separated integers indicating the cities in which the two kids
live)Single integer x where x is the minimum distance that the duo will travel that
is minimum sum of distance travelled by first kid and second kid.",1853,269,0,115,0.552795031056,2,1
17341,-0.307874505534,QSTABLE,"  Swayamvara, in ancient India, was a practice of choosing a husband, from a   list of suitors by a girl of marriageable age.  It is the swayamvara of gossip queen of IIIT, Akshata. Now, Akshata is always   interested in knowing the stability of the relationships among various   students of IIIT. Nowadays she is very busy in her swayamvaras preparation   and is not able to update herself about the latest gossips. As you know she is   the gossip queen. She would love if someone could do her a favor and collect   answers of her questions about relationships in IIIT. It might increase the   collectors chance of getting selected for marriage.  Before starting preparations for the swayamvara, Akshata used to maintain   notes about the relationships in IIIT and knew all about them. So she thought   she can help you by providing the notes.  There are various ways in which two people can be acquaintances :   If A and B are in a relationship, then A and B are acquaintances of each   other.  If A and B are acquaintances of each other and B and C are acquaintances of   each other, then A and C are also acquaintances of each other.   In Akshata's notes, a relationship between person1 and person2 is represented   as ""person1 person2"" . The Queen's questions are also special.  There are two types of questions:   First type of query is whether two people, say A and B , still remain each   others acquaintances even if two people, say C and D , break-up and end their   relationship.  Second type of query is whether two people, say A and B , still remain   acquaintances even if a person, say C , leaves the college (Its obvious that   before leaving college, C ends all his/her relationships).    Input Format:  First line of the input contains two integers, N and M where N represents the   number of people in IIIT and M represents the number of relationships in   Akshatas notes.  The next M lines contain 2 strings each, containing the names of 2 people who   are in a relationship.  Next line contains a single integer Q , which represents the number of   questions asked by the Queen. Each of the next Q lines represents a query. For   every query first integer represents the query type.  If the query type is 1 then it is followed by four strings in the same line,   representing A B C and D . you have to output ""STABLE"" if A and B remain   acquaintance of each other even if C and D break up and ""NOT STABLE"" otherwise.  If the query type is 2 then it is followed by three strings in the same line,   representing A B and C . You have to output ""STABLE"" if A and B remain   acquaintances even if C leaves college otherwise output ""NOT STABLE"" . (All   quotes for clarity)  Output Format:  For every query output ""STABLE"" or ""NOT STABLE"" without quotes.  Constraints:  1  N  10000 1  M  50000 1  Q  10000 Size of all strings will be less than 50 characters.   Sample Input:  3 2
Person1 Person2
Person1 Person3
2
2 Person2 Person3 Person1
1 Person1 Person2 Person1 Person3  Sample Output:  NOT STABLE
STABLE  Explanation:  Person1 is in a relationship with Person2 and Person1 is also in a relation   with Person3. So Person3 and Person2 are acquaintance. First Query: But Person2 and Person3 are acquaintance of each other only because of   person1, if person1 leaves the college, then Person2 and Person3 are also not   acquaintance of each other. Second Query: Person1 will remain being acquaintance of Person2 even if Person1 breaks-up   with Person3.  Sample Input:  17 18
Person1 Person2
Person1 Person4
Person2 Person4
Person4 Person6
Person2 Person6
Person2 Person3
Person3 Person5
Person1 Person7
Person7 Person8
Person7 Person9
Person7 Person10
Person9 Person12
Person8 Person12
Person8 Person11
Person12 Person13
Person14 Person15
Person15 Person16
Person16 Person17
8
2 Person1 Person14 Person7
2 Person1 Person2 Person2
1 Person1 Person14 Person2 Person4
1 Person5 Person13 Person1 Person2
1 Person6 Person2 Person1 Person4
1 Person13 Person6 Person7 Person8
2 Person13 Person6 Person7
2 Person13 Person6 Person8
2 Person13 Person8 Person7  Sample Output:  NOT STABLE
NOT STABLE
NOT STABLE
STABLE
STABLE
STABLE
NOT STABLE
STABLE   Problem Setter: Mayank Natani ",-0.209035028638,NQUEEN,"Swayamvara, in ancient India, was a practice of choosing a husband, from a
list of suitors by a girl of marriageable age.It is the swayamvara of gossip queen of IIIT, Akshata. Now, Akshata is always
interested in knowing the stability of the relationships among various
students of IIIT. Nowadays she is very busy in her swayamvara’s preparation
and is not able to update herself about the latest gossips. As you know she is
the gossip queen. She would love if someone could do her a favor and collect
answers of her questions about relationships in IIIT. It might increase the
collector’s chance of getting selected for marriage.Before starting preparations for the swayamvara, Akshata used to maintain
notes about the relationships in IIIT and knew all about them. So she thought
she can help you by providing the notes.There are various ways in which two people can be acquaintances :If A and B are in a relationship, then A and B are acquaintances of each
other.
If A and B are acquaintances of each other and B and C are acquaintances of
each other, then A and C are also acquaintances of each other.In Akshata's notes, a relationship between person1 and person2 is represented
as ""person1 person2"". The Queen's questions are also special.There are two types of questions:First type of query is whether two people, say A and B, still remain each
others’ acquaintances even if two people, say C and D, break-up and end their
relationship.
Second type of query is whether two people, say A and B, still remain
acquaintances even if a person, say C, leaves the college (It’s obvious that
before leaving college, C ends all his/her relationships).First line of the input contains two integers, N and M where N represents the
number of people in IIIT and M represents the number of relationships in
Akshata’s notes.The next M lines contain 2 strings each, containing the names of 2 people who
are in a relationship.Next line contains a single integer Q, which represents the number of
questions asked by the Queen. Each of the next Q lines represents a query. For
every query first integer represents the query type.If the query type is 1 then it is followed by four strings in the same line,
representing A B C and D. you have to output ""STABLE"" if A and B remain
acquaintance of each other even if C and D break up and ""NOT STABLE""
otherwise.If the query type is 2 then it is followed by three strings in the same line,
representing A B and C. You have to output ""STABLE"" if A and B remain
acquaintances even if C leaves college otherwise output ""NOT STABLE"". (All
quotes for clarity)For every query output ""STABLE"" or ""NOT STABLE"" without quotes.",1854,1412,0,331,0.496987951807,7,1
17362,0.441284592866,RKS,"  RK is a great code breaker. He knows any cipher in the world can be broken by frequency analysis. He intercepted an enemy message. The message consists of N numbers, smaller than or equal to C . RK belives freqency analysis consists of sorting this sequence so that more frequent numbers appear before less frequent ones.  Formally, the sequence must be sorted so that given any two numbers X and Y , X appears before Y if the number of times X appears in the original sequence is larger than the number of time Y does. If the number of appearances is equal, the number whoes value appears sooner in the input should appear sooner in the sorted sequence. Help RK by creating a ""frequency sorter"".  INPUT  First line of input contains two  integers, N (1<=N<=1000), length of message, and C  (1<=C<=10^9), the number from task description. Next line contains N integers smaller than or equal to C, message  itself.    OUTPUT  First and only line of output should contain N numbers, the sorted sequence.  SAMPLE  9 3 1 3 3 3 2 2 2 1 1  1 1 1 3 3 3 2 2 2  Input 5 2 2 1 2 1 2  Output 2 2 2 1 1 ",-0.209035028638,KJCP01,"Chaitya is a great problem solver. He found that most of his problems could be solved by arranging them in a particular order. The problem input consists of N. numbers, smaller than or equal to M. Chaitya’s analysis consists of sorting this sequence according to their occurrences.The output must be sorted so that for two numbers A and B, A will appear before B if the number of times A appears in the original order is larger than the number of times B does. If the number of occurrences is equal, the number whose value appears sooner in the input should appear sooner in the sorted sequence.Help Chaitya by creating a custom sorting tool.First line of input contains two integers, N, length of message, and M, the number from task description. Next line contains N integers smaller than or equal to M.Output should contain N numbers in the required sequence.",1859,875,0,77,0.402777777778,6,1
17629,-0.172719011397,LEONARDO,"      I just bought Leonardo's secret notebook! Rare object collector Stan Ucker was really agitated but
his friend, special investigator Sarah Keptic was unimpressed.  How do you know it is genuine?  Oh, it must be, at that price. And it is written in the
  da Vinci code. Sarah browsed a few of the pages. It was obvious
to her that the code was a substitution cipher, where each
letter of the alphabet had been substituted by another letter.  Leonardo would have written the plain-text and left it to his
    assistant to encrypt, she said. And he must have supplied the
    substitution alphabet to be used. If we are lucky, we can find
    it on the back cover! She turned up the last page and, lo and behold, there was a single
line of all 26 letters of the alphabet:  QWERTYUIOPASDFGHJKLZXCVBNM   This may be Leonardo's instructions meaning that each A in the
  plain-text was to be replaced by Q, each B with W, etcetera. Let us see... To their disappointment, they soon saw that this could not be the
substitution that was used in the book. Suddenly, Stan brightened.  Maybe Leonardo really wrote the substitution alphabet on the
last page, and by mistake his assistant coded that line as he had
coded the rest of the book. So the line we have here is the result
of applying some permutation TWICE to the ordinary alphabet! Sarah took out her laptop computer and coded fiercely for a few
minutes. Then she turned to Stan with a sympathetic expression.  No, that couldn't be it. I am afraid that you have been duped
  again, my friend. In all probability, the book is a fake. Write a program that takes a permutation of the English alphabet as
input and decides if it may be the result of performing some
permutation twice.   The input begins with a positive number on a line of its own telling
the number of test cases (at most 500).  Then for each test case there
is one line containing a permutation of the 26 capital letters of the
English alphabet.   For each test case, output one line containing Yes if the
given permutation can result from applying some permutation twice on
the original alphabet string ABC...XYZ, otherwise output No .  Example   Input: 2
QWERTYUIOPASDFGHJKLZXCVBNM
ABCDEFGHIJKLMNOPQRSTUVWXYZ Output: No
Yes ",-0.207662128447,CSEA4,"--I just bought Leonardo's secret notebook!
Rare object collector Stan Ucker was really agitated
but his friend, special investigator Sarah Kepticwas unimpressed.
--How do you know it is genuine?
-- Oh, it must be, at that price. And it is written in the da Vinci code.
Sarah browsed a few of the pages. It was obvious to her that the code was a substitution cipher, where each letter of the alphabet had been substituted by another letter.
--Leonardo would have written the plain-text and left it to his assistant to encrypt, she said. And he must have supplied the substitution alphabet to be used. If we are lucky, we can find it on the back cover!
She turned up the last page and, lo and behold, there was a single line of all 26 letters of the alphabet:
QWERTYUIOPASDFGHJKLZXCVBNM
-- This may be Leonardo's instructions meaning that each A in the plain-text was to be replaced by Q, each B withW, etcetera. Let us see...
To their disappointment, they soon saw that this could not be the substitution that was used in the book. Suddenly, Stan brightened.
-- Maybe Leonardo really wrote the substitution alphabet on the last page, and by mistake
his assistant coded that line as he had coded the rest of the book. So the line we have here is the result of applying some permutation TWICE to the ordinary alphabet!
Sarah took out her laptop computer and coded fiercely for a few minutes. Then she turned to Stan with a sympathetic expression.
-- No, that couldn't be it. I am afraid that you have been duped again, my friend. In all probability, the book is a fake.
Write a program that takes a permutation of the English alphabet as input and decides if it may be the result of performing some permutation twice.The input begins with a positive number on a line of its own telling the number of test cases (at most 500). Then for each test case there is one line containing a permutation of the 26 capital letters of the English alphabet.For each test case, output one line containing Yes if the given permutation can result from applying some permutation twice on the original alphabet string ABC...XYZ, otherwise output No.",1899,2691,0,40,0.675889328063,7,1
17811,-0.31826033979,FACTCN,"  Little Omrita recently learned about factorials. Her teacher gave her a list of factorials of all the numbers starting from 1 to N . Omrita can choose any integer M, and she is supposed to compute the product of all the factorials starting from 1 i.e (1! * 2! * 3! * 4! * ) modulo M .  During her calculation, she noticed that no matter what M she choose before (at the start of the process) after a certain number of multiplication the answer becomes 0 and hence she cant continue further.  She don't like this and wanted to know: for a chosen M what could be the maximum number of products she can compute before she has to stop. (See example for more clarification).   The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.The first and the only line of each test case contains a single integer M denoting the number omrita had chosen.   For each test case, output a single line containing the required answer.  Constraints   1  T  100  1  M < 10 20   1  N < 10 30            Example  Input: 1
10 Output: 4    Explanation  For the test case M = 10; First few terms in Omrita's list:  1! = 1 2! = 2 3! = 6 4! = 24 5! = 120 6! = 720 7! = 5040 8! = 40320 ... ... Omrita will proceed in the following manner:  1 *  2    = 2 MOD 10 = 2 2 * 6     = 12 MOD 10 = 2 2 * 24   = 48 MOD 10 = 8 8 * 120 = 960 MOD 10 = 0  So, she can perform 4 calculations. ",-0.209035028638,FACTCN,"Little Omrita recently learned about factorials. Her teacher gave her a list of factorials of all the numbers starting from 1 to N. Omrita can choose any integer M, and she is supposed to compute the product of all the factorials starting from 1 i.e (1! * 2! * 3! * 4! * …) modulo M.During her calculation, she noticed that no matter what M she choose before (at the start of the process) after a certain number of multiplication the answer becomes 0 and hence she can’t continue further.She don't like this and wanted to know: for a chosen M what could be the maximum number of products she can compute before she has to stop. (See example for more clarification).The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.The first and the only line of each test case contains a single integer M denoting the number omrita had chosen.For each test case, output a single line containing the required answer.",1919,5365,1,162,0.611111111111,0,1
18130,-0.307216680781,IOPC_14A,"    In a class of B students, the teacher wishes to distribute N! [ Factorial (N) ] oranges, such that each one of them gets equal number of oranges. The teacher, being a lazy person, wants to give away oranges such that she has to take minimum number of them back with her. Your job is to help the teacher to determine, given N and B , whether the number of oranges received by each student is even or odd.  Input Format :  First line contains T , the number of test cases. Next T lines follow, each line containing two space separated integers N and B .  Output Format :  The output should contain T lines, one for each test case. If the output of a test case is even print "" Even "" (without quotes), otherwise print "" Odd "".  Constraints :   N  10 5  0 < B  10 18  0 < T 100   Sample Input :  2 3 6 2 1    Sample Output : Odd Even  ",-0.185956168693,IOPC14A,"In a class of B students, the teacher wishes to distribute N! [ Factorial(N) ] oranges, such that each one of them gets equal number of oranges.

The teacher, being a lazy person, wants to give away oranges such that she has to take minimum number of them back with her.

Your job is to help the teacher to determine, given N and B, whether the number of oranges received by each student is even or odd.First line contains T, the number of test cases. Next T lines follow, each line containing two space separated integers N and B.The output should contain T lines, one for each test case. If the output of a test case is even print ""Even"" (without quotes), otherwise print ""Odd"".",1943,3592,0,68,0.652173913043,1,1
18210,0.0973820653608,MKBOOK,"  A printer  who still uses moveable type  is preparing to print a set of pages for a book. These pages are to
be numbered, as usual. The printer needs to know how many instances of each decimal digit will be required
to set up the page numbers in the section of the book to be printed. For example, if pages 10, 11, 12, 13, 14 and 15 are to be printed, computing the number of digits is relatively
simple: just look at the page numbers that will appear, and count the number of times each digit appears.
The digit 0 appears only once, the digit 1 appears 7 times, the digits 2, 3, 4 and 5 each appear once, and 6,
7, 8 and 9 dont appear at all. Your task in this problem is to provide the printer with the appropriate counts of the digits. You will be
given the numbers of the two pages that identify the section of the book to be printed. You may safely
assume that all pages in that section are to be numbered, that no leading zeroes will be printed, that page
numbers are positive, and that no page will have more than three digits in its page number.  There will be multiple cases to consider. The input for each case has two integers, A and B , each of which
is guaranteed to be positive. These identify the pages to be printed. That is, each integer P between A and B , including A and B , is to be printed. A single zero will follow the input for the last case.  For each input case, display the case number (1, 2, ) and the number of occurrences of each decimal digit
0 through 9 in the specified range of page numbers. Display your results in the format shown in the
examples below. Example   Input: 10 15
912 912
900 999
0 Output: Case 1: 0:1 1:7 2:1 3:1 4:1 5:1 6:0 7:0 8:0 9:0
Case 2: 0:0 1:1 2:1 3:0 4:0 5:0 6:0 7:0 8:0 9:1
Case 3: 0:20 1:20 2:20 3:20 4:20 5:20 6:20 7:20 8:20 9:120 ",-0.20329885747,PD21,"A printer – who still uses moveable type – is preparing to print a set of pages for a book. These pages are to be numbered, as usual. The printer needs to know how many instances of each decimal digit will be required to set up the page numbers in the section of the book to be printed. For example, if pages 10, 11, 12, 13, 14 and 15 are to be printed, computing the number of digits is relatively simple: just look at the page numbers that will appear, and count the number of times each digit appears. The digit 0 appears only once, the digit 1 appears 7 times, the digits 2, 3, 4 and 5 each appear once, and 6, 7, 8 and 9 don’t appear at all. Your task in this problem is to provide the printer with the appropriate counts of the digits. You will be given the numbers of the two pages that identify the section of the book to be printed. You may safely assume that all pages in that section are to be numbered, that no leading zeroes will be printed, that page numbers are positive, and that no page will have more than three digits in its page number.There will be multiple cases to consider. The input for each case has two integers, A and B, each of which is guaranteed to be positive. These identify the pages to be printed. That is, each integer P between A and B, including A and B, is to be printed. A single zero will follow the input for the last case.For each input case, display the case number (1, 2, …) and the number of occurrences of each decimal digit 0 through 9 in the specified range of page numbers. Display your results in the format shown in the examples below.",1956,3240,0,42,0.645631067961,6,1
18806,-0.167260395764,INS14A,"  In his next interview digo is given a binary string of N characters. A binary string is string consisting of only 0's and 1's. Digo can swap any adjacent pair of characters in one operation. Digo has to bring atleast M 1's together starting at any position of the string. Help him count the minimum number of operations required to do so. It is gauranteed that there are atleast M 1's present in the given string. Input Format: First line contains single integer T. Number of test cases. Next 2 * T lines represent T test cases. Each test case is described by two lines; first line contains a single integer M and the second line contains the input binary string. Output Format: Output T lines, one for each test case containing the answer for that case. Constraints : 1 <= T <= 10 1 <= N <= 50000 1 <= M <= N Sum of N over all the cases if less than or equal to 50000. Sample Input: 2 3 101001 2 101001 Sample Output: 3 1 ",-0.206867495754,CODE1601," Problem descriptionIn a meeting Monti is given a binary string of N characters. A binary string is string consisting of only 0's and 1's. Monti can swap any adjacent pair of characters in one operation. Monti has to bring at least M 1's together starting at any position of the string. Help him count the minimum number of operations required to do so.
It is guaranteed that there are at least M 1's present in the given string.First line contains single integer T. Number of test cases.
Next 2 * T lines represent T test cases. Each test case is described by two lines; first line contains a single integer M and the second line contains the input binary string.Output T lines, one for each test case containing the answer for that case.",2002,1798,0,50,0.619834710744,7,1
19677,-0.265333359344,REMGAME,"  Consider the following game. The game is played on a  5 x 5 board.  Initially  every  array  cell  has  a  piece 
in  it.  Two players  remove pieces alternatively  from  the  board.  The player  can  remove  any  number  of  consecutive pieces  in a row or column.
For example,  in  the configuration depicted below where one  indicates  a 
piece,  the  player  can  either  remove  one  piece  ( A1 , A2 ,  or B1 ),  or remove two pieces ( A1 and A2 , or A1 and B1 ) simultaneously. The game ends when one player is forced to take the
last piece, and the other player wins the game.        1  2  3  4  5   A  1  1  0  0  0   B  1  0  0  0  0   C  0  0  0  0  0   D  0  0  0  0  0   E  0  0  0  0  0      Write  a  program  that  evaluates  board  configurations  from  this  game.  
The  program must  output  ""winning"" when there exists a winning move
that no matter how the opponent responds, it will force the opponent to take
the last piece. Otherwise, the program must output ""losing"".  The first line contains n , the number
of test cases.  For each test case, a 5x5 grid
of an initial game configuration is shown.  For each case, output ""winning"" or ""losing"". Example   Input: 1 
1 0 0 0 0 
1 1 0 0 0 
1 1 1 0 0 
1 1 1 1 0 
1 1 1 1 1 Output: winning ",-0.209035028638,KC203,"Points:10One of the favourite games of the Brotherhoood of Brom went by the name of “Thou Last , Thou Loseth”. The game was played on a 5 by 5 board. Initially every array cell had a piece in it. Two players removed pieces alternatively from the board. The player could remove any number of consecutive pieces in a row or column. For example, in the configuration depicted below where one indicates a piece, the player could either remove one piece (A1, A2, or B1), or remove two pieces (A1 and A2, or A1and B1) simultaneously. The game would end when one player was forced to take the last piece, making the other player win the game.   1 2 3 4 5
A 1 1 0 0 0
B 1 0 0 0 0
C 0 0 0 0 0
D 0 0 0 0 0
E 0 0 0 0 0The first line consists of total no of test cases T(<50).The next 5T lines will consist of the configuration of each test case.Output is a string ""winning"" OR ""losing""",2178,604,0,174,0.375,7,1
19917,-0.269233506099,TANDC,"  Tracy is teaching Charlie maths via a game called N-Cube, which involves three sections involving N. Tracy gives Charlie a number N, and Charlie makes a list of N th powers of integers in increasing order (1 N , 2 N , 3 N .. so on). This teaches him exponentiation. Then Charlie performs the following subtraction game N times : Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if N was 6, the list proceeds as [1, 64, 729, 4096 ... ] to [63, 685, 3367 ...], and so on 5 more times. After the subtraction game, Charlie has to correctly tell Tracy the Nth element of the list. This number is the value of the game .  After practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers M (where M is a prime) and R instead of just a single number N, and the game must start from M R - 1 instead of N. Since the value of the game can now become large, Charlie just have to tell the largest integer K such that M K divides this number. Since even K can be large, output K modulo 1000000007 (10 9 +7).   INPUT: First line will contain T , number of testcases. Then the testcases follow Each testcase contains of a single line of input, two integers M R   OUTPUT: For each testcase, output in a single line answer given by Charlie to Tracy modulo 1000000007.   CONSTRAINTS: 1<=T<=1000 2<=M<=10 9 1<=R<=10 9 M is a prime number   SAMPLE INPUT: 1 2 2   SAMPLE OUTPUT: 1   EXPLANATION: This list is : [1,8,27,64,125..] -> [7,19,37,61..] -> [12,18,24..] -> [6,6,6..]. Number of times 2 divides 6 is 1. Hence the answer is 1. ",-0.203654223347,CDS2,"Rani is teaching Raju maths via a game called N-Cube, which involves three sections involving N.
Rani gives Raju a number N, and Raju makes a list of Nth powers of integers in increasing order (1^N, 2^N, 3^N.. so on). This teaches him exponentiation.Then Raju performs the following subtraction game N times : Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if N was 6, the list proceeds as [1, 64, 729, 4096 ... ] to [63, 685, 3367 ...], and so on 5 more times.After the subtraction game, Raju has to correctly tell Rani the Nth element of the list. This number is the value of the game.After practice Raju became an expert in the game. To challenge him more, Rani will give two numbers M (where M is a prime) and R instead of just a single number N, and the game must start from M^(R - 1) instead of N. Since the value of the game can now become large, Raju just have to tell the largest integer K such that M^K divides this number. Since even K can be large, output K modulo 1000000007 (109+7). First line will contain T, number of testcases. Then the testcases followEach testcase contains of a single line of input, two integers M RFor each testcase, output in a single line answer given by Raju to Rani modulo 1000000007.",2188,1993,0,81,0.715025906736,5,1
20295,-0.088501825156,RTREE,"  Roger is a computer science student who likes connected undirected acyclic graphs, also known as trees.He especiallylikes solving problems about trees. Recently Roger found a piece of paper with a rooted treewith 'N' vertices drawn on it(numbered from 1 to ' N ' ). He also found 'Q' queries on the same piece of paper,where each query was an integer  ' S ' between 1 to 'N' . But the paper said nothing about the descriptionof the queries. So he decided to find the longest path of each of the subtree 'S'.  Roger spent two sleepless nights trying to solve this problem efficiently. He is still tryingand won't sleep until he knows theanswer to each query.Write a program which answers all the queries correctly.   The first line contains an integer 'N', then N-1 lines follow.  Each of the next 'N-1' line contains two integer 'U' and 'V' which means that vertex 'U' and 'V' are connected.  Next line contains an integer 'R' which denotes the root of the tree.  Next line contains another integer 'Q' which denotes the number of queries.  Each of the next 'Q' line contains an integer 'S' between (1 to N).   For each query print the longest path of the subtree 'S' rooted at vertex 'R'.  Output exactly 'Q' lines, each line containing the output of the ith query.  Example  SAMPLE INPUT 3
1 2
1 3
1
2
1
2 SAMPLE OUTPUT 2
0  CONSTRAINTS  1  N  10^5 1  U,V  N 1  R  N 1  Q  10^5 1  S  N ",-0.196974728774,TREEFUN,"David is a computer science student who loves his future profession. He is one of those who think that trees grow down, not up.David likes connected undirected acyclic graphs, also known as trees. He especially likes solving problems about trees. Recently David found a piece of paper with a tree with N vertices drawn on it. He also found M queries on the same piece of paper, where each query was a non-empty list of some vertices of this tree. For each query, it was asked to find the number of vertices in the tree (which didn't belong to the list) such that if you removed this vertex and all edges incident to it from the tree, then all vertices from the list would belong to pairwise different connected components.David spent seven unhappy days and six sleepless nights trying to solve this problem efficiently. He is still trying. As you're known to be a good problem solver, David's friend asked for your help. David won't sleep until he knows the answer to each query. Write a program which answers all the queries correctly.The first line of the input contains a single integer T, the number of test cases (no more than 5). Each test case is described as follows. The first line contains two integers N and M (2 ≤ N ≤ 50000, 1 ≤ M ≤ 50000), the number of vertices in the tree and the number of queries, respectively. N-1 lines follow, describing the edges of the tree. The ith line contains two integers Xi and Yi (1 ≤ Xi, Yi ≤ N, Xi ≠ Yi), the indices of the vertices connected by the ith edge. Then M lines follow, describing the queries. The ith line contains an integer Ki (2 ≤ Ki ≤ N) followed by Ki distinct integers Ai, j (1 ≤ Ai, j ≤ N), the indices of the vertices in the ith query.It is guaranteed that the given graph is a tree in all the test cases. The sum of all Ki in each test case doesn't exceed 100000.For each test case output M lines containing a single integer each -- the answer to the corresponding query from the input.",2215,4559,0,90,0.316205533597,4,1
20650,-0.306493122977,XYZSTR,"  Coach Pang likes strings. He is also interested in algorithms. A few days ago he discovered for himself a very nice problem: You are given an XY-string S. You need to count the number of substrings of S, which have an equal number of 'X'-s and 'Y'-s. Do you know how to solve it? Good. Coach Pang will make the problem a little bit more difficult for you. You are given an XYZ-string S. You need to count the number of substrings of S, which have an equal number of 'X'-s, 'Y'-s and 'Z'-s. A string is called XY-string if it doesn't contain any symbols except 'X' or 'Y'. A string is called XYZ-string if it doesn't contain any symbols except 'X', 'Y' or 'Z'. A bit more difficulty is added to the Question characters 'X' ,'Y' and 'Z' will change for each test case.  Input:  The first line of the input contains T (number of test cases).For each test case there will be two lines.First contains a string of length three (""XYZ"") (only upper case letters) representing 'X' , 'y' and 'Z' respectively.Second line contains the XYZ-String S.    Output:  For each test case your output should contain the only integer, denoting the number of substrings of S, which have an equal number of 'X'-s, 'Y'-s and 'Z'-s.  Constraints  1  T  6 1  |S|  1000000; where |S| denotes the length of the given XYZ-string. Sum of all the strings S in the test file will not exceed 5000000.  Example    Input:  2 XYZ XYZXYZ ABC ABACABA  Output:  5 2  Explanation :  In the first example you should count S[1..3] = ""XYZ"" , S[2..4] = ""YZX"", S[3..5] = ""ZXY"" , S[4..6] = ""XYZ"" and S[1..6] = ""XYZXYZ"". Similarly in the second example you should count S[2..4] = ""BAC"" and S[4..6] = ""CAB"". ",0.0942869565821,ABCSTR,"Mike likes strings. He is also interested in algorithms. A few days ago he discovered for himself a very nice problem:You are given an AB-string S. You need to count the number of substrings of S, which have an equal number of 'A'-s and 'B'-s.Do you know how to solve it? Good. Mike will make the problem a little bit more difficult for you.You are given an ABC-string S. You need to count the number of substrings of S, which have an equal number of 'A'-s, 'B'-s and 'C'-s.A string is called AB-string if it doesn't contain any symbols except 'A' or 'B'. A string is called ABC-string if it doesn't contain any symbols except 'A', 'B' or 'C'.The first line of the input contains an ABC-string S.Your output should contain the only integer, denoting the number of substrings of S, which have an equal number of 'A'-s, 'B'-s and 'C'-s.The answer can go above a 32-bit integer. Please, use 64-bit integers for storing and processing data.",2261,3703,0,157,0.356020942408,3,1
21527,0.902952397111,OHANISER,"  Now a days, Ohani has become very expert in mathematics. Her teachers like her very much because of her excellent performance.  One day, one of her teacher gave her a problem to solve. He will give Ohani a number N. This will represent a table of N rows. The first row contains number from 1 to N. Then the next line will contain N-1 numbers, In the second row, the first number will be the summation of the first two numbers(1 + 2 ) of the previous row, the second number will be the summation of the second two numbers (2 + 3) of the previous row and so on. Row 3 will have N-2 numbers with same procedures. Same procedure follows for row 4, row 5, .... , row N. On the last row, there will be only a single number. Ohani has to tell that only number of the Nth row.  For example: If N = 4, then the table is:  1  2  3  4  3  5  7  8  12  20  So Ohani has to answer the last remaining number: 20.  She can answer when N is small, but can't when N is large. Can you help her?   The first line contains the number of testcases T(T<=100000).  Each of the test cases contain a number N where 1<=N<=100000.   You have to output the case number and the required answer. As the number can be very large, output the answer modulo 1000000007.  Example  Input: 2 1 2 Output: Case 1: 1 Case 2: 3  ",-0.197520472599,GOC204,"Santosh does yoga every morning and that is the secret behind his concentration level. But one fine day his friend Kishore gave him a problem to solve. He gave Santosh a number N. This represented a table of N rows. The first row contains number from 1 to N. Then the next line contains N-1 numbers. In the second row, the first number is the summation of the first two numbers of the previous row, the second number is the summation of the second two numbers of the previous row and so on. Row 3 is having N-2 numbers with same procedures. Same procedure follows for row 4, row 5, ... , row N. On the last row, there is only a single number. Santosh has to tell the number in the Nth row.For example: If N = 3, then the table is:

1 2 3

3 5

8

So Santosh has to answer the last remaining number 8.
He is very comfortable answering the problem when N is small but faces difficulty when N becomes large. Can you help him?The first line contains the number of testcases T.
Each of the test cases contain a number N .You have to output the case number and the required answer. As the number can be very large, output the answer modulo 1000000007.",2313,3042,0,65,0.497206703911,8,1
22423,-0.208648497742,CPC,"  Martin and Isa are very competitive. The newest competition they have created is about looking
at the plates of the cars. Each time one of them sees a car plate in the streets, he or she sends
to the other an SMS message with the content of that plate; the one who has seen the newest
plate is in the lead of the game. As the Automobile Car Management (ACM) office assigns the
plates sequentially in increasing order, they can compare them and find out who is the winner. Martin has a very smart eye and he has stayed on the lead for several weeks. Maybe he keeps
looking at the streets instead of working, or maybe he stays all day in front of car selling
companies waiting for new cars to go out with new plates. Isa, tired of being always behind,
has written a program that generates a random plate, so the next time Martin sends a message
to her, she will respond with this generated plate. In this way, she hopes to give Martin a hard
time trying to beat her. However, Martin has grown suspicious, and he wants to determine if Isa actually saw a car with
the plate she sent or not. This way, he will know if Isa is in the lead of the game. He knows some facts about the plates assigned by the ACM:   Each plate is a combination of 7 characters, which may be uppercase letters (A-Z), or
digits (0-9).  There exists two kinds of plate schemes: the old one, used for several years, and the new
one which has been in use for some months, when the combinations of the old one were
exhausted.  In the old scheme, the first three characters were letters, and the last four were digits, so
the plates run from AAA0000 to ZZZ9999.  In the new scheme, the first five characters are letters, and the last two are digits. Unfortunately
the chief of ACM messed up with the printing system while he was trying
to create a poster for his next campaign for mayor, and the printer is not able to write
the letters A, C, M, I, and P. Therefore, in this new scheme, the first plate is BBBBB00,
instead of AAAAA00.  The plates are assigned following a sequential order. As a particular case, the last plate
from the old scheme is followed by the first plate from the new scheme.  As Isa is not aware of all of this, she has just made sure that her random generator creates a
combination consisting of seven characters, where the first three characters are always uppercase
letters, the last two characters are always digits, and each one of the fourth and fifth characters
may be an uppercase letter or a digit (possibly generating an illegal combination, but she has
not much time to worry about that). Of course, Martin will not consider Isa the winner if he receives an illegal combination, or if he
receives a legal plate, but equal to or older than his. But thats not all of it. Since Martin knows
that new plates are not generated too fast, he will not believe that Isa saw a car with a plate
newer than the one he sent, but sequentially too far. For example, if Martin sends DDDDD45,
and receives ZZZZZ45, he will not believe that Isa saw a car with that plate, because he knows
that the ACM couldnt have printed enough plates to get to ZZZZZ45 in the time he received
that answer. So, Martin has decided to consider Isa the winner only if he receives a legal plate, newer than
his, and older than or equal to the C-th consecutive plate after the one he sent. He calls C his
confidence number. For example, if Martin sends ABC1234, and his confidence number is 6, he
will think that Isa is the winner only if he receives any plate newer than ABC1234, but older
than or equal to ABC1240.  The input contains several test cases. Each test case is described in a single line that contains
two strings S M and S I , and an integer C, separated by single spaces. S M is the 7-character
string sent by Martin, which is always a legal plate. S I is the 7-character string answered
by Isa, which was generated using her random generator. C is Martins confidence number (1 9).
The end of input is indicated by S M = S I =* and C = 0.  For each test case, output a single line with the uppercase character Y if, according to Martin,
Isa is the winner, and with the uppercase character N otherwise. Example   Input: ABC1234 ABC1240 6
ABC1234 ABC1234 6
ACM5932 ADM5933 260000
BBBBB23 BBBBC23 100
BBBBB23 BBBBD00 77
ZZZ9997 ZZZ9999 1
ZZZ9998 BBBBB01 3
ZZZZZ95 ZZZZZ99 10
BBBBB23 BBBBB22 5
* * 0 Output: Y
N
N
N
Y
N
Y
Y
N ",-0.209035028638,AXR3P2,"Nikhil and Nancy are very competitive. The newest competition they have created is about looking at the plates of the cars. Each time one of them sees a car plate in the streets, he or she sends to the other an SMS message with the content of that plate; the one who has seen the newest plate is in the lead of the game. .Nikhil has a very smart eye and he has stayed on the lead for several weeks. Maybe he keeps looking at the streets instead of working. Nancy, tired of being always behind, has written a program that generates a random plate, so the next time Nikhil sends a message to her, she will respond with this generated plate. In this way, she hopes to give Nikhil a hard time trying to beat her.However, Nikhil has grown suspicious, and he wants to determine if Nancy actually saw a car with the plate she sent or not. This way, he will know if Nancy is in the lead of the game.He knows some facts about the plates assigned by the Board:1.  Each plate is a combination of 7 characters, which may be uppercase letters (A-Z), or digits (0-9). 
2.  There exists two kinds of plate schemes: the old one, used for several years, and the new one which has been in use for some months, when the combinations of the old one were exhausted. 
3.  In the old scheme, the first three characters were letters, and the last four were digits, so the plates run from AAA0000 to ZZZ9999. 
4.  In the new scheme, the first five characters are letters, and the last two are digits. Unfortunately the chief of Board messed up with the printing system while he was trying to create a poster for his next campaign for mayor, and the printer is not able to write the letters A, C, M, I, and P. Therefore, in this new scheme, the first plate is BBBBB00, instead of AAAAA00. 
5.  The plates are assigned following a sequential order. As a particular case, the last plate from the old scheme is followed by the first plate from the new scheme.As Nancy is not aware of all of this, she has just made sure that her random generator creates a combination consisting of seven characters, where the first three characters are always uppercase letters, the last two characters are always digits, and each one of the fourth and fifth characters may be an uppercase letter or a digit (possibly generating an illegal combination, but she has not much time to worry about that).Of course, Nikhil will not consider Nancy the winner if he receives an illegal combination, or if he receives a legal plate, but equal to or older than his. But that�s not all of it. Since Nikhil knows that new plates are not generated too fast, he will not believe that Nancy saw a car with a plate newer than the one he sent, but sequentially too far. For example, if Nikhil sends DDDDD45, and receives ZZZZZ45, he will not believe that Nancy saw a car with that plate, because he knows that the Board couldn�t have printed enough plates to get to ZZZZZ45 in the time he received that answer.So, Nikhil has decided to consider Nancy the winner only if he receives a legal plate, newer than his, and older than or equal to the C-th consecutive plate after the one he sent. He calls C his confidence number. For example, if Nikhil sends ABC1234, and his confidence number is 6, he will think that Nancy is the winner only if he receives any plate newer than ABC1234, but older than or equal to ABC1240.The input file contains test cases. Each test case is described in a single line that contains two strings SM and SI , and an integer C, separated by single spaces. SM is the 7-character string sent by Nikhil, which is always a legal plate. SI is the 7-character string answered by Nancy, which was generated using her random generator. C is Nikhil�s confidence number (1 <= C <= 109). The end of input is indicated by SM = SI =�*� and C = 0.For each test case, output a single line with the uppercase character �Y� if, according to Nikhil, Nancy is the winner, and with the uppercase character �N� otherwise.",2400,1691,0,49,0.632352941176,5,1
22907,-0.146134749797,PHRASES,"  You are the King of Byteland. Your agents have just intercepted a batch of encrypted enemy messages concerning the date of the planned attack on your island. You immedietaly send for the Bytelandian Cryptographer, but he is currently busy eating popcorn and claims that he may only decrypt the most important part of the text (since the rest would be a waste of his time). You decide to select the fragment of the text which the enemy has strongly emphasised, evidently regarding it as the most important. So, you are looking for a fragment of text which appears in all the messages disjointly at least twice. Since you are not overfond of the cryptographer, try to make this fragment as long as possible.  The first line of input contains a single positive integer tOutput For each test case output the length of longest string which appears disjointly at least twice in all of the messages. Example   Input: 1
4
abbabba
dabddkababa
bacaba
baba Output: 2  (in the example above, the longest substring which fulfills the requirements is 'ba')",-0.205853432138,PHRASES,"You are the King of Byteland. Your agents have just intercepted a batch of encrypted enemy messages concerning the date of the planned attack on your island. You immedietaly send for the Bytelandian Cryptographer, but he is currently busy eating popcorn and claims that he may only decrypt the most important part of the text (since the rest would be a waste of his time). You decide to select the fragment of the text which the enemy has strongly emphasised, evidently regarding it as the most important. So, you are looking for a fragment of text which appears in all the messages disjointly at least twice. Since you are not overfond of the cryptographer, try to make this fragment as long as possible.The first line of input contains a single positive integer t<=10, the number of test cases. t test cases follow. Each test case begins with integer n (n<=10), the number of messages. The next n lines contain the messages, consisting only of between 2 and 10000 characters 'a'-'z', possibly with some additional trailing white space which should be ignored.For each test case output the length of longest string which appears disjointly at least twice in all of the messages.",2446,4968,1,22,0.696551724138,0,1
23110,-0.310325034948,BURNCITY," Terrorists from the BBFO have raised fires in the capital of Byteland! As is it is a hot summer day, most of the fire brigade have quite naturally taken a day off, and so the noble task of extinguishing all the fires falls to the only officer on duty. By now you will probably not be surprised to learn that he is in fact... Johnny. This enterprising youth remains undaunted by the challenge facing him, and, taking advantage of the absence of his superiors, he decides to use his favourite fire fighting technique. So, he loads the fire station's helicopter with as many dynamite charges as it can carry, and takes off on his errand of mercy. From up there in the sky Johnny can see the city as a square, sliced into smaller, identical squares by a regular grid of streets. Every square contains one of three kinds of terrain - buildings, grassland or water (perhaps most firemen would go into further detail when analysing terrain, but you really can't expect that from a firefighter whose preferred method of extinguishing fires is dynamite, can you?). Johnny starts out in the centre of the square corresponding to the fire station. In the time from the start of a minute to the end of that minute he can move to the center of one of the four adjacent squares (but he is not allowed to leave the city). While over the center of a square he can choose to drop a single dynamite charge on it. He starts preparing the charge at the beginning of a minute, and it is dropped from the helicopter at the end of the same minute. Everything on the square on which the bomb was dropped is blown apart, and in its place a crater is formed and instantly flooded by subterranean waters. The fire spreads in a most predictable way: if a square starts burning at the beginning of minute m, then all four adjacent squares will catch fire at the start of minute ( m +2). The only exception is a square filled with water (either naturally, or by Johnny's bombs) which never catches fire. If a square starts burning, all property on it is instantly destroyed. Once a square starts burning it will only stop burning if Johnny blows it up, or when the monsoon rain comes and floods the city, at the end of the h -th minute of firefighting. Johnny's main objective is to save as many squares with buildings as possible (from fire and dynamite). An example of the fire fighting process is presented below.    The first line of input contains a single integer t The first line of every test case contains five integers n c h s x s y , respectively denoting: n - the length of one side of the city (measured in squares), c - the number of dynamite charges Johnny can use, h - the number of minutes after which the rain falls, s x , s y - the x and y coordinates of the square containing the fire-station from which Johnny starts, measured relative to the North-West corner of the city (1s x , s y nchn; there are about 10 test cases for all possible values of n ). Finally, the map of the city is given in the form of n lines of n characters each, each corresponding to the state of a square at the start of the fire fighting ('b' - building, 'g' - grassland, 'w' - water, 'f' - fire).  For the i -th test case output a line containing the text 'city i Y' if you want to solve the test case or 'city i N' if you wish to leave it out. If you chose to the solve the test case, in the next line output a sequence of exactly h characters 'N', 'S', 'W', 'E', '+' or '-', corresponding to Johnny's actions in successive minutes (moving North, South, West and East on the map, dropping dynamite, not doing anything, respectively). Score  The total score is the total number of rescued squares with buildings taken over all test cases. Example   Input: 5
3 2 9 1 1
bgg
bbg
bbf
4 2 8 3 1
bbbb
bgwg
fwgg
gbbb
4 3 15 2 1
bbbb
bbbb
bbbb
fbbb
4 3 15 2 1
bbbf
bbbb
bbbb
fbbb
4 3 15 2 1
bbbf
bbbb
bbbb
fbbb Output: city 1 Y
S+E---N+-
city 2 Y
W+SSS+--
city 3 Y
ESE+SW+S+------
city 4 Y
+EES+W+--------
city 5 Y
+ES+-E+-------- Score: 9  (The first test case is illustrated in the figure and Johnny can save one building. In testcases 2, 3, 4, 5 Johnny saves 4, 2, 2 and 0 buildings, respectively).  Bonus info : The three digit number after the decimal point of your score denotes the number of test cases you have solved correctly, rescuing at least one building.  Warning: large Input/Output data, be careful with certain languages ",-0.206065538583,BURNCITY,"From up there in the sky Johnny can see the city as a square, sliced into smaller, identical squares by a regular grid of streets. Every square contains one of three kinds of terrain - buildings, grassland or water (perhaps most firemen would go into further detail when analyzing terrain, but you really can't expect that from a firefighter whose preferred method of extinguishing fires is dynamite, can you?).Johnny starts out in the center of the square corresponding to the fire station. In the time from the start of a minute to the end of that minute he can move to the center of one of the four adjacent squares (but he is not allowed to leave the city). While over the center of a square he can choose to drop a single dynamite charge on it. He starts preparing the charge at the beginning of a minute, and it is dropped from the helicopter at the end of the same minute. Everything on the square on which the bomb was dropped is blown apart, and in its place a crater is formed and instantly flooded by subterranean waters.The fire spreads in a most predictable way: if a square starts burning at the beginning of minute m, then all four adjacent squares will catch fire at the start of minute (m+2). The only exception is a square filled with water (either naturally, or by Johnny's bombs) which never catches fire. If a square starts burning, all property on it is instantly destroyed. Once a square starts burning it will only stop burning if Johnny blows it up, or when the monsoon rain comes and floods the city, at the end of the h-th minute of firefighting.Johnny's main objective is to save as many squares with buildings as possible (from fire and dynamite).An example of the fire fighting process is presented below.The first line of input contains a single integer t<=500, the number of test cases.The first line of every test case contains five integers n c h sx sy, respectively denoting: n - the length of one side of the city (measured in squares), c - the number of dynamite charges Johnny can use, h - the number of minutes after which the rain falls, sx, sy - the x and y coordinates of the square containing the fire-station from which Johnny starts, measured relative to the North-West corner of the city (1<=sx, sy<=n<=50, 0<=c<=h<=5*n; there are about 10 test cases for all possible values of n). Finally, the map of the city is given in the form of n lines of n characters each, each corresponding to the state of a square at the start of the fire fighting ('b' - building, 'g' - grassland, 'w' - water, 'f' - fire).For the i-th test case output a line containing the text 'city i Y' if you want to solve the test case or 'city i N' if you wish to leave it out.If you chose to the solve the test case, in the next line output a sequence of exactly h characters 'N', 'S', 'W', 'E', '+' or '-', corresponding to Johnny's actions in successive minutes (moving North, South, West and East on the map, dropping dynamite, not doing anything, respectively).",2466,6,1,269,0.612903225806,0,1
23761,-0.32731023686,RELIGION,"  pK has landed on Earth . Two things are worrying him right now :  1. His "" Remote control "", that has been stolen by Tapaswi Maharaj.  2. The Religious/communal clashes among people in the earth.(None of them are 'Athiests' & there are atleast two religions being followed)  God feeling pity,gives pK a chance to bring an end to these communal clashes between Humans.  To start with, God creates 'C' cities (for C religions).He then assigns each person to their respective cities on the basis of the religion that they follow.And people belonging to a particular city are bound to obey their ""City Heads"".He also builds individual "" Passages "" between each pair of cities.  In order to increase the integrity amoing people of different cities,God arranges a meeting inviting the ""City Heads"" of all the cities,requesting them to be peaceful with each other.Though many of the city heads mutually accepted this request of God,there were still some pairs of ""City Heads"" who were reluctant to be friendly with each other.God names the passages between these cities as ""Antagonistic"" passages & the rest as ""Friendly"" passages.  pK feared the existence of Antagonistic passages in the earth.God planned a re-Arrangement so as to transfer some cities to pK's planet such that these conditions are satisfied:  1)No Antagonistic passages are allowed to exist solely inside the Earth. 2)No Friendly passages are allowed to exist solely inside pK's planet(So that pK could concentrate in avoiding clashes at Antagonistic passages). 3)Both these passages are allowed to exist between Earth and pK's planet.(So that both pK and God could take care of the clashes in Antagonistic passages of this type). 4)Both the earth and pK's planet must be non empty.(No partiality). 5)It is not necessary for every city in pK's planet to have a passage to earth's cities.  If such an arrangement is not possible,some communal clash and loss of life is bound to occur.  Wicked Tapaswi Maharaj prays & hypnotizes God,attaining power to even destroy a city that exists in earth or pK's planet.He decides to destroy zero or more cities(thus the passages linked with those cities)so that the above arrangement being planned by God gets hampered & some communal clash occurs.Even if he destroy a single city he must be returning the ""Remote control"" to pK.(Considered by God as Tapaswi's sacrifice :/) Whatsoever,the power attained by Tapaswi is such that it gets exhausted when the total number of cities becomes two or less than that.  pK is said to have succeeded if he saves people's life by avoiding any clash from occuring.Or otherwise wicked Tapaswi is said to have succeeded.   :  The first line consists of an integer T (1<=T<=100),the number of test cases.T test cases follow : The first line of each test case contains two integers C & A ' C '-> No. of cities.(2<=C<=200)( Cities being labelled from 0 to C-1 ) ' A '-> No. of Antagonistic passages. 'A' lines follow,each containg two integers c1 & c2 (0<=c1,c2<C), the indexes of cities between which such a passage exists.    Each test case consists of two lines of output. First Line consists of either of the two strings ""pK triumphs"" or ""Tapaswi Maharaj triumphs"" on respective cases. Second Line contains the information about the current status of the ""Remote control"",i.e,either of the two strings ""Remote control lies with Tapaswi"" or ""pK gets back his Remote control"". ( Quotes for clarification ).   Constraints:  1<=T<=100  2<=C<=200  0<=A<=20000  0<=c1,c2<C   Example   Input:  1 4 2 0 2 1 3   Output:  Tapaswi Maharaj triumphs Remote control lies with Tapaswi   Explanation:  Tapaswi need not destroy any city this time,as such an arrangement following the conditions is not possible with the given set of Antoganistic passages existing.   ",-0.209035028638,K16D,"pK has landed on Earth. Two things are worrying him right now:



1. His ""Remote control"", that has been stolen by Tapaswi Maharaj.



2. The Religious/communal clashes among people in the earth.(None of them are 'Athiests' & there are atleast two religions being followed)



God feeling pity, gives pK a chance to bring an end to these communal clashes between Humans.



To start with, God creates 'C' cities (for C religions). He then assigns each person to their respective cities on the basis of the religion that theyfollow. And people belonging to a particular city are bound to obey their ""City Heads"". He also builds individual ""Passages"" between each pair of cities.



In order to increase the integrity among people of different cities, God arranges a meeting inviting the ""City Heads"" of all the cities, requesting them to be peacefulwith each other. Though many of the city heads mutually accepted this request of God, there were still some pairs of ""City Heads"" who were reluctant to be friendlywith each other. God names the passages between these cities as ""Antagonistic"" passages & the rest as ""Friendly"" passages.



pK feared the existence of Antagonistic passages in the earth. God planned a re-Arrangement so as to transfer some cities to pK's planet such that theseconditions are satisfied:


1) No Antagonistic passages are allowed to exist solely inside the Earth.

2) No Friendly passages are allowed to exist solely inside pK's planet(So that pK could concentrate in avoiding clashes at Antagonistic passages).

3) Both these passages are allowed to exist between Earth and pK's planet.(So that both pK and God could take care of the clashes in Antagonistic passages of thistype).

4) Both the earth and pK's planet must be non empty.(No partiality).

5) It is not necessary for every city in pK's planet to have a passage to earth's cities.



If such an arrangement is not possible,some communal clash and loss of life is bound to occur.



Wicked Tapaswi Maharaj prays & hypnotizes God, attaining power to even destroy a city that exists in earth or pK's planet. He decides to destroy zero or more cities(and thus the passages linked with those cities)so that the above arrangement being planned by God gets hampered & some communal clash occurs.Even if he destroy a singlecity he must be returning the ""Remote control"" to pK. (Considered by God as Tapaswi's sacrifice :/)
Whatsoever, the power attained by Tapaswi is such that it gets exhausted when the total number of cities becomes two or less than that.



pK is said to have succeeded if he saves people's life by avoiding any clash from occuring.Or otherwise wicked Tapaswi is said to have succeeded.",2491,1066,0,227,0.513812154696,8,1
24620,-0.210430816202,RTREE2,"  Roger was having fun solving his problems until he found this one.As you know, an undirected connected graph with N nodes and N-1 edges is called a tree.You are given an integer 'K' and a tree consisting of 'N' nodes. Each node 'i' has a value a(i) associated with it.  We call a path 'P' of tree valid if following conditions are satisfied:   P has at least 2 nodes associated with it.  Max a(u) - Min a(u) >= K (u belongs to the nodes present in the choosen P).   Your task is to count the number of Valid Paths.   The first line contains two space-separated integers N and K .  The second line contains N space-separated positive integers a(1),a(2),...,a(n).   Then the next n-1 line each contain pair of integers u and v denoting that there is an edge between u and v.   Print the number of Valid Paths.  Example  SAMPLE INPUT 3 1
1 2 3
1 2
2 3 SAMPLE OUTPUT 3  CONSTRAINTS  1 
1 
0 
0 ",-0.207033685068,COCR09,"Roger was having fun solving his problems until he found this one.As you know, an undirected connected graph with N nodes and N-1 edges is called a tree.You are given an integer 'K' and a tree consisting of 'N' nodes. Each node 'i' has a value a(i) associated with it.We call a path 'P' of tree valid if following conditions are satisfied:P has atleast 2 nodes associated with it.Max a(u) - Min a(u) >= K (u belongs to the nodes present in the chosen P).Your task is to count the number of Valid Paths.",2544,2090,0,91,0.552845528455,6,1
24627,0.110532245089,ORDERS,"  As you are probably well aware, in Byteland it is always the military officer's main worry to order his soldiers on parade correctly. In Bitland ordering soldiers is not really such a problem. If a platoon consists of n men, all of them have different rank (from 1 - lowest to n - highest) and on parade they should be lined up from left to right in increasing order of rank.  Sounds simple, doesn't it? Well, Msgt Johnny thought the same, until one day he was faced with a new command. He soon discovered that his elite commandos preferred to do the fighting, and leave the thinking to their superiors. So, when at the first rollcall the soldiers lined up in fairly random order it was not because of their lack of discipline, but simply because they couldn't work out how to form a line in correct order of ranks. Msgt Johnny was not at all amused, particularly as he soon found that none of the soldiers even remembered his own rank. Over the years of service every soldier had only learned which of the other soldiers were his superiors. But Msgt Johnny was not a man to give up easily when faced with a true military challenge. After a moment's thought a solution of brilliant simplicity struck him and he issued the following order: ""men, starting from the left, one by one, do: (step forward; go left until there is no superior to the left of you; get back in line)."" . This did indeed get the men sorted in a few minutes. The problem was solved... for the time being.  The next day, the soldiers came in exactly the same order as the day before, and had to be rearranged using the same method. History repeated. After some weeks, Msgt Johnny managed to force each of his soldiers to remember how many men he passed when going left, and thus make the sorting process even faster.  If you know how many positions each man has to walk to the left, can you try to find out what order of ranks the soldiers initially line up in?  The first line of input contains an integer ti, denoting how far the i-th soldier in line must walk to the left when applying Msgt Johnny's algorithm.  For each test case, output a single line consisting of n space separated integers - the ranks of the soldiers, given from left to right in their initial arrangement. Example   Input: 2
3
0 1 0
5
0 1 2 0 1 Output: 2 1 3
3 2 1 5 4  Warning: large Input/Output data, be careful with certain languages ",-0.108920792345,ORDERS,"In Byteland it is always the military officer's main worry to order his soldiers on parade correctly. Luckily, ordering soldiers is not really such a problem. If a platoon consists of n men, all of them have different rank (from 1 - lowest to n - highest) and on parade they should be lined up from left to right in increasing order of rank.Sounds simple, doesn't it? Well, Sgt Johnny thought the same, until one day he was faced with a new command. He soon discovered that his elite commandos preferred to do the fighting, and leave the thinking to their superiors. So, when at the first rollcall the soldiers lined up in fairly random order it was not because of their lack of discipline, but simply because they couldn't work out how to form a line in correct order of ranks. Sgt Johnny was not at all amused, particularly as he soon found that none of the soldiers even remembered his own rank. Over the years of service every soldier had only learned which of the other soldiers were his superiors. But Sgt Johnny was not a man to give up easily when faced with a true military challenge. After a moment's thought a solution of brilliant simplicity struck him and he issued the following order: ""men, starting from the left, one by one, do: (step forward; go left until there is no superior to the left of you; get back in line)."". This did indeed get the men sorted in a few minutes. The problem was solved... for the time being.The next day, the soldiers came in exactly the same order as the day before, and had to be rearranged using the same method. History repeated. After some weeks, Sgt Johnny managed to force each of his soldiers to remember how many men he passed when going left, and thus make the sorting process even faster.If you know how many positions each man has to walk to the left, can you try to find out what order of ranks the soldiers initially line up in?The first line of input contains an integer t<=50, the number of test cases. It is followed by t test cases, each consisting of 2 lines. The first line contains a single integer n (1<=n<=200000). The second line contains n space separated integers wi, denoting how far the i-th soldier in line must walk to the left when applying Sgt Johnny's algorithm.For each test case, output a single line consisting of n space separated integers - the ranks of the soldiers, given from left to right in their initial arrangement.",2549,73,1,15,0.808823529412,0,1
24654,-0.249994651102,BALLOON,"  You must write a program that simulates placing spherical balloons into a rectangular box. The simulation scenario is as follows. Imagine that you are given a rectangular box and a set of points. Each point represents a position where you might place a balloon. To place a balloon at a point, center it at the point and inflate the balloon until it touches a side of the box or a previously placed balloon. You may not use a point that is outside the box or inside a previously placed balloon. However, you may use the points in any order you like, and you need not use every point. Your objective is to place balloons in the box in an order that maximizes the total volume occupied by the balloons. You are required to calculate the volume within the box that is not enclosed by the balloons.  The input consists of several test cases. The first line of each test case contains a single integer n that indicates the number of points in the set (1The input is terminated by the number zero on a line by itself.  For each test case print one line of output consisting of the test case number followed by the volume of the box not occupied by balloons. Round the volume to the nearest integer. Follow the format in the sample output given below. Place a blank line after the output of each test case. Example  Input: 2
0 0 0
10 10 10
3 3 3
7 7 7
0 Output: Box 1: 774 ",-0.209035028638,P9,"You must write a program that simulates placing spherical balloons into a rectangular box.The simulation scenario is as follows. Imagine that you are given a rectangular box and a set of points. Each point represents a position where you might place a balloon. To place a balloon at a point, center it at the point and inflate the balloon until it touches a side of the box or a previously placed balloon. You may not use a point that is outside the box or inside a previously placed balloon. However, you may use the points in any order you like, and you need not use every point. Your objective is to place balloons in the box in an order that maximizes the total volume occupied by the balloons.You are required to calculate the volume within the box that is not enclosed by the balloons.The input consists of several test cases. The first line of each test case contains a single integer n that indicates the number of points in the set (1<=n<=6). The second line contains three integers that represent the (x, y, z) integer coordinates of a corner of the box, and the third line contains the (x, y, z) integer coordinates of the opposite corner of the box. The next n lines of the test case contain three integers each, representing the (x, y, z) coordinates of the points in the set. The box has non-zero length in each dimension and its sides are parallel to the coordinate axes.The input is terminated by the number zero on a line by itself.For each test case print one line of output consisting of the test case number followed by the volume of the box not occupied by balloons. Round the volume to the nearest integer. Follow the format in the sample output given below.Place a blank line after the output of each test case.",2550,1635,0,53,0.670731707317,7,1
25173,-0.310192884636,BYTELE,"  King Johnny has a serious drink problem, which has recently become the focus of attention of all Bytelandian tabloids and colour magazines. In a desperate effort to divert the public's attention and ingratiate himself with his subjects, he decides to start giving out valuable gifts. This time he has chosen to harass the peaceful life of the CEO of Bytelandian Telecom, and requested him to create a Metropolitan Area Network for the citizens of the capital of Byteland, as part of an ""our King is a good man"" campaign. The CEO has no choice but to obey the orders he receives. This rational and business-minded man would obviously like to perform the installation at the smallest possible cost, and he asks you for your help. The King has stated the topology of the network plainly enough in the form of a graph (not necessarily connected), with vertices corresponding to nodes (computers), and edges to the cable connections between them. It is now your task to select the points of the city to place the nodes of the network at. The city is a regular mesh of streets (depicted as vertical and horizontal segments on a map), with crossroads located at points with integer coordinates. Nodes may only be located at crossroads of streets (no two nodes at the same crossroad). Cables may only run along streets and must connect nodes by the shortest possible route under this constraint. Moreover, a cable of precisely such length must be currently in stock (you are provided with a list of possible cable lengths).

Try to layout the network in such a way as to minimise the total length of cable used.  The input starts with a line containing integer t t test cases follow. The first line of a test cases begins with integer k , denoting the number of different available cable lengths, followed by k space separated integers p j corresponding to the allowed lengths of cables (1 k p j n m, denoting the required number of nodes and cables in the network, respectively (1 n m a j b j each, signifying that nodes a j and b j should be connected by a cable (1 a j ,b j ).   A valid solution to the i -th test case consists of a line with the text ' city i Y ', followed by n i lines each containing two integers, the x- and y-coordinates of successive nodes in the solution (0 x, y It is guaranteed that for every test case there exists at least one possible solution. You can however leave out a test case by outputting the line ' city i N ' instead of a valid solution. Score  For each correctly solved test case you are awarded ( m / sum ) * (( p 1 +p 2 +...+p k )/ k ) points, where sum is the total length of all cables used.  The score awarded to your program is the sum of scores for individual test cases.  Example   Input: 4
2 1 2
4 5
1 2
2 3
3 4
1 4
2 4
1 2
4 5
1 2
2 3
3 4
1 4
2 4
2 1 2
5 8
1 2
1 3
1 4
1 5
2 4
2 5
3 4
3 5
1 1
2 1
1 2 Output: city 1 Y
0 0
0 1
1 1
1 0
city 2 Y
2 0
1 1
0 2
0 0
city 3 Y
0 1
0 2
1 1
1 2
0 0
city 4 N Score: score = 3.340003  Bonus info: If score = xxx . xxxaaa , aaa means the number of test cases with non-zero score... ",-0.209035028638,ISM08,"King Johnny has a serious drink problem, which has recently become the focus of attention of all Bytelandian tabloids and colour magazines. In a desperate effort to divert the public's attention and ingratiate himself with his subjects, he decides to start giving out valuable gifts. This time he has chosen to harass the peaceful life of the CEO of Bytelandian Telecom, and requested him to create a Metropolitan Area Network for the citizens of the capital of Byteland, as part of an ""our King is a good man"" campaign. The CEO has no choice but to obey the orders he receives. This rational and business-minded man would obviously like to perform the installation at the smallest possible cost, and he asks you for your help. The King has stated the topology of the network plainly enough in the form of a graph (not necessarily connected), with vertices corresponding to nodes (computers), and edges to the cable connections between them. It is now your task to select the points of the city to place the nodes of the network at. The city is a regular mesh of streets (depicted as vertical and horizontal segments on a map), with crossroads located at points with integer coordinates. Nodes may only be located at crossroads of streets (no two nodes at the same crossroad). Cables may only run along streets and must connect nodes by the shortest possible route under this constraint. Moreover, a cable of precisely such length must be currently in stock (you are provided with a list of possible cable lengths). Try to layout the network in such a way as to minimise the total length of cable used.The input starts with a line containing integer t <= 1000, the number of test cases. t test cases follow. The first line of a test cases begins with integer k, denoting the number of different available cable lengths, followed by k space separated integers pj corresponding to the allowed lengths of cables (1 <= k <= 100, 1 <= pj <= 100). The next line contains two integers n m, denoting the required number of nodes and cables in the network, respectively (1 <= n <= 100, 1 <= m <= 1000). The next m lines contain a pair of integers aj bj each, signifying that nodes aj and bj should be connected by a cable (1 <= aj,bj <= n).A valid solution to the i-th test case consists of a line with the text 'city i Y', followed by ni lines each containing two integers, the x- and y-coordinates of successive nodes in the solution (0 <= x,y <= 100). It is guaranteed that for every test case there exists at least one possible solution. You can however leave out a test case by outputting the line 'city i N' instead of a valid solution.",2611,1622,0,119,0.687116564417,6,1
25271,-0.310192884636,BYTELE,"  King Johnny has a serious drink problem, which has recently become the focus of attention of all Bytelandian tabloids and colour magazines. In a desperate effort to divert the public's attention and ingratiate himself with his subjects, he decides to start giving out valuable gifts. This time he has chosen to harass the peaceful life of the CEO of Bytelandian Telecom, and requested him to create a Metropolitan Area Network for the citizens of the capital of Byteland, as part of an ""our King is a good man"" campaign. The CEO has no choice but to obey the orders he receives. This rational and business-minded man would obviously like to perform the installation at the smallest possible cost, and he asks you for your help. The King has stated the topology of the network plainly enough in the form of a graph (not necessarily connected), with vertices corresponding to nodes (computers), and edges to the cable connections between them. It is now your task to select the points of the city to place the nodes of the network at. The city is a regular mesh of streets (depicted as vertical and horizontal segments on a map), with crossroads located at points with integer coordinates. Nodes may only be located at crossroads of streets (no two nodes at the same crossroad). Cables may only run along streets and must connect nodes by the shortest possible route under this constraint. Moreover, a cable of precisely such length must be currently in stock (you are provided with a list of possible cable lengths).

Try to layout the network in such a way as to minimise the total length of cable used.  The input starts with a line containing integer t t test cases follow. The first line of a test cases begins with integer k , denoting the number of different available cable lengths, followed by k space separated integers p j corresponding to the allowed lengths of cables (1 k p j n m, denoting the required number of nodes and cables in the network, respectively (1 n m a j b j each, signifying that nodes a j and b j should be connected by a cable (1 a j ,b j ).   A valid solution to the i -th test case consists of a line with the text ' city i Y ', followed by n i lines each containing two integers, the x- and y-coordinates of successive nodes in the solution (0 x, y It is guaranteed that for every test case there exists at least one possible solution. You can however leave out a test case by outputting the line ' city i N ' instead of a valid solution. Score  For each correctly solved test case you are awarded ( m / sum ) * (( p 1 +p 2 +...+p k )/ k ) points, where sum is the total length of all cables used.  The score awarded to your program is the sum of scores for individual test cases.  Example   Input: 4
2 1 2
4 5
1 2
2 3
3 4
1 4
2 4
1 2
4 5
1 2
2 3
3 4
1 4
2 4
2 1 2
5 8
1 2
1 3
1 4
1 5
2 4
2 5
3 4
3 5
1 1
2 1
1 2 Output: city 1 Y
0 0
0 1
1 1
1 0
city 2 Y
2 0
1 1
0 2
0 0
city 3 Y
0 1
0 2
1 1
1 2
0 0
city 4 N Score: score = 3.340003  Bonus info: If score = xxx . xxxaaa , aaa means the number of test cases with non-zero score... ",-0.206277645006,BYTELE,"King Johnny has a serious drink problem, which has recently become the focus of attention of all Bytelandian tabloids and colour magazines. In a desperate effort to divert the public's attention and ingratiate himself with his subjects, he decides to start giving out valuable gifts. This time he has chosen to harass the peaceful life of the CEO of Bytelandian Telecom, and requested him to create a Metropolitan Area Network for the citizens of the capital of Byteland, as part of an ""our King is a good man"" campaign.The CEO has no choice but to obey the orders he receives. This rational and business-minded man would obviously like to perform the installation at the smallest possible cost, and he asks you for your help.The King has stated the topology of the network plainly enough in the form of a graph (not necessarily connected), with vertices corresponding to nodes (computers), and edges to the cable connections between them. It is now your task to select the points of the city to place the nodes of the network at. The city is a regular mesh of streets (depicted as vertical and horizontal segments on a map), with crossroads located at points with integer coordinates. Nodes may only be located at crossroads of streets (no two nodes at the same crossroad). Cables may only run along streets and must connect nodes by the shortest possible route under this constraint. Moreover, a cable of precisely such length must be currently in stock (you are provided with a list of possible cable lengths). Try to layout the network in such a way as to minimise the total length of cable used.The input starts with a line containing integer t <= 1000, the number of test cases. t test cases follow.The first line of a test cases begins with integer k, denoting the number of different available cable lengths, followed by k space separated integers pj corresponding to the allowed lengths of cables (1 <= k <= 100, 1 <= pj <= 100). The next line contains two integers n m, denoting the required number of nodes and cables in the network, respectively (1 <= n <= 100, 1 <= m <= 1000). The next m lines contain a pair of integers aj bj each, signifying that nodes aj and bj should be connected by a cable (1 <= aj,bj <= n).A valid solution to the i-th test case consists of a line with the text 'city i Y', followed by ni lines each containing two integers, the x- and y-coordinates of successive nodes in the solution (0 <= x,y <= 100).It is guaranteed that for every test case there exists at least one possible solution. You can however leave out a test case by outputting the line 'city i N' instead of a valid solution.",2611,5356,1,123,0.669696969697,0,1
25279,-0.31541694976,NAJAG,"  Tonight, Alice and Bob are feeling so boring. Alice is a math student. So he suggested to play an interesting game. They play the following game.  They choose a number N to play with. The runs are as follows :  1. In every game Bob starts first and the two players alternate.  2. In his/her turn , a player chooses a number from 1,2,3,5 and 7, which is less than N. And then subtract it from N. The number thus obtained is the new N.  3. The person who cannot make a move in his/her turn loses the game.  Assuming both play optimally, who wins the game ?     The first line contains the number of test cases T10000. Each of the next lines contains an integer N<=1000000.   Output T lines one for each test case ,containing ""ALICE"" if Alice wins the game ,or ""BOB"" if Bob wins the game. Dont Forget about Case Number.  Sample:      Input    Output      2  1  2  3    Case 1: ALICE  Case 2: BOB  Case 3: BOB          Note : For the first test case, Bob cannot make any move and hence Alice wins the game. For the second test case, Bob subtracts 1 from N. Now, Alice cannot make a move and loses the game. ",0.819631125229,NUMGAME2,"Alice and Bob play the following game.They choose a number N to play with.The runs are as follows :

1.Bob plays first and the two players alternate.

2.In his/her turn ,a player can subtract from N any prime number(including 1) less than N.The number thus obtained is the new N.

3.The person who cannot make a move in his/her turn loses the game.

Assuming both play optimally,who wins the game ?The first line contains the number of test cases T.Each of the next lines contains an integer N.Output T lines one for each test case,containing ""ALICE"" if Alice wins the game ,or ""BOB"" if Bob wins the game.",2616,3769,0,149,0.420289855072,6,1
25334,-0.289311880326,HOLIDAY1,"  King Johnny of Byteland has in his short period of sovereignty established quite a few national holidays (close on thirty, in fact) in honour of... more or less anything he could think of. Each of these holidays occurs every a fixed number of days (possibly different for every holiday), and is accompanied by feasts, cabaret shows, and general merrymaking. Sometimes more than one holiday occurs on a single day, and once in a while all holidays take place on the same day. If this happens, the celebrations are combined and even more festive. After one such party, king Johnny started behaving strangely and had to be temporarily isolated from society. For the period of king Johnny's absence (about 48 hours) you have been appointed Regent of Byteland. As a true patriot, you know that holidays are not good for the people, and would like to remove some before king Johnny returns (he won't mind, he never remembers anything after a party anyway). The people however, very sadly, don't know what is good for them, and will revolt if you remove more than k holidays. Try to choose the holidays you remove in such a way as to guarantee that the number of days which elapse between two consecutive holiday parties is as long as possible.  Solve the problem in at most 4kB of source code.   The first line of input contains a single integer t
For each test case, the first line contains two space separated integers n k (1i (1i18) - the number of days every which the i-th holiday occurs.  For each test case, output one line containing an increasing sequence of exactly k integers - the numbers of the holidays to be removed (holidays are numbered in the input order from 1 to n). Example   Input: 1
5 2
6 13 10 15 7 Output: 2 5  (The shortest period between two successive holiday parties is 2 days.)",-0.209035028638,HOLIDAY1,"King Johnny of Byteland has in his short period of sovereignty established quite a few national holidays (close on thirty, in fact) in honour of... more or less anything he could think of. Each of these holidays occurs every a fixed number of days (possibly different for every holiday), and is accompanied by feasts, cabaret shows, and general merrymaking. Sometimes more than one holiday occurs on a single day, and once in a while all holidays take place on the same day. If this happens, the celebrations are combined and even more festive. After one such party, king Johnny started behaving strangely and had to be temporarily isolated from society.For the period of king Johnny's absence (about 48 hours) you have been appointed Regent of Byteland. As a true patriot, you know that holidays are not good for the people, and would like to remove some before king Johnny returns (he won't mind, he never remembers anything after a party anyway). The people however, very sadly, don't know what is good for them, and will revolt if you remove more than k holidays. Try to choose the holidays you remove in such a way as to guarantee that the number of days which elapse between two consecutive holiday parties is as long as possible.Solve the problem in at most 4kB of source code.The first line of input contains a single integer t<=200 - the number of test cases. t test case descriptions follow.For each test case, the first line contains two space separated integers n k (1<=k < n<=30), denoting the total number of holidays and the number of holidays to be removed. The next line contains n space separated integers, the i-th being ti (1<=ti<=1018) - the number of days every which the i-th holiday occurs.For each test case, output one line containing an increasing sequence of exactly k integers - the numbers of the holidays to be removed (holidays are numbered in the input order from 1 to n).",2626,1706,1,4,0.79185520362,0,1
25487,0.893586366448,SUMITR,"  Let us consider a triangle of numbers in which a number appears in the first line, two 
numbers appear in the second line etc. Develop a program which will compute the largest 
of the sums of numbers that appear on the paths starting from the top
towards the base, so that:  on each path the next number is located on the row below, more precisely 
either directly below or below and one place to the right;  the number of rows is strictly positive, but less than 100;  all numbers are positive integers between O and 99.   Take care about your fingers, do not use more than 256 bytes of code.  In the first line integer n - the number of test cases (equal to about 1000). 
Then n test cases follow. Each test case starts with the number of lines which is followed by their content.  For each test case write the determined value in a separate line. Example   Input: 2
3
1
2 1
1 2 3
4 
1 
1 2 
4 1 2
2 3 1 1 Output: 5
9  Warning: large Input/Output data, be careful with certain languages ",-0.203901875471,RIYAPUZL," Riya is quite famous for her problem-solving skills in VESIT. When she was facing an interview for placement, a recruiter asked her this question :



Let's consider a triangle of numbers in which a number appears in the first line, two numbers appear in the second line, three in the third line, etc. Develop a program which will compute the largest of the sums of numbers that appear on the paths starting from the top towards the base, so that:on each path the next number is located on the row below, more precisely either directly below or below and one place to the right.
Remember you cannot travel to the number which is below and one place to the left. In the first line it consists of one integer N - the number of test cases (equal to about 100). Then N test cases follow. Each test case starts with R denoting the number of lines and which is followed by their R lines of content. For each test case write the determined value in a separate line. ",2657,2010,0,18,0.426829268293,8,1
25488,0.893586366448,SUMITR,"  Let us consider a triangle of numbers in which a number appears in the first line, two 
numbers appear in the second line etc. Develop a program which will compute the largest 
of the sums of numbers that appear on the paths starting from the top
towards the base, so that:  on each path the next number is located on the row below, more precisely 
either directly below or below and one place to the right;  the number of rows is strictly positive, but less than 100;  all numbers are positive integers between O and 99.   Take care about your fingers, do not use more than 256 bytes of code.  In the first line integer n - the number of test cases (equal to about 1000). 
Then n test cases follow. Each test case starts with the number of lines which is followed by their content.  For each test case write the determined value in a separate line. Example   Input: 2
3
1
2 1
1 2 3
4 
1 
1 2 
4 1 2
2 3 1 1 Output: 5
9  Warning: large Input/Output data, be careful with certain languages ",2.07598757232,SUMTRIAN,"Let's consider a triangle of numbers in which a number appears in the first line, two numbers appear in the second line, three in the third line, etc. Develop a program which will compute the largest of the sums of numbers that appear on the paths starting from the top towards the base, so that:on each path the next number is located on the row below, more precisely either directly below or below and one place to the right;
the number of rows is strictly positive, but less than 100
all numbers are positive integers between O and 99.In the first line integer n - the number of test cases (equal to about 1000). Then n test cases follow. Each test case starts with the number of lines which is followed by their content.For each test case write the determined value in a separate line.",2657,5197,0,53,0.572463768116,4,1
25632,9.11601735395,FCTRL2,"  You are asked to calculate factorials of some small positive integers.   An integer t, 1  For each integer n given at input, display a line with the value of n!  Example  Sample input: 4
1
2
5
3  Sample output: 1
2
120
6  ",-0.180785800824,FCTR1," You are asked to calculate factorials of some small positive integers. An integer t, 1<=t<=100, denoting the number of testcases, followed by t lines, each containing a single integer n, 1<=n<=100.For each integer n given at input, display a line with the value of n!",2691,3470,0,1,0.574468085106,2,1
25633,9.11601735395,FCTRL2,"  You are asked to calculate factorials of some small positive integers.   An integer t, 1  For each integer n given at input, display a line with the value of n!  Example  Sample input: 4
1
2
5
3  Sample output: 1
2
120
6  ",-0.178817698407,FACT25,"Simple FactorialYou are asked to calculate factorials of some small positive integers.
Input Tips:An integer T, denoting the number of testcases, followed by T lines, each containing a single integer N. For each integer N given at input, output a single line the value of N!If you have multiple test cases in a file start this section as: ""For each test case, output a single line containing..."". ",2691,3500,0,20,0.298507462687,4,1
25634,9.11601735395,FCTRL2,"  You are asked to calculate factorials of some small positive integers.   An integer t, 1  For each integer n given at input, display a line with the value of n!  Example  Sample input: 4
1
2
5
3  Sample output: 1
2
120
6  ",4.25113904107,FCTRL2,"You are asked to calculate factorials of some small positive integers.An integer t, 1<=t<=100, denoting the number of testcases, followed by t lines, each containing a single integer n, 1<=n<=100.For each integer n given at input, display a line with the value of n!",2691,5170,1,3,0.5,0,1
25863,0.0969179167079,STABLEMP,"  There are given n men and n women. Each woman ranks all men in order of her preference (her first choice, her second choice, and so on). Similarly, each man sorts all women according to his preference. The goal is to arrange n marriages in such a way that if a man m prefers some woman w more than his wife, then w likes her husband more than m . In this way, no one leaves his partner to marry
somebody else. This problem always has a solution and your task is to find one.  The first line contains a positive integer t n n lines are the woman 's preferences: i th line contains the number i (which means that this is the list given by the i th woman) and the numbers of men (the first choice of i th woman, the second choice,...). Then, the men 's preferences follow in the same format.  For each test case print n lines, where each line contains two numbers m and w , which means that the man number m and the woman number w should get married. Example   Input: 2
4
1 4 3 1 2
2 2 1 3 4
3 1 3 4 2
4 4 3 1 2
1 3 2 4 1
2 2 3 1 4
3 3 1 2 4
4 3 2 4 1
7
1 3 4 2 1 6 7 5
2 6 4 2 3 5 1 7
3 6 3 5 7 2 4 1
4 1 6 3 2 4 7 5
5 1 6 5 3 4 7 2
6 1 7 3 4 5 6 2
7 5 6 2 4 3 7 1
1 4 5 3 7 2 6 1
2 5 6 4 7 3 2 1
3 1 6 5 4 3 7 2
4 3 5 6 7 2 4 1
5 1 7 6 4 3 5 2
6 6 3 7 5 2 4 1
7 1 7 4 2 6 5 3 Output: 1 3
2 2
3 1
4 4
1 4
2 5
3 1
4 3
5 7
6 6
7 2  Warning: large Input/Output data, be careful with certain languages ",-0.135858309309,STABLEMP,"There are given n men and n women. Each woman ranks all men in order of her preference (her first choice, her second choice, and so on). Similarly, each man sorts all women according to his preference. The goal is to arrange n marriages in such a way that if a man m prefers some woman w more than his wife, and w prefers m more then her husband a new marriage occurs between w and m. If w prefers her husband more, then she stays married to him. This problem always has a solution and your task is to find one.The first line contains a positive integer t<=100 indicating the number of test cases. Each test case is an instance of the stable marriage problem defined above. The first line of each test case is a positive integer n<=500 (the number of marriages to find). The next n lines are the woman's preferences: ith line contains the number i (which means that this is the list given by the ith woman) and the numbers of men (the first choice of ith woman, the second choice,...). Then, the men's preferences follow in the same format.For each test case print n lines, where each line contains two numbers m and w, which means that the man number m and the woman number w should get married.",2713,3736,1,125,0.502732240437,0,1
25980,0.717669828566,POUR1,"  Given two vessels, one of which can accommodate a litres of water and the other - b litres of water, determine the number of steps required to obtain exactly c litres of water in one of the vessels.  At the beginning both vessels are empty. The following operations are counted as 'steps':    emptying a vessel,  filling a vessel,  pouring water from one vessel to the other, without spilling, until one of the vessels is either full or empty.       An integer t , 1<= t <=100, denoting the number of testcases, followed by t sets of input data, each consisting of three positive integers a, b, c , not larger than 40000, given in separate lines.   For each set of input data, output the minimum number of steps required to obtain c litres, or -1 if this is impossible.  Example  Sample input: 2
5
2
3
2
3
4   Sample output: 2
-1  ",-0.0620452706877,POUR1,"Given two vessels, one of which can accommodate a liters of water and the other which can accommodate b liters of water, determine the number of steps required to obtain exactly c liters of water in one of the vessels.At the beginning both vessels are empty. The following operations are counted as 'steps':emptying a vessel,
filling a vessel,
pouring water from one vessel to the other, without spilling, until one of the vessels is either full or empty.An integer t, 1<=t<=100, denoting the number of test cases, followed by t sets of input data, each consisting of three positive integers a (the number of liters the first container can hold), b (the number of liters the second container can hold), and c (the final amount of liters of water one vessel should contain), not larger than 40000, given in separate lines.For each set of input data, output the minimum number of steps required to obtain c liters, or -1 if this is impossible.",2752,3697,1,6,0.598290598291,0,1
26072,-0.0283069222808,ELPESUM,"  Special Thanks: Jane Alam Jan *At moment in University of Texas at San Antonio - USA   You will be given n integers A 1 A 2 A 3 ...A n . Find a permutation of these n integers so that summation of the absolute differences between adjacent elements is maximized.  Suppose n = 4 and the given integers are 4 2 1 5 . The permutation 2 5 1 4 yields the maximum summation. 	For this permutation sum = abs(2-5) + abs(5-1) + abs(1-4) = 3+4+3 = 10 .  Of all the 24 permutations, you wont get any summation whose value exceeds 10 . We will call this value, 10 , the elegant permuted sum .    The first line of input is an integer T ( T < 100) that represents the number of test cases. Each case consists of a line that starts with n (1 < n < 51) followed by n non-negative integers separated by a single  space. None of the elements of the given permutation will exceed 1000.    For each case, output the case number followed by the elegant permuted summation .   Example  Input: 3 4 4 2 1 5 4 1 1 1 1 2 10 1 Output: Case 1: 10 Case 2: 0 Case 3: 9 ",-0.205074339028,ENCD03,"The Problem is simple. You will be given n integers .Find an arrangement of these n integers so that summation of the absolute differences between adjacent elements is maximized. Suppose n = 4 and the given integers are <4 2 1 5>. The re-arrangement <2 5 1 4> yields the maximum summation. For this arrangement, sum = abs(2-5) + abs(5-1) + abs(1-4) = 3+4+3 = 10. Of all the 24 different arrangements of the above list, you won’t get any summation whose value exceeds 10. We will call this value, 10, the ""Interesting list sum"".The Input will consist of number of test cases. Each case consists of a line that starts with n. n will be greater than 1 and smaller than 51, followed by n non-negative integers separated by a single space. None of the elements of the given list will exceed 1000. Terminate the input with n=0.For each case, output the ""Interesting list sum"".",2784,3244,0,73,0.493421052632,6,1
26214,-0.32731023686,RETO10M4,"  Given a natural number n (1 <= n <= 500000), please output the summation of all its proper divisors. Definition:A proper divisor of a natural number is the divisor that is strictly less than the number.  e.g. number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.   An integer stating the number of test cases (equal to about 200000), and that many lines follow, each containing one integer between 1 and 500000 inclusive.   One integer each line: the divisor summation of the integer given respectively.  Example  Input:  3 2 10 20  Output:  1 1 8 22 ",-0.0520073430479,PD13,"Given a natural number n (1 <= n <= 500000), please output the summation of all its proper divisors. Definition: A proper divisor of a natural number is the divisor that is strictly less than the number. e.g. number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.An integer stating the number of test cases (equal to about 200000), and that many lines follow, each containing one integer between 1 and 500000 inclusive.One integer each line: the divisor summation of the integer given respectively.",2821,4768,0,25,0.792207792208,7,1
26215,-0.32731023686,RETO11M6,"  A regular palindrome is a string of numbers or letters that is the same forward as backward. For example, the string ""ABCDEDCBA"" is a palindrome because it is the same when the string is read from left to right as when the string is read from right to left.  A mirrored string is a string for which when each of the elements of the string is changed to its reverse (if it has a reverse) and the string is read backwards the result is the same as the original string. For example, the string ""3AIAE"" is a mirrored string because ""A"" and ""I"" are their own reverses, and ""3"" and ""E"" are each others' reverses.  A mirrored palindrome is a string that meets the criteria of a regular palindrome and the criteria of a mirrored string. The string ""ATOYOTA"" is a mirrored palindrome because if the string is read backwards, the string is the same as the original and because if each of the characters is replaced by its reverse and the result is read backwards, the result is the same as the original string. Of course, ""A"", ""T"", ""O"", and ""Y"" are all their own reverses.  A list of all valid characters and their reverses is as follows.      Character    Reverse    Character    Reverse    Character    Reverse      A    A    M    M    Y    Y      B        N        Z    5      C        O    O    1    1      D        P        2    S      E    3    Q        3    E      F        R        4          G        S    2    5    Z      H    H    T    T    6          I    I    U    U    7          J    L    V    V    8    8      K        W    W    9          L    J    X    X              Note that O (zero) and 0 (the letter) are considered the same character and therefore ONLY the letter ""0"" is a valid character.   Input consists of strings (one per line) each of which will consist of one to twenty valid characters. There will be no invalid characters in any of the strings. Your program should read to the end of file.   For each input string, you should print the string starting in column 1 immediately followed by exactly one of the following strings.      STRING    CRITERIA      "" -- is   not a palindrome.""    if the string is not a palindrome and is not   a mirrored string      "" -- is   a regular palindrome.""    if the string is a palindrome and is not a   mirrored string      "" -- is   a mirrored string.""    if the string is not a palindrome and is a   mirrored string      "" -- is   a mirrored palindrome.""    if the string is a palindrome and is a   mirrored string      Note that the output line is to include the -'s and spacing exactly as shown in the table above and demonstrated in the Sample Output below.  In addition, after each output line, you must print an empty line.  Example  Input:  NOTAPALINDROME ISAPALINILAPASI 2A3MEAS ATOYOTA  Output:  NOTAPALINDROME -- is not a palindrome. ISAPALINILAPASI -- is a regular palindrome. 2A3MEAS -- is a mirrored string. ATOYOTA -- is a mirrored palindrome. ",-0.207951262196,CEXP03,"Wonderland is a big land. WonderKing wanted to divide it in to provinces and rule them because that is easy. But he has a problem with naming the provinces. He wants to name them with mirrored palindromes only.A regular palindrome is a string of numbers or letters that is the same forward as backward. For example, the string ""ABCDEDCBA"" is a palindrome because it is the same when the string is read from left to right as when the string is read from right to left.A mirrored string is a string for which when each of the elements of the string is changed to its reverse (if it has a reverse) and the string is read backwards the result is the same as the original string. For example, the string ""3AIAE"" is a mirrored string because ""A"" and ""I"" are their own reverses, and ""3"" and ""E"" are each others' reverses.A mirrored palindrome is a string that meets the criteria of a regular palindrome and the criteria of a mirrored string. The string ""ATOYOTA"" is a mirrored palindrome because if the string is read backwards, the string is the same as the original and because if each of the characters is replaced by its reverse and the result is read backwards, the result is the same as the original string. Of course, ""A"", ""T"", ""O"", and ""Y"" are all their own reverses.A list of all valid characters and their reverses is as follows..Character. Reverse. Character. Reverse. Character. Reverse.
A A M M Y Y
B N Z 5
C O O 1 1
D P 2 S
E 3 Q 3 E
F R 4
G S 2 5 Z
H H T T 6
I I U U 7
J L V V 8 8
K W W 9
L J X XThe WonderKing wants you to help him to find palindromes, mirrored strings, mirrored palindromes separately.First line of input contains the number of strings you should check
Each following line contains a string which you should check with your program.
Each line will consist of one to fifty valid characters.
There will be no invalid characters in any of the strings.For each input string, you should print that string and immediately follow it by exactly one of the following strings.String Criteria
""is not a palindrome."" if the string is not a palindrome and is not a mirrored string
""is a regular palindrome."" if the string is a palindrome and is not a mirrored string
""is a mirrored string."" if the string is not a palindrome and is a mirrored string
""is a mirrored palindrome."" if the string is a palindrome and is a mirrored string",2822,2150,0,427,0.464,7,1
26951,-0.193476383313,DB002,"  Given a sequence of natural numbers . Find it's N'th term. a1=3, a2=9, a3=30, a4=101, a5=358, a6=1443... ...,aN   Single line containing a natural number N   Print N'th term of the sequence modulo 10^9+7.  Constraints   1 <= N <= 100   Example  Input: 5 Output: 358 ",-0.207173384306,CDVA1501,"Given a sequence of natural numbers .Find it's N'th term.a1=3, a2=9, a3=30, a4=101, a5=358, a6=1443... ...,aNSingle line containing a natural number NPrint N'th term of the sequence modulo 10^9+7.",2897,2107,0,28,0.47619047619,6,1
27884,-0.152184259524,QTREE4,"  You are given a tree (an acyclic undirected connected graph) with N nodes, and nodes numbered 1,2,3...,N. Each edge has an integer value assigned to it(note that the value can be negative). Each node has a color, white or black.
We define dist(a, b) as the sum of the value of the edges on the path from node a to node b.  All the nodes are white initially.  We will ask you to perfrom some instructions of the following form:   C a : change the color of node a.(from black to white or from white to black)  A : ask for the maximum dist(a, b), both of node a and node b must be white(a can be equal to b). Obviously, as long as there is a white node, the result will alway be non negative.    In the first line there is an integer N (N In the next N-1 lines, the i-th line describes the i-th edge: a line with three integers a b c denotes an edge between a, b of value c (-1000 In the next line, there is an integer Q denotes the number of instructions (Q In the next Q lines, each line contains an instruction ""C a"" or ""A""   For each ""A"" operation, write one integer representing its result.
If there is no white node in the tree, you should write ""They have disappeared."".  Example   Input: 3
1 2 1
1 3 1
7
A
C 1
A
C 2
A
C 3
A Output: 2
2
0
They have disappeared.   Some new test data cases were added on Apr.29.2008, all the solutions have been rejudged.  ",-0.166827794431,QTREE6,"You are given a tree (an acyclic undirected connected graph) with n nodes. The tree nodes are numbered from 1 to n. Each node has a color, white or black. All the nodes are black initially. We will ask you to perfrom some instructions of the following form:0 u: ask for how many nodes are connected to u, two nodes are connected if all the node on the path from u to v (inclusive u and v) have the same color.
1 u: toggle the color of u (that is, from black to white, or from white to black).The first line contains a number n that denotes the number of nodes in the tree (1 ≤ n ≤ 105). In each of the following n-1 lines, there will be two numbers (u, v) that describes an edge of the tree (1 ≤ u, v ≤ n). The next line contains a number m denoting number of operations we are going to process (1 ≤ m ≤ 105). Each of the following m lines describe an operation (t, u) as we mentioned above(0 ≤ t ≤ 1, 1 ≤ u ≤ n).For each query operation, output the corresponding result.",3033,4105,0,79,0.292079207921,1,1
27886,-0.202326395221,TAXI2,"  In Berland a new movie was released on the occassion of 14th Feb. The craze for this movie was very much among the peoples of the city. So many of them decided to go to the only Movie Theatre of Berland. As berland is very much developed there are many large(tall) buildings, including the movie theatre. At each building except theatre, there exist a person (who wants to see movie) or a taxi driver with his taxi. As it is very late in the night each taxi driver will only accomodate only one passenger and also he will only drive for T[i] HRS (return journey is not included). You will be given the distance between building D[i] and the speed of each taxi driver S[i] . As I am the owner of this theatre help me by telling, the maximum number of people I will see in the theatre for the movie. N+P+1 th building is the my theatre. Also, if a taxi starts his journey by taking a passenger, it only stops at the theatre.    First line contains TT the number of test cases.  First line of each test test case contains N , P and R denoting the number of taxi, number of people, and the number of roads between buildings.  Next line contains N space-seperated integers representing the building where taxi is present.  Next line contains P space-seperated integers representing the building where passengers is present.  Next R lines contains X , Y , and D[i] the building connected via road and the distance between them in KMs.  Next line contains N space-sperated integers S[i] giving the speed details of each taxi in KM/HRs.  Next line contains N space-sperated integers T[i] giving the time details of each taxi in HRs.     Maximum number of people that will visit my theatre.   Constraints   1 <= TT <= 5  1 <= N <= 500  1 <= P <= 1000  1 <= R <= 50000  1 <= X , Y <= N  5 <= S[i] <= 50  1 <= T[i] <= 5  1 <= D[i] <= 100     Example  Input: 1
1 2 4
2
1 3
1 2 5
2 3 5
3 4 10
1 3 8
20
1 Output: 1 ",-0.191125194944,CDVA1608,"In Berland a new movie was released on the occassion of 14th Feb. The craze for this movie was very much among the peoples of the city. So many of them decided to go to the only Movie Theatre of Berland. As berland is very much developed there are many large(tall) buildings, including the movie theatre. At each building except theatre, there exist a person (who wants to see movie) or a taxi driver with his taxi. As it is very late in the night each taxi driver will only accomodate only one passenger and also he will only drive for T[i] HRS (return journey is not included). You will be given the distance between building D[i] and the speed of each taxi driver S[i]. As I am the owner of this theatre help me by telling, the maximum number of people I will see in the theatre for the movie. N+P+1th building is the my theatre.First line contains TT the number of test cases.
First line of each test test case contains N, P and R denoting the number of taxi, number of people, and the number of roads between buildings.
Next line contains N space-seperated integers representing the building where taxi is present.
Next line contains P space-seperated integers representing the building where passengers is present.
Next R lines contains X, Y, and D[i] the building connected via road and the distance between them in KMs.
Next line contains N space-sperated integers S[i] giving the speed details of each taxi in KM/HRs.
Next line contains N space-sperated integers T[i] giving the time details of each taxi in HRs.Maximum number of people that will visit my theatre.",3034,314,0,121,0.686813186813,7,1
29095,0.262431400016,IAPCR2E,"  You have w white, r red, g green and b blue balloons. To make a single student happy you need exactly four balloons. All four balloons given to a student shouldn't have the same color. What is the maximum number S of happy students if we know number of balloons of each color?  Your task is to write a program that for given values w,r, g and b will find the  S.   Input starts with an integer T ( 20000), denoting the number of test cases.  Each test case contains four integers w,r, g and b (0w,r,g,b10^9)  the number of white,red, green and blue balloons respectively. The numbers are separated by exactly one space.   For each test case print a single integer S  maximum number of happy students.  Example  Input: 2
2 2 1 3
1 1 4 1 Output: Case 1: 2
Case 2: 1 ",-0.198081246418,CDX1601,"You have R red, G green and B blue balloons. To decorate a single table for the banquet you need exactly three balloons. Three balloons attached to some table shouldn't have the same color. What maximum number N of tables can be decorated if we know number of balloons of each color?Your task is to write a program that for given values R, G and B will find the maximum number N of tables, that can be decorated in the required manner.The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.


The first line of each test case contains 3 space separated integers R, G and B — the number of red, green and blue baloons respectively.For each test case, output a single integer N — the maximum number of tables that can be decorated in the required manner.",3137,1975,0,6,0.372093023256,7,1
29244,1.71434654212,OMWG,"  Leha is playing a very interesting game. The game will be played on a rectangular grid consisting of N rows and M columns. Initially all the cells of the grid are uncolored. Leha's initial score is zero. At each turn, he chooses some cell that is yet not colored, and colors that cell. The score obtained in this step will be number of neighboring colored cells of the cell that Leha colored in this step. Two cells are neighbors of each other if they share a side between them. The game will end when all the cells are colored. Finally, total score obtained at the end of the game will sum of score obtained in each turn. Leha wants to know what maximum score he can get? Can you please help him in finding this out?   The first line contains a single integer T denoting the number of test cases. T test cases follow.

Each of the following T lines contains two space-separated integers N, M denoting the dimensions of the grid.  For each test case, output a single line containing an integer corresponding to the maximal possible score Leha can obtain. Constraints 1  T  100 1  N, M  1 000  Example   Input: 1
2 2 Output: 4 Explaination Leha can obtain total score 4 in the following way.

    1. In the first step, he colors down left cell, all the neighboring cells of this cell are uncolored.
        So, it adds 0 to total score.
    2. In second step, he can color upper right cell, it also adds total 0 to the score.
    3. In third step, he can color top left cell. 
        There are two neighboring cell of this cell, both of which are colored. So, this add 2 to the score.
    4. In the last step, he can choose the remaining down right cell. 
        There are two neighboring cell of this cell, both of which are colored. 
        So, this also add 2 to the score.

Leha can't obtain a score more than 4. Hence 4 is the answer. ",3.67733625957,OMWG,"Leha is playing a very interesting game. The game will be played on a rectangular grid consisting of N rows and M columns. Initially all the cells of the grid are uncolored.Leha's initial score is zero. At each turn, he chooses some cell that is yet not colored, and colors that cell. The score obtained in this step will be number of neighboring colored cells of the cell that Leha colored in this step. Two cells are neighbors of each other if they share a side between them. The game will end when all the cells are colored. Finally, total score obtained at the end of the game will sum of score obtained in each turn.Leha wants to know what maximum score he can get? Can you please help him in finding this out?The first line contains a single integer T denoting the number of test cases. T test cases follow.Each of the following T lines contains two space-separated integers N, M denoting the dimensions of the grid.For each test case, output a single line containing an integer corresponding to the maximal possible score Leha can obtain.",3168,5288,1,206,0.62874251497,0,1
31385,0.669872226996,CLONE,"  Doubleville, a small town in Texas, was attacked by the aliens. They have abducted some of the residents and taken them to the a spaceship orbiting around earth. After some (quite unpleasant) human experiments, the aliens cloned the victims, and released multiple copies of them back in Doubleville. So now it might happen that there are 6 identical person named Hugh F. Bumblebee: the original person and its 5 copies. The Federal Bureau of Unauthorized Cloning (FBUC) charged you with the task of determining how many copies were made from each person. To help you in your task, FBUC have collected a DNA sample from each person. All copies of the same person have the same DNA sequence, and different people have different sequences (we know that there are no identical twins in the town, this is not an issue).   The input contains several blocks of test cases. Each case begins with a line containing two integers: the number 1 The input is terminated by a block with n = m = 0 .   For each test case, you have to output n lines, each line containing a single integer. The first line contains the number of different people that were not copied. The second line contains the number of people that were copied only once (i.e., there are two identical copies for each such person.) The third line contains the number of people that are present in three identical copies, and so on: the i -th line contains the number of persons that are present in i identical copies. For example, if there are 11 samples, one of them is from John Smith, and all the others are from copies of Joe Foobar, then you have to print '1' in the first andthe tenth lines, and '0' in all the other lines.  Example  Input: 9 6
AAAAAA
ACACAC
GTTTTG
ACACAC
GTTTTG
ACACAC
ACACAC
TCCCCC
TCCCCC
0 0 Output: 1
2
0
1
0
0
0
0
0  Warning: large input/output data, be careful with certain languages ",-0.207677922877,DS24,"You are living in 2050, People do not work any more. Only surrogates (clone having same features & DNA characteristics) work for every individual. Government is substituting man labor by surrogates. Every person can control his own surrogate from his home and paid for his services one of the criminal master mind hacked into Government system and started producing multiple surrogates for a single person in Dolgeville, a small town in Texas. These multiple surrogates released in Dolgeville by that criminal. So now it might happen that there are 6 identical person named Hugh F. Bumblebee: the original person and its 5 copies. The Federal Bureau of Unauthorized Surrogates (FBUS) charged you with the task of determining how many copies were made from each person To help you in your task, FBUS have collected a DNA sample from each person. All surrogates of the same person have the same DNA sequence, and different people have different sequences (we know that there are no identical twins in the town, this is not an issue).The input contains several blocks of test cases. Each case begins with a line containing two integers: the number of people(n) and the length of the DNA sequences(m).The next n lines contain the DNA sequences: each line contains a sequence of m characters, where each character is either 'A', 'C', 'G' or 'T'.The input is terminated by a block with n = m = 0 .For each test case, you have to output n lines, each line containing a single integer. The first line contains the number of different people that were not copied for surrogate. The second line contains the number of people that were copied only once (i.e., there are two identical copies for each such person.) The third line contains the number of people that are present in three identical copies, and so on: the i -th line contains the number of persons that are present in i identical copies.For example, if there are 11 samples, one of them is from John Smith, and all the others are from copies of Joe Foobar, then you have to print '1' in the first and the tenth lines, and '0' in all the other lines.",3341,429,0,39,0.532258064516,5,1
31386,0.669872226996,CLONE,"  Doubleville, a small town in Texas, was attacked by the aliens. They have abducted some of the residents and taken them to the a spaceship orbiting around earth. After some (quite unpleasant) human experiments, the aliens cloned the victims, and released multiple copies of them back in Doubleville. So now it might happen that there are 6 identical person named Hugh F. Bumblebee: the original person and its 5 copies. The Federal Bureau of Unauthorized Cloning (FBUC) charged you with the task of determining how many copies were made from each person. To help you in your task, FBUC have collected a DNA sample from each person. All copies of the same person have the same DNA sequence, and different people have different sequences (we know that there are no identical twins in the town, this is not an issue).   The input contains several blocks of test cases. Each case begins with a line containing two integers: the number 1 The input is terminated by a block with n = m = 0 .   For each test case, you have to output n lines, each line containing a single integer. The first line contains the number of different people that were not copied. The second line contains the number of people that were copied only once (i.e., there are two identical copies for each such person.) The third line contains the number of people that are present in three identical copies, and so on: the i -th line contains the number of persons that are present in i identical copies. For example, if there are 11 samples, one of them is from John Smith, and all the others are from copies of Joe Foobar, then you have to print '1' in the first andthe tenth lines, and '0' in all the other lines.  Example  Input: 9 6
AAAAAA
ACACAC
GTTTTG
ACACAC
GTTTTG
ACACAC
ACACAC
TCCCCC
TCCCCC
0 0 Output: 1
2
0
1
0
0
0
0
0  Warning: large input/output data, be careful with certain languages ",-0.203657368161,PD11,"Doubleville, a small town in Texas, was attacked by the aliens. They have abducted some of the residents and taken them to the a spaceship orbiting around earth. After some (quite unpleasant) human experiments, the aliens cloned the victims, and released multiple copies of them back in Doubleville. So now it might happen that there are 6 identical person named Hugh F. Bumblebee: the original person and its 5 copies. The Federal Bureau of Unauthorized Cloning (FBUC) charged you with the task of determining how many copies were made from each person. To help you in your task, FBUC have collected a DNA sample from each person. All copies of the same person have the same DNA sequence, and different people have different sequences (we know that there are no identical twins in the town, this is not an issue).The input contains several blocks of test cases. Each case begins with a line containing two integers: the number 1 <= n <= 20000 people, and the length 1 <= m <= 20 of the DNA sequences. The next n lines contain the DNA sequences: each line contains a sequence of m characters, where each character is either 'A', 'C', 'G' or 'T'.

The input is terminated by a block with n = m = 0 .For each test case, you have to output n lines, each line containing a single integer. The first line contains the number of different people that were not copied. The second line contains the number of people that were copied only once (i.e., there are two identical copies for each such person.) The third line contains the number of people that are present in three identical copies, and so on: the i -th line contains the number of persons that are present in i identical copies. For example, if there are 11 samples, one of them is from John Smith, and all the others are from copies of Joe Foobar, then you have to print '1' in the first and the tenth lines, and '0' in all the other lines.",3341,3215,0,15,0.80198019802,5,1
31505,-0.297467690544,TMBOX,"  If you've ever dealt with the theory of information, you are no doubt familiar with the theoretical notion of a Turing Machine . But have you ever wondered what you could do if you got a real Turing Machine -- one of those big metal things with all the cranks and levers and rolls of infinite tape that looks suspiciously like toilet paper?... The sad answer is: there are few interesting things that can be done with such a machine. Even problems that have a little charm in the theoretical model (like the intractable Halting Problem) can be solved very efficiently with practical brute-force algorithms (see e.g. the figure at the end of the problem description). But there is one thing that you can do with a practical Turing Machine, and can't do with a theoretical one, and it is: to use it as a music box. Our Turing Machine has exactly one state variable (an integer in the range 0 to 999) and is equipped with an infinite tape, consisting of cells with symbols from a given alphabet encoded on them. A movable read/write head is positioned over some cell of the tape, and is operated according to the list of rules encoded in the machine. The rules are of the form S1 C1 S2 C2 M , which means: if the machine is in state S1 and C1 is written in the current cell, change state to S2, write C2 in the current cell, and move the head as described by move M (one cell left, one cell right, or not at all). If no matching rule is found for the given state the machine should halt. Now, here is the good bit. The head makes a creaking sound when performing each rule. It goes da when moved right, di when moved left, and um when left in place. Suppose that each cell of the tape can contain one of 16 possible symbols, formed as the concatenation of exactly two of the words: da , di , um and sh for silence. Initially, nearly all the cells of the tape are filled with the symbol shsh . Only a few (not more than 500) consecutive cells form a piece of music, each cell encoding a pair of sounds (one of 9 combinations of da , di or um , without any silences). The head of the machine is initially positioned over the leftmost of the cells containing sounds. Now it is your task to use the Turing machine to play the piece of music written on its tape (as read from left to right, starting from the initial position of the head, as far as the first silence) as accurately as possible, using the head itself to produce the sounds required.  Output  The output of your program must contain a set of rules describing the behaviour of the Turing Machine designed for playing music. Each rule must be of the form S1 C1 S2 C2 M , where S1 and S2 are integers from the range 0..999, C1 and C2 belong to the 16 symbols of the alphabet, while M describes the move direction of the head by the sound it makes ( da , di or um ). Score  Your program will be tested multiple times for different pieces of music written on the tape. The score of your program is equal to the total of non-negative scores, taken over all test cases. For a test case with n notes (n/2 non-silent cells) your program will receive n-d points, where d denotes the edit distance between the music played and the music required (i.e. the minimum total number of notes that have to be inserted into or changed in both the pieces to obtain the same piece of music). Example  Consider the following set of rules output by a program: 000 dada 000 dada da
000 umda 000 dada da
000 shsh 000 shsh da
000 didi 001 didi di
001 dada 002 didi di  Then the results of exemplary testing could be as follows:  Music: da da|da da|da da|di di|um um Plays: da da da di di Score: 5 Music: um da|um da|um da|da um|di di Plays: da da da Score: 3 Total: 5 + 3 = 8 points  Bonus info: There are no more than 100 tests. The score format is s.xxyy , where xx denotes the number of tests for which your machine played the music perfectly, yy - the number of tests for which it received a positive score.  ",-0.20755028361,TMBOX,"If you've ever dealt with the theory of information, you are no doubt familiar with the theoretical notion of a Turing Machine. But have you ever wondered what you could do if you got a real Turing Machine -- one of those big metal things with all the cranks and levers and rolls of infinite tape that looks suspiciously like toilet paper?...The sad answer is: there are few interesting things that can be done with such a machine. Even problems that have a little charm in the theoretical model (like the intractable Halting Problem) can be solved very efficiently with practical brute-force algorithms (see e.g. the figure at the end of the problem description). But there is one thing that you can do with a practical Turing Machine, and can't do with a theoretical one, and it is: to use it as a music box.Our Turing Machine has exactly one state variable (an integer in the range 0 to 999) and is equipped with an infinite tape, consisting of cells with symbols from a given alphabet encoded on them. A movable read/write head is positioned over some cell of the tape, and is operated according to the list of rules encoded in the machine. The rules are of the form S1 C1 S2 C2 M, which means: if the machine is in state S1 and C1 is written in the current cell, change state to S2, write C2 in the current cell, and move the head as described by move M (one cell left, one cell right, or not at all). If no matching rule is found for the given state the machine should halt.Now, here is the good bit. The head makes a creaking sound when performing each rule. It goes da when moved right, di when moved left, and um when left in place. Suppose that each cell of the tape can contain one of 16 possible symbols, formed as the concatenation of exactly two of the words: da, di, um and sh for silence. Initially, nearly all the cells of the tape are filled with the symbol shsh. Only a few (not more than 500) consecutive cells form a piece of music, each cell encoding a pair of sounds (one of 9 combinations of da, di or um, without any silences). The head of the machine is initially positioned over the leftmost of the cells containing sounds.Now it is your task to use the Turing machine to play the piece of music written on its tape (as read from left to right, starting from the initial position of the head, as far as the first silence) as accurately as possible, using the head itself to produce the sounds required.The output of your program must contain a set of rules describing the behaviour of the Turing Machine designed for playing music. Each rule must be of the form S1 C1 S2 C2 M, where S1 and S2 are integers from the range 0..999, C1 and C2 belong to the 16 symbols of the alphabet, while M describes the move direction of the head by the sound it makes (da, di or um).",3346,5362,1,239,0.669444444444,0,1
31552,1.11607262953,NOTATRI,"  You have N (3  N  2,000) wooden sticks, which are labeled from 1 to N. The i-th stick has a length of L i (1  L i  1,000,000). Your friend has challenged you to a simple game: you will pick three sticks at random, and if your friend can form a triangle with them (degenerate triangles included), he wins; otherwise, you win. You are not sure if your friend is trying to trick you, so you would like to determine your chances of winning by computing the number of ways you could choose three sticks (regardless of order) such that it is impossible to form a triangle with them.   The input file consists of multiple test cases. Each test case starts with the single integer N, followed by a line with the integers L 1 , ..., L N . The input is terminated with N = 0, which should not be processed.   For each test case, output a single line containing the number of triples.  Example   Input: 3
4 2 10
3
1 2 3
4
5 2 9 6
0 Output: 1
0
2  For the first test case, 4 + 2",-0.18676029833,STIKGAME," You have N wooden sticks, which are labeled from 1 to N. The i-th stick has a length of Li. Your friend has challenged you to a simple game: you will pick three sticks at random, and if your friend can form a triangle with them (degenerate triangles included), he wins; otherwise, you win. You are not sure if your friend is trying to trick you, so you would like to determine your chances of winning by computing the number of ways you could choose three sticks (regardless of order) such that it is impossible to form a triangle with them.The input file consists of multiple test cases.Each test case starts with the single integer N followed by a line with the integers L1, ..., LN.
The input is terminated with N = 0, which should not be processed. For each test case, output a single line containing the number of triplets. ",3356,3438,0,47,0.75,8,1
31553,1.11607262953,NOTATRI,"  You have N (3  N  2,000) wooden sticks, which are labeled from 1 to N. The i-th stick has a length of L i (1  L i  1,000,000). Your friend has challenged you to a simple game: you will pick three sticks at random, and if your friend can form a triangle with them (degenerate triangles included), he wins; otherwise, you win. You are not sure if your friend is trying to trick you, so you would like to determine your chances of winning by computing the number of ways you could choose three sticks (regardless of order) such that it is impossible to form a triangle with them.   The input file consists of multiple test cases. Each test case starts with the single integer N, followed by a line with the integers L 1 , ..., L N . The input is terminated with N = 0, which should not be processed.   For each test case, output a single line containing the number of triples.  Example   Input: 3
4 2 10
3
1 2 3
4
5 2 9 6
0 Output: 1
0
2  For the first test case, 4 + 2",0.200330386743,NOTATRI,"You have N (3 ≤ N ≤ 2,000) wooden sticks, which are labeled from 1 to N. The i-th stick has a length of Li (1 ≤ Li ≤ 1,000,000). Your friend has challenged you to a simple game: you will pick three sticks at random, and if your friend can form a triangle with them (degenerate triangles included), he wins; otherwise, you win. You are not sure if your friend is trying to trick you, so you would like to determine your chances of winning by computing the number of ways you could choose three sticks (regardless of order) such that it is impossible to form a triangle with them.The input file consists of multiple test cases. Each test case starts with the single integer N, followed by a line with the integers L1, ..., LN. The input is terminated with N = 0, which should not be processed.For each test case, output a single line containing the number of triples.",3356,3841,1,38,0.7890625,0,1
31555,2.16942982848,GCD2,"  Frank explained its friend Felman the algorithm of Euclides to calculate the GCD 
of two numbers. Then Felman implements it algorithm int gcd(int a, int b)
{
	if (b==0)
		return a;
	else
		return gcd(b,a%b);
} and it proposes to Frank that makes it 
but with a little integer and another integer that has up to 250 digits. Your task is to help Frank programming an efficient code for the challenge of Felman.  The first line of the input file contains a number representing the number of lines to follow.
Each line consists of two number A and B (0 Output Print for each pair (A,B) in the input one integer representing the GCD of A and B. Example  Input: 2
2 6
10 11 Output: 2
1  Source limit is 1,000 Bytes. ",0.548184936592,GCD2,"Frank explained its friend Felman the algorithm of Euclides to calculate the GCD of two numbers. Then Felman implements it algorithmint gcd(int a, int b)
{
 if (b==0)
  return a;
 else
  return gcd(b,a%b);
}Your task is to help Frank programming an efficient code for the challenge of Felman.The first line of the input file contains a number representing the number of lines to follow. Each line consists of two number A and B (0 <= A <= 40000 and A <= B < 10^250).Print for each pair (A,B) in the input one integer representing the GCD of A and B.",3357,3771,1,28,0.515151515152,0,1
31557,-0.282932668504,FACTSUM,"  Given a positive integer K > 2, with prime
factorization:

K = p1^a1 * p2^a2 ... * pn^an

Compute the following:

S = a1*p1 + a2*p2 ... + an*pn.   A list of Output For each integer compute the super factor
sum and output it on a single line. Example   Input: 6
7 Output: 5
7 ",-0.205005006402,FACTSUM,"A list of <100 integers, one on each line, all less than 2*10^19.A list of <100 integers, one on each line, all less than 2*10^19.For each integer compute the super factor sum and output it on a single line.",3358,4792,1,16,0.283018867925,0,1
31585,-0.0882193119516,QTREE5,"  You are given a tree (an acyclic undirected connected graph) with N nodes. The tree nodes are numbered from 1 to N. We define dist(a, b) as the number of edges on the path from node a to node b.  Each node has a color, white or black. All the nodes are black initially.  We will ask you to perfrom some instructions of the following form:   0 i : change the color of i-th node(from black to white, or from white to black). 1 v : ask for the minimum dist(u, v ), node u must be white(u can be equal to v ). Obviously, as long as node v is white, the result will always be 0.    In the first line there is an integer N (N In the next N-1 lines, the i-th line describes the i-th edge: a line with two integers a b denotes an edge between a and b. In the next line, there is an integer Q denotes the number of instructions (Q In the next Q lines, each line contains an instruction ""0 i"" or ""1 v ""   For each ""1 v "" operation, print one integer representing its result.
If there is no white node in the tree, you should write "" -1 "".  Example   Input: 10
1 2
1 3
2 4
1 5
1 6
4 7
7 8
5 9
1 10
10
0 6
0 6
0 6
1 3
0 1
0 1
1 3
1 10
1 4
1 6 Output: 2
2
2
3
0 ",-0.166827794431,QTREE6,"You are given a tree (an acyclic undirected connected graph) with n nodes. The tree nodes are numbered from 1 to n. Each node has a color, white or black. All the nodes are black initially. We will ask you to perfrom some instructions of the following form:0 u: ask for how many nodes are connected to u, two nodes are connected if all the node on the path from u to v (inclusive u and v) have the same color.
1 u: toggle the color of u (that is, from black to white, or from white to black).The first line contains a number n that denotes the number of nodes in the tree (1 ≤ n ≤ 105). In each of the following n-1 lines, there will be two numbers (u, v) that describes an edge of the tree (1 ≤ u, v ≤ n). The next line contains a number m denoting number of operations we are going to process (1 ≤ m ≤ 105). Each of the following m lines describe an operation (t, u) as we mentioned above(0 ≤ t ≤ 1, 1 ≤ u ≤ n).For each query operation, output the corresponding result.",3364,4105,0,53,0.340425531915,1,1
31812,-0.0512073294151,SBSTR1,"   Given two binary strings, A (of length 10) and B (of length 5), output 1 if B is a substring of A and 0 otherwise.   Please note, that the solution may only be submitted in the following languages: Brainf**k, Whitespace and Intercal.   24 lines consisting of pairs of binary strings A and B separated by a single space.   The logical value of: 'B is a substring of A'.  Example  First two lines of input:  1010110010 10110 1110111011 10011   First two lines of output: 1 0  ",0.0811492511515,CMB03,"Given two binary strings, A (of length 10) and B (of length 5), output 1 if B is a substring of A and 0 otherwise.The first line contains the number of test cases n. This is followed by n lines each consisting of pairs of binary strings A and B separated by a single space.output 1 if B is a substring of A and 0 otherwise.",3379,4861,0,35,0.388888888889,6,1
31894,3.32701655662,CANTON,"  One of the famous proofs of modern mathematics is Georg Cantor's demonstration that the set of rational numbers is enumerable. The proof works by using an explicit enumeration of rational numbers as shown in the diagram below.  1/1 1/2 1/3 1/4 1/5 ...
2/1 2/2 2/3 2/4
3/1 3/2 3/3
4/1 4/2
5/1  In the above diagram, the first term is 1/1, the second term is 1/2, the third term is 2/1, the fourth term is 3/1, the fifth term is 2/2, and so on.   The input starts with a line containing a single integer t t test cases follow.  Then, it contains a single number per line.   You are to write a program that will read a list of numbers in the range from 1 to 10^7 and will print for each number the corresponding term in Cantor's enumeration as given below.  Example   Input: 3
3
14
7 Output: TERM 3 IS 2/1
TERM 14 IS 2/4
TERM 7 IS 1/4 ",-0.206669687481,CRNGPTRS,"One of the famous proofs of modern mathematics is Georg Cantor's demonstration that the set of rational numbers is enumerable. The proof works by using an explicit enumeration of rational numbers as shown in the diagram below.

These days many snakes are being spotted in Silver Springs. Today Petr saw a snake in the garden. The garden is no ordinary garden. The garden consists of a infinitely big matrix. Each cell of the matrix consists of a rational numbers in the following order.

1/1 1/2 1/3 1/4 1/5 ...

2/1 2/2 2/3 2/4...

3/1 3/2 3/3...

4/1 4/2...

5/1...

.

.

Petr saw the snake on the cell with the number 1/1 . Now the snake started to move from one cell to another in a zig zag fashion. Time taken by the snake to crawl from one cell to another is one second.
In the above diagram, the position of snake at t=1 is 1/1, at t=2 is 1/2, at t=3 is 2/1, at t=4 is 3/1, at t=5 is 2/2, and so on.

Refer to follow image for clear understanding:



As Petr is quite bad at maths, he asks for your help. He wants to know the number of the cell in which the snake is at various instants.The input starts with a line containing a single integer N, the number of test cases.
N test cases follow.

Then, it contains a single number per line t.",3392,2387,0,59,0.35593220339,5,1
31946,0.271160370506,SOLDIER,"  Igor, a famous russian soldier, must go to war in Afghanistan (we are in late 80s). His superiors allowed him to buy himself his equipment. So, he must buy 6 items: helmet, bulletproof vest, trousers, boots,  tunic and a firearm. This items are represented with numbers from 1 to 6. There are N( 6 Input On the first line there are two integers N and T. On the lines 2 ... N+1 there are 3 integers, type[i] (from 1 to 6) p[i] and q[i]. ( 0 Output Output the total quality. Example   Input: 7 53
5 8 2
2 4 8
6 8 13
1 13 12
4 5 1
3 2 7
3 13 5 Output: 1 Note: If there is no answer, output 0.
There can be less than 6 types of items. ",-0.182945937389,SOLDIER,"Igor, a famous russian soldier, must go to war. His superiors allowed him to buy his own equipment. He must buy 6 items: a helmet, bulletproof vest, trousers, boots, tunic and firearm. This items are represented with numbers from 1 to 6.There are N (6 < N < 101) items of these 6 types. Each item is characterized by its price p[i] (in rublas) and is quality q[i]. Igor has a total of T (0 < T < 1001) rublas and he wants to maximize the total quality of his equipment. The total quality is the quality of the item with the lowest quality. Help him.On the first line there are two integers: number of items for sale (N) and total rublas Igor has (T). Subsequent lines contain 3 integers: type (t) (from 1 to 6) price (> 0) and quality.Output the total quality.",3396,3879,1,11,0.347222222222,0,1
32295,-0.316427390015,CROSSES,"  The game of gomoku (otherwise known as naughts & crosses), played on an n x n board has many interesting variations. One of them is the Game of Crosses & Crosses, with the following set of rules:  Two players - red and black - take it in turns to place one cross of their respective color on an unoccupied square of the n x n gaming board. Red starts the game. After each player's move any rectangles with sides equal to at least 2, lying entirely within the gaming board and covered completely by crosses, are simultaneously removed (cut off) from the gaming board and the game continues. When all the squares remaining in the gaming board are covered by crosses, the game comes to an end. The score of each player is equal to the number of crosses of his color left standing on the gaming board, and the player with the higher score is considered the winner.  The game of crosses & crosses feels rather like playing a degenerated game of Go with an army of suicide bombers. For many years now it has been the favourite passtime of Bytelandian schoolchildren during their lessons. Little Johnny was no different, and among his friends he actually became a notable crossing champion. But not many people knew about Johnny's crossing talent, and Johnny often used this to his advantage. So when a few years after Johnny's abdication from the throne of Byteland an unsuspecting publisher signed a million dolar contract with the ex-king for a series of memoirs entitled The famous victories of Johnny the Great , he was certainly not prepared for what he received -- a detailed account of Johnny's childhood games of crosses & crosses. To make matters worse, all accounts are written by Johnny in exciting prose, rich in action, e.g.: "" Then I played yet another game on a 3x3 board. I placed my first cross at (1,1). Then I placed a cross at (2,3). The next cross I placed at (2,2). The cross after that I placed at (3,3). Finally, I placed a cross at (1,2) and I won the game 2:1. "". In a desperate effort to save the day, the publisher employed you to create illustrations for the book. You are given a free hand in reinacting the games (and in particular the oponent's moves, which Johnny has modestly left out), provided your version of events is not an evident contradiction of Johnny's text.  Input begins with a line containing a single integer t (t=100). t test cases follow. Each test case starts with a line with three integers describing a single game: n sr sb, denoting the length of the side of the playing board, the number of points scored by the red player (Johnny) and the number of points scored by the black player (Johnny's oponent), respectively (32/2) lines contain 2 integers x i y i each - the coordinates of the squares where Johnny placed his crosses in successive moves (1i, y i For the i-th test case output a line with the text case i Y or case i N , specifying whether you wish to solve the given case. Then in the former case print  exactly floor(n 2 /2) lines containining 2 integers each - the coordinates of the squares where Johnny's anonymous oponent placed his crosses in successive moves. Scoring  The score awarded to your program is equal to the number of correctly solved test cases. For each case, the game defined by yours and Johnny's description must have the outcome (final score) defined at input. Example   Input: 1
3 2 1
1 1
2 3
2 2
3 3
1 2 Output: case 1 Y
3 1
1 3
2 1
3 2 Score: 1     Warning: large Input/Output data, be careful with certain languages ",-0.205853432138,CROSSES,"The game of gomoku (otherwise known as naughts & crosses), played on an n x n board has many interesting variations. One of them is the Game of Crosses & Crosses, with the following set of rules:Two players - red and black - take it in turns to place one cross of their respective color on an unoccupied square of the n x n gaming board. Red starts the game.
After each player's move, any rectangles with sides equal to at least 2, lying entirely within the gaming board and covered completely by crosses, are simultaneously removed (cut off) from the gaming board and the game continues.
When all the squares remaining in the gaming board are covered by crosses, the game comes to an end. The score of each player is equal to the number of crosses of his color left standing on the gaming board, and the player with the higher score is considered the winner.The game of crosses & crosses has been the favorite pastime of Bytelandian schoolchildren during their lessons. Little Johnny was no different, and among his friends he actually became a notable crossing champion.But not many people knew about Johnny's crossing talent, and Johnny often used this to his advantage. So when a few years after Johnny's abdication from the throne of Byteland an unsuspecting publisher signed a million dolar contract with the ex-king for a series of memoirs entitled The famous victories of Johnny the Great, he was certainly not prepared for what he received -- a detailed account of Johnny's childhood games of crosses & crosses. To make matters worse, all accounts are written by Johnny in exciting prose, rich in action, e.g.: ""Then I played yet another game on a 3x3 board. I placed my first cross at (1,1). Then I placed a cross at (2,3). The next cross I placed at (2,2). The cross after that I placed at (3,3). Finally, I placed a cross at (1,2) and I won the game 2:1."".In a desperate effort to save the day, the publisher employed you to create illustrations for the book. You are given a free hand in reinacting the games (and in particular the oponent's moves, which Johnny has modestly left out), provided your version of events is not an evident contradiction of Johnny's text.Input begins with a line containing a single integer t (t=100) followed by t test cases.Each test case starts with a line with three integers describing a single game: n sr sb, denoting the length of the side of the playing board, the number of points scored by the red player (Johnny) and the number of points scored by the black player (Johnny's oponent), respectively (3<=n<=250, 0<=sb< sr). The next ceil(n2/2) lines contain 2 integers xi yi each - the coordinates of the squares where Johnny placed his crosses in successive moves (1<= xi, yi <= n).For the i-th test case output a line with the text case i Y or case i N, specifying whether you wish to solve the given case. Then in the former case print exactly floor(n2/2) lines containining 2 integers each - the coordinates of the squares where Johnny's anonymous oponent placed his crosses in successive moves.",3420,5348,1,109,0.707865168539,0,1
32564,-0.308465682792,BFORG,"  The relationship between The University of Byteland and King Johnny was never a friendly one. The king was the easy-going, open-minded sort of person who is prepared to turn a blind eye to the embezzlement of public funds, but inwardly revolts at the thought of money going to waste, and supporting a university was to the king a perfect example of a waste of money. On the other hand, the chancellor of the university showed no tolerance whatsoever, and frequently stated in public that Byteland was being governed by a monarch who took terrible decisions when he was drunk and even worse ones when he was sober. After some time of bad-tempered coexistence, the king had had enough and decided to close down the university. However, the king's councillors advised against this move, suggesting it might cause social unrest. The king yielded to their advice, and instead established a law which banned all organisations, clubs and associations active at the university.  This action had a rather curious effect on the usually lazy students of the university. They had never before even thought of organising any sort of fellowship, but now they immediately decided they needed to set one up. And this is how the Secret Fellowship came to life. The main problem faced by the management of the Fellowship was how to organise members' meetings in such a way as to minimise the risk to the participants. It was decided that the n members of the fellowship should be split into k secret divisions, each consisting of at least 2 members. All members belonging to the same division would then meet regularly, and they would take it in turns to host the meetings of the division in their houses. But one more important factor has to be taken into account -- the laziness of students. It is therefore your task to form the divisions in such a way that the furthest distance a student may ever be asked to walk is as short as possible.  The first line of input contains a single integer t, the number of test cases (t=1000). t test cases follow. Each test cases starts with a line containing two integers n k , denoting the number of students and the number of divisions to be formed, respectively (2knn lines contains two integers x i y i each (-1000 x i ,y i For the i -th test case output a line with the text case i Y or case i N , specifying whether you wish to solve the given case. Then in the former case print exactly k lines. Each line should start with integer n j ( n j >=2) and be followed by a space separated list of exactly n j increasing integers s jl , denoting the students belonging to the j -th division, numbered in input order (1s jl n j must equal n . Score  The score awarded to your program is the total of scores for the test cases you chose to solve. For each solved test case you will receive diam / ( d * k ) points, where diam denotes the distance between the two furthest houses of members of the fellowship, and d is the distance between the two furthest houses of members belonging to the same division. Example   Input: 3
6 2
0 0
1 0
0 1
1 1
2 0
2 1
6 2
0 0
1 0
0 1
1 1
2 0
2 1
6 2
0 0
1 0
0 1
1 1
2 0
2 1 Output: case 1 Y
3 1 2 4
3 3 5 6
case 2 Y
3 1 2 5
3 3 4 6
case 3 Y
2 1 3
4 2 4 5 6 Score: 1.849003  Bonus info: If score = xxx . xxxaaa , aaa means the number of test cases with Y answer.",-0.204792899978,BFORG,"The relationship between The University of Byteland and King Johnny was never a friendly one. The king was the easy-going, open-minded sort of person who is prepared to turn a blind eye to the embezzlement of public funds, but inwardly revolts at the thought of money going to waste, and supporting a university was to the king a perfect example of a waste of money. On the other hand, the chancellor of the university showed no tolerance whatsoever, and frequently stated in public that Byteland was being governed by a monarch who took terrible decisions when he was drunk and even worse ones when he was sober. After some time of bad-tempered coexistence, the king had had enough and decided to close down the university. However, the king's councillors advised against this move, suggesting it might cause social unrest. The king yielded to their advice, and instead established a law which banned all organisations, clubs and associations active at the university.This action had a rather curious effect on the usually lazy students of the university. They had never before even thought of organising any sort of fellowship, but now they immediately decided they needed to set one up. And this is how the Secret Fellowship came to life.The main problem that faced the management of the Fellowship was to organise members' meetings in such a way as to minimise the risk to the participants. It was decided that the n members of the fellowship should be split into k secret divisions, each consisting of at least 2 members. All members belonging to the same division would then meet regularly, and they would take it in turns to host the meetings of the division in their houses.But one more important factor has to be taken into account -- the laziness of students. It is therefore your task to form the divisions in such a way that the furthest distance a student may ever be asked to walk is as short as possible.The first line of input contains a single integer t, the number of test cases (t=1000). t test cases follow.Each test cases starts with a line containing two integers n k, denoting the number of students and the number of divisions to be formed, respectively (2<=2k<=n<=200). Each of the next n lines contains two integers xi yi each (-1000 <= xi,yi <= 1000), denoting the coordinates of the houses of successive students.For the i-th test case output a line with the text case i Y or case i N, specifying whether you wish to solve the given case. Then in the former case print exactly k lines. Each line should start with integer nj (nj>=2) and be followed by a space separated list of exactly nj increasing integers sjl, denoting the students belonging to the j-th division, numbered in input order (1<=sjl<=n). All divisions must be disjoint and the sum of all numbers nj must equal n.",3425,5314,1,145,0.705714285714,0,1
32828,-0.211169994121,SEVENPER,"  Uniform Resource Identifiers (or URIs) are strings like http://icpc.baylor.edu/icpc/ , mailto:foo@bar.org , ftp://127.0.0.1/pub/linux , or even just readme.txt that are
   used to identify a resource, usually on the Internet or a local computer.
   Certain characters are reserved within URIs, and if a reserved character is
   part of an identifier then it must be percent-encoded by
   replacing it with a percent sign followed by two hexadecimal digits
   representing the ASCII code of the character. A table of seven reserved
   characters and their encodings is shown below. Your job is to write a
   program that can percent-encode a string of characters.     Character  Encoding      "" "" (space)  %20    "" ! "" (exclamation point)  %21    "" $ "" (dollar sign)  %24    "" % "" (percent sign)  %25    "" ( "" (left parenthesis)  %28    "" ) "" (right parenthesis)  %29    "" * "" (asterisk)  %2a      The input consists of one or more strings, each
   179 characters long and on a line by itself, followed by a line
   containing only ""#"" that signals the end of the input. The character ""#"" is
   used only as an end-of-input marker and will not appear anywhere else in the
   input. A string may contain spaces, but not at the beginning or end of the
   string, and there will never be two or more consecutive spaces.   For each input string, replace every occurrence of a
   reserved character in the table above by its percent-encoding, exactly as
   shown, and output the resulting string on a line by itself. Note that the
   percent-encoding for an asterisk is %2a (with a lowercase ""a"") rather than
   %2A (with an uppercase ""A"").  Example   Input: Happy Joy Joy!
http://icpc.baylor.edu/icpc/
plain_vanilla
(**)
?
the 7% solution
# Output: Happy%20Joy%20Joy%21
http://icpc.baylor.edu/icpc/
plain_vanilla
%28%2a%2a%29
?
the%207%25%20solution ",-0.200490697075,SYNOL,"Finally the clowns of Synapse have decided to take their site online. The convener of the clowns has heard from somewhere that knowing URI's is very important for their website, so kindly help him with this task.
Uniform Resource Identifiers (or URIs) are strings like http://synapse.daiict.ac.in/codemutants/, mailto:clown_convener@synapse.daiict.ac.in, ftp://10.100.93.93/night_halters, or even just output.txt that are used to identify a resource, usually on the Internet or a local computer. Certain characters are reserved within URIs, and if a reserved character is part of an identifier then it must be percent-encoded by replacing it with a percent sign followed by two hexadecimal digits representing the ASCII code of the character. A table of seven reserved characters and their encodings is shown below. Your job is to write a program that can percent-encode a string of characters.Character Encoding
"" "" (space) %20
""!"" (exclamation point) %21
""$"" (dollar sign) %24
""%"" (percent sign) %25
""("" (left parenthesis) %28
"")"" (right parenthesis) %29
""*"" (asterisk) %2aInput: The input consists of one or more strings, each 1–79 characters long and on a line by itself, followed by a line containing only ""#"" that signals the end of the input. The character ""#"" is used only as an end-of-input marker and will not appear anywhere else in the input. A string may contain spaces, but not at the beginning or end of the string, and there will never be two or more consecutive spaces.Output: For each input string, replace every occurrence of a reserved character in the table above by its percent-encoding, exactly as shown, and output the resulting string on a line by itself. Note that the percent-encoding for an asterisk is %2a (with a lowercase ""a"") rather than %2A (with an uppercase ""A"").",3444,3413,0,76,0.608108108108,6,1
33316,2.17481972992,BISHOPS,"  Yesterday was Sam's birthday. The most interesting gift was definitely the chessboard. Sam quickly learned the rules of chess and defeated his father, all his friends, his little sister, and now no one wants to play with him any more. So he decided to play with another birthday gift  a Book of Math Problems for Young Mathematicians. He opened the book somewhere in the middle and read the following problem: ""How many knights can be placed on a chessboard without threatening each other?"" After a while he realized that this was trivial and moved on to the next problem: ""How many bishops can be placed on a chessboard without threatening each other?"". Sam is in trouble here. He is not able to solve this problem and needs your help. Sam's chessboard has size N x N. A bishop can move to any distance in any of the four diagonal directions. A bishop threatens another bishop if it can move to the other bishop's position. Your task is to compute the maximum number of bishops that can be placed on a chessboard in such a way that no two bishops threaten each other.    The input file consists of several lines. The line number i contains a single positive integer N representing the size of the i-th chessboard. [1  The output file should contain the same number of lines as the input file. The i-th line should contain one number  the maximum number of bishops that can be placed on i-th chessboard without threatening each other.  Example   Input: 2
3 Output: 2
4 ",-0.197869398539,AXR1P3,"Yesterday was Anish's birthday. The most interesting gift was definitely the chessboard. Anish quickly learned the rules of chess and started to beat all his peers.That day night Anish was reading a Book on puzzles and Enigma. He opened the book somewhere in the middle and read the following problem: ""How many knights can be placed on a chessboard without threatening each other?"" After a while he realized that this was trivial and moved on to the next problem: ""How many bishops can be placed on a chessboard without threatening each other?"". Anish is in trouble here. He is not able to solve this problem and needs your help.Anish's chessboard has size N x N. A bishop can move to any distance in any of the four diagonal directions. A bishop threatens another bishop if it can move to the other bishop's position. Your task is to compute the maximum number of bishops that can be placed on a chessboard in such a way that no two bishops threaten each other.The input file consists of several lines. The line number i contains a single number N representing the size of the i-th chessboard. [N <= 10^100]The output file should contain the same number of lines as the input file. The i-th line should contain one number - the maximum number of bishops that can be placed on i-th chessboard without threatening each other.",3457,3651,0,38,0.704402515723,6,1
33319,0.0299154795384,TRIP,"  Alice and Bob want to go on holiday. Each of them has drawn up a list of cities to be visited in turn. A list may contain a city more than once. As they want to travel together, they have to agree upon a common route. No one wants to change the order of the cities on his list or add other cities. Therefore they have no choice but to remove some cities from the list. Of course the common route is to involve as much sight-seeing in cities as possible. There are exactly 26 cities in the region. Therefore they are encoded on the lists as lower case letters from 'a' to 'z'.   The first line of input contains a number T <= 10 that indicates the number of test cases to follow. Each test case consists of two lines; the first line is the list of Alice, the second line is the list of Bob. Each list consists of 1 to 80 lower case letters.   The output for each test case should contain all different trips exactly once that meet the conditions described above. There is at least one such trip, but never more than 1000 different ones. You should order the trips in lexicographic order. Print one blank line between the output of different test cases.  Example  Input  1
abcabcaa
acbacba  Output  ababa
abaca
abcba
acaba
acaca
acbaa
acbca ",-0.208203847332,P6,"Alice and Bob want to go on holiday. Each of them has drawn up a list of cities to be visited in turn. A list may contain a city more than once. As they want to travel together, they have to agree upon a common route. No one wants to change the order of the cities on his list or add other cities. Therefore they have no choice but to remove some cities from the list. Of course the common route is to involve as much sight-seeing in cities as possible. There are exactly 26 cities in the region. Therefore they are encoded on the lists as lower case letters from 'a' to 'z'.The first line of input contains a number T <= 10 that indicates the number of test cases to follow. Each test case consists of two lines; the first line is the list of Alice, the second line is the list of Bob. Each list consists of 1 to 80 lower case letters.The output for each test case should contain all different trips exactly once that meet the conditions described above. There is at least one such trip, but never more than 1000 different ones. You should order the trips in lexicographic order. Print one blank line between the output of different test cases.",3459,420,0,19,0.917910447761,4,1
33320,0.0299154795384,TRIP,"  Alice and Bob want to go on holiday. Each of them has drawn up a list of cities to be visited in turn. A list may contain a city more than once. As they want to travel together, they have to agree upon a common route. No one wants to change the order of the cities on his list or add other cities. Therefore they have no choice but to remove some cities from the list. Of course the common route is to involve as much sight-seeing in cities as possible. There are exactly 26 cities in the region. Therefore they are encoded on the lists as lower case letters from 'a' to 'z'.   The first line of input contains a number T <= 10 that indicates the number of test cases to follow. Each test case consists of two lines; the first line is the list of Alice, the second line is the list of Bob. Each list consists of 1 to 80 lower case letters.   The output for each test case should contain all different trips exactly once that meet the conditions described above. There is at least one such trip, but never more than 1000 different ones. You should order the trips in lexicographic order. Print one blank line between the output of different test cases.  Example  Input  1
abcabcaa
acbacba  Output  ababa
abaca
abcba
acaba
acaca
acbaa
acbca ",-0.208538137747,CMB04,"Alice and Bob want to go on holiday. Each of them has drawn up a list of cities to be visited in turn. A list may contain a city more than once. As they want to travel together, they have to agree upon a common route. Noone wants to change the order of the cities on his list or add other cities. Therefore they have no choice but to remove some cities from the list. Of course the common route is to involve as much sight-seeing in cities as possible. There are exactly 26 cities in the region. Therefore they are encoded on the lists as lower case letters from 'a' to 'z'.The first line of input contains a number T <= 10 that indicates the number of test cases to follow. Each test case consists of two lines; the first line is the list of Alice, the second line is the list of Bob. Each list consists of 1 to 80 lower case letters.The output for each test case should contain all different trips exactly once that meet the conditions described above. There is at least one such trip, but never more than 1000 different ones. You should order the trips in lexicographic order. Print one blank line between the output of different test cases.",3459,2266,0,20,0.903703703704,5,1
33391,-0.268675842017,SA04D,"  Special Box Company (SBC) is a small family-owned and family-run business which produces decorated carton boxes for wrapping gifts. The boxes are hand-made, produced individually from ne materials. When accepting an order from a client, they always produce a few more boxes than needed, to keep a stock of boxes to be sold in the future, if needed. Over the years their stock has been growing, with boxes all over the place, and they decided they needed to organize it a bit more. They have therefore made a list registering the dimensions of every box in their stock. SBC has just received an order from a client that must be delivered tomorrow, so there is no time to produce new boxes. The client wants a certain number N of boxes all of the same size; each box will be used to pack one item of dimensions X, Y and Z. As the carton used in the
boxes is very thin, you may assume that a box of size (X, Y, Z) would t perfectly the item the client wants to wrap. If there are not at least N boxes that t perfectly, the client wants N boxes that t the items as tightly as possible. The box size that ts the items as tightly as possible is the one which minimizes the empty space when the item is put inside the box. An item can be rotated in any direction to be accomodated inside a box; therefore, a box of size(X, Y, Z) is as good as a box of size (Y, Z, X), for example. Can you help SBC nding whether they can fulll the customer order?   The input consists of several test cases. The rst line of a test case contains two integers N and M, indicating respectively the number of boxes the client needs to buy (1  N  1500) and the number of boxes in the stock list (1  M  1500). The second line contains three integers X, Y and Z, representing the dimensions of the item the client wants to wrap (0 
Each of the next M lines contains three integers A, B and C representing the dimensions of a box in the stock list (0 The input must be read from standard input.  For each test case in the input your program must produce one line, containing either: -> The single word impossible, in case it is not possible to fulll the clients order (because there are not at least N boxes of the same size in stock that can contain the item); or -> one integer V , which species the volume of empty space left when one of the N items packed in one of the boxes chosen.   Example   Input: 1 1
2 4 3
2 3 4
2 6
3 1 3
7 4 7
10 8 2
2 8 10
6 2 9
7 7 4
6 2 9
1 1
3 3 3
1 1 1
0 0 Output: 0
99
impossible ",-0.209035028638,WYSIWYG5,"John’s machine manufacturing company gets failed ( even your program could not save him !! ) so he starts a new box business. He has many boxes left from his previous business. He has exactly M boxes each of which could be denoted by its 3 dimensions – (X,Y,Z). He has been given an order according to which he needs to deliver N identical boxes to keep N objects of some given dimension. Dimension of the object will be again of the form – (X,Y,Z). You may assume that an object of size (X, Y, Z) would ﬁt perfectly into a box of size (X,Y,Z). If there are not at least N boxes that ﬁt perfectly, then John wants N boxes that ﬁt the items as tightly as possible. The box size that ﬁts the items as tightly as possible is the one which minimizes the empty space when the item is put inside the box. An item can be rotated in any direction to be accommodated inside a box; therefore, a box of size(X, Y, Z) is as good as a box of size (Y, Z, X), for example.The first line would give the number of test cases.
The ﬁrst line of a test case contains two integers N and M, indicating respectively the number of boxes the client orders (1 ≤ N ≤ 1500) and the number of boxes John has (1 ≤ M ≤ 1500). The second line contains three integers X, Y and Z, representing the dimensions of the item the client wants to wrap (0 < X, Y, Z ≤ 50). Each of the next M lines contains three integers A, B and C representing the dimensions of a box in the stock list (0 < A, B, C ≤ 50).
Repeat for next test case.For each test case in the input your program must produce one line, containing either :The single word ‘impossible’, in case it is not possible to fulﬁll the client’s order (because there are not at least N boxes of the same size in stock that can contain the item).
one integer V , which speciﬁes the volume of empty space left when one of the N items packed in one of the boxes chosen.",3461,1554,0,128,0.387622149837,7,1
33631,1.94099846478,KNAPSACK,"  The famous knapsack problem. You are packing for a vacation on the sea side and you are going to carry only one bag with capacity S (1 Input On the first line you are given S and N. N lines follow with two integers on each line describing one of your items. The first number is the size of the item and the next is the value of the item. Output  You should output a single integer on one like - the total maximum value from the best choice of items for your trip. Example   Input: 4 5
1 8
2 4
3 0
2 5
2 3 Output: 13 ",-0.201016573687,TOUR,"Charan is packing for a vacation and is allowed to carry only 1 bag with capacity X.
He also have N items that he want to take along with him.
Unfortunately he can not fit all of them so he has to choose them.
For Each item it’s size and value are given.
Your task is to maximize the total value of all items charan is going to carry.
 On the first line you are given X and N. N lines follow with two integers on each line describing one of your items. The first number is the size of the item and the next is the value of the item.You should output a single integer --the total maximum value from the best choice of items for your trip.",3472,2887,0,14,0.471698113208,8,1
34535,0.0136278282981,POKER,"  In poker, you have 5 cards. There are 10 kinds of poker hands (from highest to lowest):  royal flush - ace, king, queen, jack and ten, all in the same suit straight flush - five cards of the same suit in sequence, such
as 10,9,8,7,6 of clubs; ace can be counted both as the highest card or as the
lowest card - A,2,3,4,5 of hearts is a straight flush. But 4,3,2,A,K of hearts is not a straight flush - it's just a flush. four of a kind - four cards of the same rank, such as four kings. full house - three cards of one rank plus two cards of another rank flush - five cards of the same suit (but not a straight flush) straight - five cards in order - just like the straight flush, but mixed suits three of a kind - three cards of one rank and two other cards two pairs - two cards of one rank, two cards of another rank, and one more card pair - two cards of the same rank high card - none of the above Write a program that will help you play poker by telling you what kind of hand you have.  The first line of input contains the number of test cases (no more than 20). Each test case consists of one line - five space separated cards. Each card is represented by a two-letter (or digit) word. The first character is the rank (A,K,Q,J,T,9,8,7,6,5,4,3 or 2), the second character is the suit (S,H,D,C standing for spades, hearts, diamonds and clubs). The cards can be in any order (but they will not repeat).  For each test case output one line describing the type of a hand, exactly like in the list above. Example   Input: 3
AH KH QH TH JH
KH 5S 3C 5C 7D
QH QD 2S QC 2C Output: royal flush
pair
full house ",-0.08198327536,POKER,"In poker, you have 5 cards. There are 10 kinds of poker hands (from highest to lowest):royal flush - ace, king, queen, jack and ten, all in the same suit
straight flush - five cards of the same suit in sequence, such as 10,9,8,7,6 of clubs; ace can be counted both as the highest card or as the lowest card - A,2,3,4,5 of hearts is a straight flush. But 4,3,2,A,K of hearts is not a straight flush - it's just a flush.
four of a kind - four cards of the same rank, such as four kings.
full house - three cards of one rank plus two cards of another rank
flush - five cards of the same suit (but not a straight flush)
straight - five cards in order - just like the straight flush, but mixed suits
three of a kind - three cards of one rank and two other cards
two pairs - two cards of one rank, two cards of another rank, and one more card
pair - two cards of the same rank
high card - none of the aboveThe first line of input contains the number of test cases (no more than 20). Each test case consists of one line - five space separated cards. Each card is represented by a two-letter (or digit) word. The first character is the rank (A,K,Q,J,T,9,8,7,6,5,4,3 or 2), the second character is the suit (S,H,D,C standing for spades, hearts, diamonds and clubs). The cards can be in any order (but they will not repeat).For each test case output one line describing the type of a hand, exactly like in the list above.",3521,4093,1,55,0.690058479532,0,1
34551,7.81845329893,LASTDIG,"  Nestor was doing the work of his math class about three days but he is tired of make operations a lot and he should deliver his task tomorrow. His maths teacher gives him two numbers a and b. The problem consist of finding the last digit of the potency of base a and index b. Help Nestor with his problem. You are given two integer numbers: the base a (0 <= a <= 20) and the index b (0 <= b <= 2,147,483,000), a and b both are not 0. You have to find the last digit of a b .   The first line of input contains an integer t, the number of test cases (t <= 30). t test cases follow. For each test case will appear a and b separated by space.   For each test case output an integer per line representing the result.  Example  Input: 2
3 10
6 2 Output: 9
6 ",-0.0931942697418,CDM03," Chef was doing the work of his math class about three days but he is tired of make operations a lot and he should deliver his task tomorrow. His math’s teacher gives two numbers a and b. The problem consist in find the last digit of the potency of base a and index b. Help Chef with his problem. You are given two integer numbers: the base a and the index b . a and b both are not 0. You have to find the last digit of a^b. The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows:
For each test case will appear a and b separated by space. For each test case output an integer per line representing the result. ",3523,4373,0,25,0.721153846154,7,1
34563,1.55590611559,MIXTURES,"  Harry Potter has n mixtures in front of him, arranged in a row.
Each mixture has one of 100 different colors (colors have numbers
from 0 to 99). He wants to mix all these mixtures together. At each step, he is going
to take two mixtures that stand next to each other and mix them together,
and put the resulting mixture in their place. When mixing two mixtures of colors a and b, the resulting mixture
will have the color (a+b) mod 100. Also, there will be some smoke in the process. The amount of smoke generated
when mixing two mixtures of colors a and b is a*b. Find out what is the minimum amount of smoke that Harry can get when
mixing all the mixtures together.  There will be a number of test cases in the input. The first line of each test case will contain n, the number of mixtures,
1 
The second line will contain n integers between 0 and 99 - the
initial colors of the mixtures.  For each test case, output the minimum amount of smoke. Example   Input: 2
18 19
3
40 60 20 Output: 342
2400  In the second test case, there are two possibilities:  first mix 40 and 60 (smoke: 2400), getting 0, then mix 0 and 20 (smoke: 0);
total amount of smoke is 2400 first mix 60 and 20 (smoke: 1200), getting 80, then mix 40 and 80
(smoke: 3200); total amount of smoke is 4400  The first scenario is a much better way to proceed.",0.04146266855,MIXTURES,"Harry Potter has n mixtures in front of him, arranged in a row.Each mixture has one of 100 different colors (colors have numbers from 0 to 99).He wants to mix all these mixtures together. At each step, he is going to take two mixtures that stand next to each other and mix them together, and put the resulting mixture in their place.When mixing two mixtures of colors a and b, the resulting mixture will have the color (a+b) mod 100.Also, there will be some smoke in the process. The amount of smoke generated when mixing two mixtures of colors a and b is a*b.Find out what is the minimum amount of smoke that Harry can get when mixing all the ixtures together.There will be a number of test cases in the input.The first line of each test case will contain n, the number of mixtures, 1 <= n <= 100.The second line will contain n integers between 0 and 99 - the initial colors of the mixtures.For each test case, output the minimum amount of smoke.",3527,3691,1,74,0.513333333333,0,1
34570,4.90464728544,COINS,"  In Byteland they have a very strange monetary system. Each Bytelandian gold coin has an integer number written on it. A coin n
can be exchanged in a bank into three coins: n/2, n/3 and n/4.
But these numbers are all rounded down (the banks have to make a profit). You can also sell Bytelandian coins for American dollars. The exchange
rate is 1:1. But you can not buy Bytelandian coins. You have one gold coin. What is the maximum amount of American dollars
you can get for it?  The input will contain several test cases (not more than 10). Each
testcase is a single line with a number n, 0 Output For each test case output a single line, containing the maximum amount
of American dollars you can make. Example   Input: 12
2 Output: 13
2  You can change 12 into 6, 4 and 3, and then change these into
$6+$4+$3 = $13.

If you try changing the coin 2 into 3 smaller coins, you will get
1, 0 and 0, and later you can get no more than $1 out of them.
It is better just to change the 2 coin directly into $2.",1.4273661007,COINS,"In Byteland they have a very strange monetary system.Each Bytelandian gold coin has an integer number written on it. A coin n can be exchanged in a bank into three coins: n/2, n/3 and n/4. But these numbers are all rounded down (the banks have to make a profit).You can also sell Bytelandian coins for American dollars. The exchange rate is 1:1. But you can not buy Bytelandian coins.You have one gold coin. What is the maximum amount of American dollars you can get for it?The input will contain several test cases (not more than 10). Each testcase is a single line with a number n, 0 <= n <= 1 000 000 000. It is the number written on your coin.For each test case output a single line, containing the maximum amount of American dollars you can make.",3530,3660,1,51,0.579310344828,0,1
35262,0.037867359225,LUCKYNUM,"   English  Vietnamese   In some Asian countries, 8 and 6 are considered lucky digits. Any number containing only 8s and 6s is considered lucky number, e.g. 6, 8, 66, 668, 88, 886 .
Nguyen is a student who likes mathematics very much. Nguyen likes lucky numbers but only of the form  S = 8866  where S has at least one digit and the number of 8s or 6s can be zero. Examples of S are 8, 88, 6, 66, 86, 886, 8866   Given a positive integer X (1 Your task is to write a program to find that number for Nguyen.   The input file consists of several data sets. The first line of the input file contains the number of data sets which is a positive integer and is not bigger than 20. The following lines describe the data sets.  For each data test, there is one single line containing the integer X.   For each data test, write in one line the smallest lucky number S which is divisible by X. In case there is no such a number which has at most 200 digits, write -1.  Example   Sample Input 4
6
8
43
5 Sample Output 6
8
86
-1 ",-0.207926786904,P10,"In some Asian countries, 8 and 6 are considered lucky digits. Any number containing only 8s and 6s is considered lucky number, e.g. 6, 8, 66, 668, 88, 886 .... Nguyen is a student who likes mathematics very much. Nguyen likes lucky numbers but only of the formS = 8...86...6where S has at least one digit and the number of 8s or 6s can be zero. Examples of S are 8, 88, 6, 66, 86, 886, 8866 ...Given a positive integer X (1 < X < 10 000), Nguyen wants to find the smallest lucky number S which has at most 200 digits and is divisible by X.Your task is to write a program to find that number for Nguyen.The input file consists of several data sets. The first line of the input file contains the number of data sets which is a positive integer and is not bigger than 20. The following lines describe the data sets.For each data test, there is one single line containing the integer X.Output description..For each data test, write in one line the smallest lucky number S which is divisible by X. In case there is no such a number which has at most 200 digits, write -1..",3574,2595,0,7,0.753846153846,8,1
35535,-0.0801202162598,RAINBOW,"  Mr.Raju and his extended family are on vacation in Chennai. They visit MGM and see the Rainbow ride. They want to enjoy the ride. However, there are some problems. Each person in the family likes some other people in the family. Each person insists that he or she will go on the ride only if all the people whom that person likes and all the people who like that person also go on the ride. If someone doesn't like anyone and no one likes him, he may come for the ride. You have been roped in to solve this dilemma. Given the weight of the each person in the family, and the list of people they like, and the maximum weight that the Rainbow can bear safely, calculate the maximum number of people in the family who can go on the rainbow.  There will be multiple test cases in the input. For our convenience the family members are numbered from 1 to n. Each test case begins with a line containing two   integers n ( 1  n  1000 ) and C ( 0  C  1000 ), where n is the number of people in the family and C the maximum capacity of the ride in kilograms.  The next line contains n space separated integers with the i th integer giving the weight of the i th family member. These weights are positive and less than or equal to 200 kilograms. Then n lines follow. Each line contains a sequence of integers separated by spaces. The first integer k i gives the number of people in the family person i likes, followed by the persons i likes. An empty line separates each test case. The end of input is indicated by n=0 and C=0 and it should not be processed.There are atmost 50 test cases.  For each test case output on a separate line the maximum number of persons that can take the ride under the given conditions. Example   Input: 5 200
50 50 50 50 50
1 2
1 3
0
1 5
1 4

3 200
100 100 100
1 2
1 3
1 1

0 0 Output: 3
0 ",-0.208428890494,CD106,"An Archaeopteryx and its family want to spend their weekend at Adventure Island. They see an Octopus ride. They want to enjoy it. However, there are some problems (as usual).Each family member likes some other person in the family. Each member insists that he/she will go on the ride only if all the people whom that person likes and all the people who like him/her also go on the ride. But if he/she doesn't like anyone and no one likes him/her, he/she may come for the ride.Ajitesh wants to help the dino family solve this dilemma, for which he wants your help. Given the weight of each family member, the list of people they like and the max weight that the Octopus can bear safely, calculate the max number of family members who can go on the octopus.There will be more than one test case with the max number being 50. For convenience the family members are numbered from 1 to n. Each test case begins with two integers n(1n<=1000)and c(0<=c<=1000),where 'n' is the number of people in the family and 'c' the maximum capacity of the ride in kg.On the next line three are 'n' integers with the kth integer giving the weight of the kth family member. The weights are positive and less than or equal to 200 kg. Then n lines follow with each line containing a sequence of integers separated by spaces. The first integer i gives the number of people in the family that person k likes, followed by the person(s) k likes. Each test case is separated by an empty line. The end of input is indicated by n=0 and c=0 and it should not be processed.For each test case, the output should contain the maximum number of people that can take the ride under the given conditions, on a separate line.",3601,2228,0,54,0.5,7,1
35560,0.0889913903235,KLUCKY,"  The Kurukshetra OPC team observed that many online programming contests have a problem titled ""Lucky Number"". So we decided to have one in KOPC too.  We define the Lucky sequence as the infinite sequence of all integers, in ascending order, that can represented as any positive integer power of 5 (i.e 5 k where k is a positive integer) or as a sum of distinct positive integer powers of 5 (i.e 5 a1 + 5 a2 + 5 a3 + ... , where a1,a2,a3, ... are distinct positive integers). All the numbers in the lucky sequence are called lucky numbers. The first few lucky numbers are 5, 25, 30, 125, 130, 150, ... Given n your task is to find the n th lucky number.  First line of input contains an integer t , t  200, representing the number of test-cases. Then t lines follow each containing one integer n , 1  n  8000.  For each test case output the nth lucky number on a separate line. Answers will fit in a 32-bit signed integer. Example   Input: 4
1
2
3
9 Output: 5
25
30
630 ",-0.111366940743,MANIP2,"Okay. Before we begin, a hint : This one's taken from somewhere. Word to word. Google comes to mind, doesn't it? Here goes: For the heck of it, we define a new sequence as the infinite sequence of all integers, in ascending order, that can represented as any positive integer power of 5 (i.e 5k where k is a positive integer) or as a sum of distinct positive integer powers of 5 (i.e 5a1 + 5a2 + 5a3 + ... , where a1, a2, a3, ... are distinct positive integers). All the numbers in the lucky sequence are called lucky numbers. The first few numbers are 5, 25, 30, 125, 130, 150, ... Given n your task is to find the nth number in the sequence.First line of input contains an integer t, t ≤ 200, representing the number of test- cases. Then t lines follow each containing one integer n, 1 ≤ n ≤ 8000.For each test case output the ""Case#x"" followed by nth number on a separate line. Answers will fit in a 32-bit signed integer.",3603,4696,0,13,0.535031847134,6,1
35591,3.31029807215,PERMUT2,"  Some programming contest problems are really tricky: not only do they
require a different output format from what you might have expected, but
also the sample output does not show the difference. For an example,
let us look at permutations. A permutation of the integers 1 to n is an
ordering of
these integers. So the natural way to represent a permutation is
to list the integers in this order. With n = 5 , a
permutation might look like 2, 3, 4, 5, 1. However, there is another possibility of representing a permutation:
You create a list of numbers where the i -th number is the
position of the integer i in the permutation. 
Let us call this second
possibility an inverse permutation . The inverse permutation
for the sequence above is 5, 1, 2, 3, 4. An ambiguous permutation is a permutation which cannot be
distinguished from its inverse permutation. The permutation 1, 4, 3, 2
for example is ambiguous, because its inverse permutation is the same.
To get rid of such annoying sample test cases, you have to write a
program which detects if a given permutation is ambiguous or not.  Input Specification  The input contains several test cases. The first line of each test case contains an integer n ( 1  n  100000 ).
Then a permutation of the integers 1 to n follows
in the next line. There is exactly one space character
between consecutive integers.
You can assume that every integer between 1 and n appears exactly once in the permutation. The last test case is followed by a zero.  Output Specification  For each test case output whether the permutation is ambiguous or not.
Adhere to the format shown in the sample output.  Sample Input  4
1 4 3 2
5
2 3 4 5 1
1
1
0  Sample Output  ambiguous
not ambiguous
ambiguous ",1.90715085178,PERMUT2,"Some programming contest problems are really tricky: not only do they require a different output format from what you might have expected, but also the sample output does not show the difference. For an example, let us look at permutations.
A permutation of the integers 1 to n is an ordering of these integers. So the natural way to represent a permutation is to list the integers in this order. With n = 5, a permutation might look like 2, 3, 4, 5, 1.
However, there is another possibility of representing a permutation: You create a list of numbers where the i-th number is the position of the integer i in the permutation. Let us call this second possibility an inverse permutation. The inverse permutation for the sequence above is 5, 1, 2, 3, 4.
An ambiguous permutation is a permutation which cannot be distinguished from its inverse permutation. The permutation 1, 4, 3, 2 for example is ambiguous, because its inverse permutation is the same. To get rid of such annoying sample test cases, you have to write a program which detects if a given permutation is ambiguous or not.The input contains several test cases.
The first line of each test case contains an integer n (1 ≤ n ≤ 100000). Then a permutation of the integers 1 to n follows in the next line. There is exactly one space character between consecutive integers. You can assume that every integer between 1 and n appears exactly once in the permutation.
The last test case is followed by a zero.For each test case output whether the permutation is ambiguous or not. Adhere to the format shown in the sample output.",3619,5198,1,21,0.587939698492,0,1
35929,-0.205505358327,MENU,"  Alfred wants to plan what to cook in the next days. He can cook various dishes. For each dish the costs of the ingredients and the benefit value is known. If a dish is cooked the second time in a row, the benefit value for the second time is 50 percent of the benefit value of first time, if it is prepared for the third or higher time in a row, the benefit value is 0. For example cooking a dish with benefit value v three times in a row leads to a total benefit value of 1.5*v. Help him to build the menu which maximizes the benefit value under the constraint that his budget is not exceeded.   The input consists of several test cases. Each test case begins with 3 integers in a line: The number of days k ( 1  k  21 ) Alfred wants to plan for, the number of dishes n ( 1  n  50 ) he can cook and his budget m ( 0  m  100 ).
The following n lines describe the dishes Alfred can cook. The i-th line contains two integers: the costs c ( 1  c  50 ) and the benefit value v ( 1  v  10000 ) of the i-th dish. The end of the input is signaled by a test case with k = n = m = 0 . You don't need to process this test case.   For each output, print the maximum benefit value reachable with 1 digit after the decimal point. Then print k integers with i-th integer being the number of the dish to cook on day i. Dishes are numbered from 1 to n. Print at least one space or new line character after each integer. If there are several possible menus reaching the maximum benefit value, select the one with minimum costs, if there are several with minimum costs, you can print any of them. If every menu exceeds the budget, print only the benefit value of 0.  Example   Input: 2 1 5
3 5
3 5 20
2 5
18 6
1 1
3 3
2 3
0 0 0 Output: 0.0

13.0
1 5 1 ",-0.205853432138,MENU,"Alfred wants to plan what to cook in the next days. He can cook various dishes. For each dish the costs of the ingredients and the benefit value is known. If a dish is cooked the second time in a row, the benefit value for the second time is 50 percent of the benefit value of first time, if it is prepared for the third or higher time in a row, the benefit value is 0. For example cooking a dish with benefit value v three times in a row leads to a total benefit value of 1.5*v.
Help him to build the menu which maximizes the benefit value under the constraint that his budget is not exceeded.The input consists of several test cases. Each test case begins with 3 integers in a line: The number of days k (1 ≤ k ≤ 21) Alfred wants to plan for, the number of dishes n (1 ≤ n ≤ 50) he can cook and his budget m (0 ≤ m ≤ 100). The following n lines describe the dishes Alfred can cook. The i-th line contains two integers: the costs c (1 ≤ c ≤ 50) and the benefit value v (1 ≤ v ≤ 10000) of the i-th dish.
The end of the input is signaled by a test case with k = n = m = 0. You don't need to process this test case.For each output, print the maximum benefit value reachable with 1 digit after the decimal point. Then print k integers with i-th integer being the number of the dish to cook on day i. Dishes are numbered from 1 to n. Print at least one space or new line character after each integer.
If there are several possible menus reaching the maximum benefit value, select the one with minimum costs, if there are several with minimum costs, you can print any of them.
If every menu exceeds the budget, print only the benefit value of 0.",3646,4967,1,45,0.772972972973,0,1
35997,1.43366271619,PIGBANK,"  Before ACM can do anything, abudget must be prepared and the necessary
financial support obtained. The main income for this action comes from
Irreversibly Bound Money (IBM). The idea behind is simple. Whenever
some ACM member has any small money, he takes all the coins and throws them
into a piggy-bank. You know that this process is irreversible, the coins
cannot be removed without breaking the pig. After a sufficiently long
time, there should be enough cash in the piggy-bank to pay everything that
needs to be paid. But there is a big problem with piggy-banks. It is not possible to
determine how much money is inside. So we might break the pig into
pieces only to find out that there is not enough money.  Clearly, we want to
avoid this unpleasant situation. The only possibility is to weigh the
piggy-bank and try to guess how many coins are inside. Assume that we
are able to determine the weight of the pig exactly and that we know
the weights of all coins of a given currency. Then there is some
minimum amount of money in the piggy-bank that we can guarantee. Your task
is to find out this worst case and determine the minimum amount of
cash inside the piggy-bank. We need your help. No more prematurely
broken pigs!  The input consists of T test cases. The number of them ( T ) is given on
the first line of the input file.
Each test case begins with a line containing two integers E and F . They
indicate the weight of an empty pig and of the pig filled with coins. Both
weights are given in grams. No pig will weigh more than 10 kg, that means 1 <= E <= F <= 10000 . On the second line of each test
case, there is an integer number N ( 1 <= N <= 500 ) that gives the number of various
coins used in the given currency. Following this are exactly N lines,
each specifying one coin type. These lines contain two integers each, P and W ( 1 <= P <= 50000 , 1 <= W <=10000 ). P is the value of the
coin in monetary units, W is it's weight in grams.  Print exactly one line of output for each test case. The line must contain
thesentence 
"" The minimum amount of money in the piggy-bank is X . ""
where X is
the minimum amount of money that can be achieved using coins with
the given total weight. If the weight cannot be reached exactly,
print aline "" This is impossible. "". Example  Sample Input:

3
10 110
2
1 1
30 50
10 110
2
1 1
50 30
1 6
2
10 3
20 4

Sample output:

The minimum amount of money in the piggy-bank is 60.
The minimum amount of money in the piggy-bank is 100.
This is impossible. ",-0.156692466761,PD22,"Before ACM can do anything, a budget must be prepared and the necessary financial support obtained. The main income for this action comes from Irreversibly Bound Money (IBM). The idea behind is simple. Whenever some ACM member has any small money, he takes all the coins and throws them into a piggy-bank. You know that this process is irreversible, the coins cannot be removed without breaking the pig. After a sufficiently long time, there should be enough cash in the piggy-bank to pay everything that needs to be paid.

But there is a big problem with piggy-banks. It is not possible to determine how much money is inside. So we might break the pig into pieces only to find out that there is not enough money. Clearly, we want to avoid this unpleasant situation. The only possibility is to weigh the piggy-bank and try to guess how many coins are inside. Assume that we are able to determine the weight of the pig exactly and that we know the weights of all coins of a given currency. Then there is some minimum amount of money in the piggy-bank that we can guarantee. Your task is to find out this worst case and determine the minimum amount of cash inside the piggy-bank. We need your help. No more prematurely broken pigs!The input consists of T test cases. The number of them (T) is given on the first line of the input file. Each test case begins with a line containing two integers E and F. They indicate the weight of an empty pig and of the pig filled with coins. Both weights are given in grams. No pig will weigh more than 10 kg, that means 1 <= E <= F <= 10000. On the second line of each test case, there is an integer number N (1 <= N <= 500) that gives the number of various coins used in the given currency. Following this are exactly N lines, each specifying one coin type. These lines contain two integers each, Pand W (1 <= P <= 50000, 1 <= W <=10000). P is the value of the coin in monetary units, W is it's weight in grams.Print exactly one line of output for each test case. The line must contain the sentence ""The minimum amount of money in the piggy-bank is X."" where X is the minimum amount of money that can be achieved using coins with the given total weight. If the weight cannot be reached exactly, print a line ""This is impossible."".",3663,4370,0,25,0.609318996416,6,1
36085,0.435802848909,BYTESE1,"  LUCIUS DUNGEON (5 points)

There are a set of rooms in a dungeon, arranged in an M  N rectangular grid. In one of the rooms, evil Lucius Malfoy has imprisoned Hermione, owing to his hatred towards the mudbloods. The noble Harry potter is on his way to rescue Hermione. Harry potter starts in the room at the top left corner of the grid, which is labeled (1,1). Each room contains some guards. It takes some time for Harry potter to kill all the guards in the room he is in. The time taken to kill the guards varies from room to room. Once he has killed all the guards in a room, he can move on to any one of its neighbors by going left, right, up or down, provided, of course, that there is a neighboring room in the corresponding direction. He cannot move diagonally. Lucius Malfoy, knowing that Harry Potter is on his way, has set a time bomb that will kill Hermione after T seconds. You will be given the position of Hermione, the time left for the bomb to go off and the time it takes for Harry to kill the guards in each of the rooms in the dungeon. Your task is to determine if it is possible for Harry to reach Hermione and save her by defusing the bomb before the T seconds expire.
For example, suppose the dungeon is described by the following grid of numbers where the numbers start from (1,1): 2 3 2 2 5 1 5 3 1 3 1 1 The number at position (i,j) indicates the time taken for Harry Potter to overpower the guards in room (i,j). Suppose Hermione is in the room at position (4,2). If T = 10. There is no way Harry Potter can reach Hermione in time. However, if M = 15, Harry Potter can reach Hermione with 4 seconds to spare, as follows. Starting from (1,1), he moves right to (1,2) and then (1,3), comes down all the way to (4,3) and then moves to (4,2). This takes 11 seconds (note that he must also overpower the guard in the room where Hermione is incarcerated). You can check that he cannot reach Hermione with more than 4 seconds to spare by any route. Note: If Harry reaches Hermione at exactly T seconds from the start then the answer is YES with 0 seconds to spare.  The first line consists of the number of test cases K (1Output For each of the test case, if it is not possible for Harry Potter to save Hermione then print NO. Otherwise, print two lines. The first line should say YES. The second line should contain a single integer indicating the maximum possible time to spare when Harry Potter rescues the Hermione. Example   Input: 2
4 3 
2 3 2
2 5 1
5 3 1
3 1 1
4 2 15
2 2
1 2
1 1
2 2 2 Output: YES
4
NO ",-0.1808268718,NDUNGEON,"Nikhil has designed the following game. The game is played in a set of rooms in a dungeon, arranged in an M × N rectangular grid. In one of the rooms, the evil wazir has imprisoned the princess. The noble prince is on his way to rescue the princess.The prince starts in the room at the top left corner of the grid, which is labelled (1,1). Each room contains some guards. It takes a certain amount of time before the prince can kill all the guards in the room he is in. The time taken to kill the guards varies from room to room. Once he has killed all the guards in a room, he can move on to any one of its neighbours by going left, right, up or down, provided, of course, that there is a neighbouring room in the corresponding direction.The wazir, knowing that the prince is on his way, has set a time bomb that will kill the princess after T seconds. You will be given the position of the princess, the time left for the bomb to go off and the time it takes for the prince to kill the guards in each of the rooms in the dungeon. Your task is to determine if it is possible for the prince to reach the princess and save her by defusing the bomb before the T seconds expire.For example, suppose the dungeon is described by the following grid of numbers.2 3 2
2 5 1
5 3 1
3 1 1The number at position (i,j) indicates the time taken for the prince to overpower the guards in room (i,j). Suppose the princess is in the room at position (4,2). If T = 10. there is no way the prince can reach the princess in time. However, if T = 15, the prince can reach the princess with 4 seconds to spare, as follows. Starting from (1,1), he moves right to (1,2) and then (1,3), comes down all the way to (4,3) and then moves (4,2). This takes 11 seconds (note that he must also overpower the guard in the room where the princess is incarcerated). You can check that he cannot reach the princess with more than 4 seconds to spare by any route.The first line contains two integers M and N indicating the number of rows and columns in the rectangular dungeon. Lines 2,3,…,M+1 contain N positive integers. The jth integer on line i+1 is the time taken to overpower the guards at room (i,j). The last line in the input, line M+2, contains three integers a, b and T, where (a,b) is the position of the cell where the princess is held and T is the amount of time before the bomb goes off.If it is not possible for the prince to save the princess then print a single line with the answer NO. Otherwise, print two lines. The first line should say YES. The second line should contain a single integer indicating the maximum possible time to spare when the prince rescues the princess.",3675,5082,0,15,0.637362637363,7,1
36093,1.32567890574,BYTESE2,"  The Great Ball (5 points)

Hogwarts has organized The Great Ball to welcome the schools participating in the Triwizard Tournament. The ball is being held in the Great Hall and The Weird Sisters have been called to play the band. The students drift in to dance and then go out when they get tired. Hagrid is stationed at the gate and is noting down the time at which people enter and leave the hall. At the end of the day, he wonders what the maximum number of dancers was during the course of the ball.
For convenience, he writes down for each person entering, the number of minutes from the start of the ball at which the person entered and left. The door of the hall is narrow, so at any time, either one person can enter or one person can exit, but not both. 
For example, suppose the observations noted down by Hagrid are the following:  Serial No Enters at Leaves at  1 1 7  2 2 4  3 6 9  4 3 8  5 5 10 Each line denotes the entry time and exit time of one person. (The identity of the person is not important - the same person may enter and leave many times. For instance, in the example, it might well be that the entries and exits recorded at serial no. 2 & 5 refer to the same person).
In this example, the maximum size of the dancers during the ball was 4. This was achieved between time 6 & 7. Hagrid is not good at Math so he requires your help. Your task is to read the list of entry and exit times and compute the maximum number of dancers during the ball.  The first line is a single integer, T (1Output A total of T lines each of them containing a single integer, denoting the maximum number of dancers during the ball. Example   Input: 1
5
1 7
2 4
6 9
3 8
5 10 Output: 4 ",-0.144195950624,CULPRO,"The Siruseri Welfare Association has organized a Cultural Programme for families in the area, to build up community spirit. The Cultural Programme is being held at the Siruseri Community Hall. Inside the hall, children perform songs and dances. Outside, local restau- rants have set up stalls selling snacks.As is typical on such an occasion, members of the audience drift in and out of the hall during the programme. An observant office bearer of the Siruseri Welfare Association notes down the times at which people enter and leave the hall. Suppose that is N. He wants to know the maximum size of the audience was during the course of the programme. For convenience, he writes down each time as a single integer - Ai, the number of minutes from the start of the programme for the ith person. Also, the door of the hall is narrow, so at any time, either one person can enter or one person can leave the hall, but not both. Thus, each entry and exit time that is noted down is distinct.For example, suppose the observations noted down are the following. Each line denotes the entry time and exit time of one person. (The identity of the person is not important—the same person may enter and leave the hall many times. For instance, in the example below, it might well be that the entries and exits recorded at Serial Nos 2 and 5 refer to the same person.)Your task is to read the list of entry and exit times and compute the maximum size of the audience during the programme.",3676,4103,0,74,0.372384937238,7,1
36096,3.57952453115,BYTESM2,"  One of the secret chambers in Hogwarts is full of philosophers stones. The floor of the chamber is covered by h  w square tiles, where there are h rows of tiles from front (first row) to back (last row) and w columns of tiles from left to right. Each tile has 1 to 100 stones on it.

Harry has to grab as many philosophers stones as possible, subject to the following restrictions: He starts by choosing any tile in the first row, and collects the philosophers stones on that tile. Then, he moves to a tile in the next row, collects the philosophers stones on the tile, and so on until he reaches the last row.  When he moves from one tile to a tile in the next row, he can only move to the tile just below it or diagonally to the left or right. Given the values of h and w, and the number of philosophers stones on each tile, write a program to compute the maximum possible number of philosophers stones Harry can grab in one single trip from the first row to the last row.  The first line consists of a single integer T, the number of test cases. In each of the test cases, the first line has two integers. The first integer h (1 Output The output should consist of T lines, (1 Example  Input: 1
6 5
3 1 7 4 2
2 1 3 1 1
1 2 2 1 8
2 2 1 5 3
2 1 4 4 4
5 2 7 5 1 Output: 32 	

//7+1+8+5+4+7=32 ",-0.206141576725,ALFZ01,"Romeo wants to get some roses for Juliet and so he goes into a garden. The garden is in the shape of a H x W rectangle, where there are H rows and W columns. Each unit square of the garden has 1 to 100 flowers in it. Romeo has to grab as many flowers as possible, subject to the following restrictions:He starts by choosing any square in the first row, and collects the flowers on that square. Then, he moves to a square in the next row, collects the flowers, and so on until he reaches the last row. He can not go back to a previous rowWhen he moves to the next row, he can only move to the square just below it or diagonally to the left or right.
Help Romeo grab the maximum number of roses he can.The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follow:The first line of each test case contains two integers H and W denoting the number of rows and columns respectively.H lines follow. Each line has W space separated integers A1, A2, ..., AW, where each integer M is the number of flowers in that square.Output T lines, one for each test case. Each line should contain a single integer, which is the maximum possible number of flowers Romeo can get, for the corresponding test case.",3678,2374,0,28,0.362162162162,7,1
36434,7.69059340308,ONP,"  Transform the algebraic expression with brackets into RPN form (Reverse Polish Notation). Two-argument operators: +, -, *, /, ^ (priority from the lowest to the highest), brackets ( ). Operands: only letters: a,b,...,z. Assume that there is only one RPN form (no expressions like a*b*c).    t [the number of expressions 100] expression [length 400]
[other expressions]  Text grouped in [ ] does not appear in the input file.   The expression s in RPN form, one per line.  Example  Input:
3
(a+(b*c))
((a+b)*(z+x))
((a+t)*((b+(a+c))^(c+d)))

Output:
abc*+
ab+zx+*
at+bac++cd+^* ",-0.208513863122,EPI1301,"The algebraic expression along with brackets are given. Transform them into Reverse Polish Notation (RPN) form. Binary operators: +, -, *, /, ^ (Priority from lowest to highest, brackets ( ). Operands: only letters a, b,…, z.T [number of expressions <= 100]Expression [length <= 400][Other expressions]Text grouped in [ ] does not appear in Input statement.The expressions in RPN form, one per line.",3727,1926,0,26,0.413793103448,7,1
36436,7.69059340308,ONP,"  Transform the algebraic expression with brackets into RPN form (Reverse Polish Notation). Two-argument operators: +, -, *, /, ^ (priority from the lowest to the highest), brackets ( ). Operands: only letters: a,b,...,z. Assume that there is only one RPN form (no expressions like a*b*c).    t [the number of expressions 100] expression [length 400]
[other expressions]  Text grouped in [ ] does not appear in the input file.   The expression s in RPN form, one per line.  Example  Input:
3
(a+(b*c))
((a+b)*(z+x))
((a+t)*((b+(a+c))^(c+d)))

Output:
abc*+
ab+zx+*
at+bac++cd+^* ",-0.206702664366,CDM01," Convert the Infix expression with brackets into Postfix form (Reverse Polish Notation). Two-argument operators: +, -, *, /, ^ (priority from the lowest to the highest), brackets ( ). Operands: only letters: A,B,...,Z. Assume that there is only one Infix form. Output description.For each test case, Output a single line containing the Postfix Expression. ",3727,2388,0,33,0.4,5,1
36466,5.96551127593,TOANDFRO,"  Mo and Larry have devised a way of encrypting messages. They first decide secretly on the number of
columns and write the message (letters only) down the columns, padding with extra random letters so
as to make a rectangular array of letters. For example, if the message is Theres no place like home on
a snowy night and there are five columns, Mo would write down  t o i o y
h p k n n
e l e a i
r a h s g
e c o n h
s e m o t
n l e w x  Note that Mo includes only letters and writes them all in lower case. In this example, Mo used the
character x to pad the message out to make a rectangle, although he could have used any letter.
Mo then sends the message to Larry by writing the letters in each row, alternating left-to-right and
right-to-left. So, the above would be encrypted as  toioynnkpheleaigshareconhtomesnlewx  Your job is to recover for Larry the original message (along with any extra padding letters) from the
encrypted one.   There will be multiple input sets. Input for each set will consist of two lines. The first line will contain
an integer in the range 2...20 indicating the number of columns used. The next line is a string of up
to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of
input.   Each input set should generate one line of output, giving the original plaintext message, with no spaces.  Example   Input: 5
toioynnkpheleaigshareconhtomesnlewx
3
ttyohhieneesiaabss
0 Output: theresnoplacelikehomeonasnowynightx
thisistheeasyoneab ",-0.209035028638,CSEA3,"Mo and Larry have devised a way of encrypting messages. They first decide secretly on the
number of columns and write the message (letters only) down the columns, padding
with extra random letters so as to make a rectangular array of letters. For example, if
the message is ""There's no place like home on a snowy night"" and there are five
columns, Mo would write down
t o i o y
h p k n n
e l e a i
r a h s g
e c o n h
s e m o t
n l e w x
Note that Mo includes only letters and writes them all in lower case. In this example, Mo
used the character 'x' to pad the message out to make a rectangle, although he could
have used any letter. Mo then sends the message to Larry by writing the letters in
each row, alternating left-to-right and right-to-left. So, the above would be encrypted
as
toioynnkpheleaigshareconhtomesnlewx
Your job is to recover for Larry the original message (along with any extra padding letters)
from the encrypted one.There will be multiple input sets. Input for each set will consist of two lines. The first line will contain an integer in the range 2...20 indicating the number of columns used. The next line is a string of up to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of input.Each input set should generate one line of output, giving the original plaintext message, (with no spaces).",3729,1642,0,24,0.698412698413,8,1
36467,5.96551127593,TOANDFRO,"  Mo and Larry have devised a way of encrypting messages. They first decide secretly on the number of
columns and write the message (letters only) down the columns, padding with extra random letters so
as to make a rectangular array of letters. For example, if the message is Theres no place like home on
a snowy night and there are five columns, Mo would write down  t o i o y
h p k n n
e l e a i
r a h s g
e c o n h
s e m o t
n l e w x  Note that Mo includes only letters and writes them all in lower case. In this example, Mo used the
character x to pad the message out to make a rectangle, although he could have used any letter.
Mo then sends the message to Larry by writing the letters in each row, alternating left-to-right and
right-to-left. So, the above would be encrypted as  toioynnkpheleaigshareconhtomesnlewx  Your job is to recover for Larry the original message (along with any extra padding letters) from the
encrypted one.   There will be multiple input sets. Input for each set will consist of two lines. The first line will contain
an integer in the range 2...20 indicating the number of columns used. The next line is a string of up
to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of
input.   Each input set should generate one line of output, giving the original plaintext message, with no spaces.  Example   Input: 5
toioynnkpheleaigshareconhtomesnlewx
3
ttyohhieneesiaabss
0 Output: theresnoplacelikehomeonasnowynightx
thisistheeasyoneab ",-0.198210114444,DS7,"Michal Scofield and Lincon burrow are two brothers. By a murder allegation Lincon Burrow was sentenced to jail. Michal Scofield some how came to know that his brother is not guilty and he don’t have time to file case against the allegations as his brother is going to sit on death chair soon enough. So he made a plan for Prison break before handing himself over to police in a robbery allegation he made tattoos on his whole body a way of encrypting messages. He decided secretly on the number of columns and write the message (letters only) down the columns, padding with extra random letters so as to make a rectangular array of letters. For example, if the message is “There’s no place like home on a snowy night” and there are five columns, Michal would write downt o i o y
h p k n n
e l e a i
r a h s g
e c o n h
s e m o t
n l e w xNote that Michal Scofield includes only letters in between the tattoos and writes them all in lower case. In this example, Michael used the character ‘x’ to pad the message out to make a rectangle, although he could have used any letter. Michael then tattooed them by writing the letters in each row, alternating left-to-right and right-to-left. So, the above would be encrypted astoioynnkpheleaigshareconhtomesnlewxAt the time of the break he forget something about encryption .Your job is to recover for Michal the original message (along with any extra padding letters) from the encrypted one.The first line have a integer T number of test cases. Input for each test case will consist of two lines. The first line will contain an integer c indicating the number of columns used. The next line is a string of up to 200 lower case letters.Each input set should generate one line of output, giving the original plaintext message, with no spaces.",3729,3412,0,57,0.514767932489,7,1
36468,5.96551127593,TOANDFRO,"  Mo and Larry have devised a way of encrypting messages. They first decide secretly on the number of
columns and write the message (letters only) down the columns, padding with extra random letters so
as to make a rectangular array of letters. For example, if the message is Theres no place like home on
a snowy night and there are five columns, Mo would write down  t o i o y
h p k n n
e l e a i
r a h s g
e c o n h
s e m o t
n l e w x  Note that Mo includes only letters and writes them all in lower case. In this example, Mo used the
character x to pad the message out to make a rectangle, although he could have used any letter.
Mo then sends the message to Larry by writing the letters in each row, alternating left-to-right and
right-to-left. So, the above would be encrypted as  toioynnkpheleaigshareconhtomesnlewx  Your job is to recover for Larry the original message (along with any extra padding letters) from the
encrypted one.   There will be multiple input sets. Input for each set will consist of two lines. The first line will contain
an integer in the range 2...20 indicating the number of columns used. The next line is a string of up
to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of
input.   Each input set should generate one line of output, giving the original plaintext message, with no spaces.  Example   Input: 5
toioynnkpheleaigshareconhtomesnlewx
3
ttyohhieneesiaabss
0 Output: theresnoplacelikehomeonasnowynightx
thisistheeasyoneab ",-0.154899913282,PD33,"Mo and Larry have devised a way of encrypting messages. They first decide secretly on the number of columns and write the message (letters only) down the columns, padding with extra random letters so as to make a rectangular array of letters. For example, if the message is “There’s no place like home on a snowy night” and there are five columns, Mo would write down t o i o y h p k n n e l e a i r a h s g e c o n h s e m o t n l e w x Note that Mo includes only letters and writes them all in lower case. In this example, Mo used the character ‘x’ to pad the message out to make a rectangle, although he could have used any letter. Mo then sends the message to Larry by writing the letters in each row, alternating left-to-right and right-to-left. So, the above would be encrypted as toioynnkpheleaigshareconhtomesnlewx Your job is to recover for Larry the original message (along with any extra padding letters) from the encrypted one.There will be multiple input sets. Input for each set will consist of two lines. The first line will contain an integer in the range 2...20 indicating the number of columns used. The next line is a string of up to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of input.Each input set should generate one line of output, giving the original plaintext message, with no spaces.",3729,4376,0,5,0.765363128492,7,1
36783,0.479278267529,WORDS1,"  Some of the secret doors contain avery interesting word puzzle. The team of
archaeologists has to solve it to open  that doors. Because there is no
other way to open the doors, the puzzle is very important for us. There is alarge number of magnetic plates on every door. Every plate has one
word written on it. The plates must be arranged into a sequence in such a way that
every word begins with the same letter as the previous
word ends. For example, the word ``ac m '' can be followed by the word
`` m otorola''. Your
task is to write a computer program that will read the list of words and
determine whether it is possible to arrange all of the plates in
asequence (according to the given rule) and consequently to open the door.  The input consists of T test cases. The number of them ( T , equal to about 500) is given on
the first line of the input file.
Each test case begins with a line containing asingle integer number N that indicates the number of plates
( 1 ). Then exactly N lines follow,
each containing asingle word. Each word contains at least two
and at most 1000 lowercase characters, that means only letters ' a '
through ' z ' will appear in the word. The same word may appear several
times in the list.  Your program has to determine whether it is possible to arrange all the plates in
asequence such that the first letter of each word is equal to the last
letter of the previous word. All the plates from the list must be used, each
exactly once. The words mentioned several times must be
used that number of times. If there exists such an ordering of plates, your program should print 
thesentence "" Ordering is possible. "". Otherwise, output
thesentence "" The door cannot be opened. "". Example  Sample input: 3
2
acm
ibm
3
acm
malform
mouse
2
ok
ok Sample output: The door cannot be opened.
Ordering is possible.
The door cannot be opened.  Warning: large Input/Output data, be careful with certain languages ",-0.209035028638,CMB05,"Some of the secret doors contain a very interesting word puzzle. The team of archaeologists has to solve it to open that doors. Because there is no other way to open the doors, the puzzle is very important for us. There is a large number of magnetic plates on every door. Every plate has one word written on it. The plates must be arranged into a sequence in such a way that every word begins with the same letter as the previous word ends. For example, the word 'annum'can be followed by the word 'motorola'. Your task is to write a computer program that will read the list of words and determine whether it is possible to arrange all of the plates in a sequence (according to the given rule) and consequently to open the door.The input consists of T test cases. The number of them (T, equal to about 500) is given on the first line of the input file. Each test case begins with a line containing a single integer number N that indicates the number of plates (1 <= N <= 100000). Then exactly N lines follow, each containing a single word. Each word contains at least two and at most 1000 lowercase characters, that means only letters 'a' through 'z' will appear in the word. The same word may appear several times in the list.Your program has to determine whether it is possible to arrange all the plates in a sequence such that the first letter of each word is equal to the last letter of the previous word. All the plates from the list must be used, each exactly once. The words mentioned several times must be used that number of times.If there exists such an ordering of plates, your program should print the sentence ""Ordering is possible."". Otherwise, output the sentence ""The door cannot be opened."".",3763,1680,0,21,0.598130841121,6,1
36785,0.479278267529,WORDS1,"  Some of the secret doors contain avery interesting word puzzle. The team of
archaeologists has to solve it to open  that doors. Because there is no
other way to open the doors, the puzzle is very important for us. There is alarge number of magnetic plates on every door. Every plate has one
word written on it. The plates must be arranged into a sequence in such a way that
every word begins with the same letter as the previous
word ends. For example, the word ``ac m '' can be followed by the word
`` m otorola''. Your
task is to write a computer program that will read the list of words and
determine whether it is possible to arrange all of the plates in
asequence (according to the given rule) and consequently to open the door.  The input consists of T test cases. The number of them ( T , equal to about 500) is given on
the first line of the input file.
Each test case begins with a line containing asingle integer number N that indicates the number of plates
( 1 ). Then exactly N lines follow,
each containing asingle word. Each word contains at least two
and at most 1000 lowercase characters, that means only letters ' a '
through ' z ' will appear in the word. The same word may appear several
times in the list.  Your program has to determine whether it is possible to arrange all the plates in
asequence such that the first letter of each word is equal to the last
letter of the previous word. All the plates from the list must be used, each
exactly once. The words mentioned several times must be
used that number of times. If there exists such an ordering of plates, your program should print 
thesentence "" Ordering is possible. "". Otherwise, output
thesentence "" The door cannot be opened. "". Example  Sample input: 3
2
acm
ibm
3
acm
malform
mouse
2
ok
ok Sample output: The door cannot be opened.
Ordering is possible.
The door cannot be opened.  Warning: large Input/Output data, be careful with certain languages ",-0.208134277094,EGYPT,"Raju and Rada planned a trip to Egypt inspired by the movie ‘THE MUMMY’, not a pleasure trip. They went to Egypt by plane. On plane they met a curator who works at the British museum.
He gave them a map containing some interesting places in Egypt.
After lots of discussion they decided to go ‘HAMUNAPTRA-The city of the death ‘ which contained huge number of pyramids and sand arts.
At the earliest they reached HAMUNAPRA. They entered a pyramid .there was a huge door. Raju and radha failed to open the door. So they decided to go back. Bt radha find some words written on the walls of the pyramid. They referred the map given by the curator. It says arrange them in such a way that every word begins with the same letter as the previous word ends and write on the sand door will open.
For example, the word ``proti'' can be followed by the word ``imhotep''.
The task given to you guys is to write a computer program that will read the list of words and determine whether it is possible to arrange all of them in a sequence (according to the given rule) and consequently to open the door.The input consists of T test cases.
The number of them (T, equal to about 500) is given on
The first line of the input file.
Each test case begins with a line containing a single integer number N that indicates the number of plates
(1 <= N <= 100000). Then exactly N lines follow, each containing a single word. Each word contains at least two and at most 1000 lowercase characters. The same word may appear several times in the list.Your program has to determine whether it is possible to arrange all the plates in
a sequence such that the first letter of each word is equal to the last letter of the previous word. All the plates from the list must be used, each exactly once. The words mentioned several times must be used that number of times.
If there exists such an ordering of plates, your program should print the sentence ""The journey continues.”. Otherwise, output the sentence ""Journey ends here."".",3763,2175,0,23,0.353790613718,6,1
36786,0.479278267529,WORDS1,"  Some of the secret doors contain avery interesting word puzzle. The team of
archaeologists has to solve it to open  that doors. Because there is no
other way to open the doors, the puzzle is very important for us. There is alarge number of magnetic plates on every door. Every plate has one
word written on it. The plates must be arranged into a sequence in such a way that
every word begins with the same letter as the previous
word ends. For example, the word ``ac m '' can be followed by the word
`` m otorola''. Your
task is to write a computer program that will read the list of words and
determine whether it is possible to arrange all of the plates in
asequence (according to the given rule) and consequently to open the door.  The input consists of T test cases. The number of them ( T , equal to about 500) is given on
the first line of the input file.
Each test case begins with a line containing asingle integer number N that indicates the number of plates
( 1 ). Then exactly N lines follow,
each containing asingle word. Each word contains at least two
and at most 1000 lowercase characters, that means only letters ' a '
through ' z ' will appear in the word. The same word may appear several
times in the list.  Your program has to determine whether it is possible to arrange all the plates in
asequence such that the first letter of each word is equal to the last
letter of the previous word. All the plates from the list must be used, each
exactly once. The words mentioned several times must be
used that number of times. If there exists such an ordering of plates, your program should print 
thesentence "" Ordering is possible. "". Otherwise, output
thesentence "" The door cannot be opened. "". Example  Sample input: 3
2
acm
ibm
3
acm
malform
mouse
2
ok
ok Sample output: The door cannot be opened.
Ordering is possible.
The door cannot be opened.  Warning: large Input/Output data, be careful with certain languages ",-0.12949511633,WORDS1,"Some of the secret doors contain a very interesting word puzzle. The team of archaeologists has to solve it to open that doors. Because there is no other way to open the doors, the puzzle is very important for us.There is a large number of magnetic plates on every door. Every plate has one word written on it. The plates must be arranged into a sequence in such a way that every word begins with the same letter as the previous word ends. For example, the word ``acm'' can be followed by the word ``motorola''. Your task is to write a computer program that will read the list of words and determine whether it is possible to arrange all of the plates in a sequence (according to the given rule) and consequently to open the door.The input consists of T test cases. The number of them (T, equal to about 500) is given on the first line of the input file. Each test case begins with a line containing a single integer number N that indicates the number of plates (1 <= N <= 100000). Then exactly Nlines follow, each containing a single word. Each word contains at least two and at most 1000 lowercase characters, that means only letters 'a' through 'z' will appear in the word. The same word may appear several times in the list.Your program has to determine whether it is possible to arrange all the plates in a sequence such that the first letter of each word is equal to the last letter of the previous word. All the plates from the list must be used, each exactly once. The words mentioned several times must be used that number of times.If there exists such an ordering of plates, your program should print the sentence ""Ordering is possible."". Otherwise, output the sentence ""The door cannot be opened."".",3763,3710,1,22,0.583333333333,0,1
36956,13.5391725455,ADDREV,"  The Antique Comedians of Malidinesia prefer comedies to tragedies. Unfortunately, most of the ancient plays are tragedies. Therefore the dramatic advisor of ACM has decided to transfigure some tragedies into comedies. Obviously, this work is very hard because the basic sense of the play must be kept intact, although all the things change to their opposites. For example the numbers: if any number appears in the tragedy, it must be converted to its reversed form before being accepted into the comedy play.  Reversed number is a number written in arabic numerals but the order of digits is reversed. The first digit becomes last and vice versa. For example, if the main hero had 1245 strawberries in the tragedy, he has 5421 of them now. Note that all the leading zeros are omitted. That means if the number ends with a zero, the zero is lost by reversing (e.g. 1200 gives 21). Also note that the reversed number never has any trailing zeros.  ACM needs to calculate with reversed numbers. Your task is to add two reversed numbers and output their reversed sum. Of course, the result is not unique because any particular number  is a reversed form of several numbers (e.g. 21 could be 12, 120 or 1200 before reversing). Thus we must assume that no zeros were lost by reversing (e.g. assume that the original number was 12).   The input consists of N cases (equal to about 10000). The first line of the input contains only positive integer N . Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the reversed numbers you are to add.   For each case, print exactly one line containing only one integer - the reversed sum of two reversed numbers.  Omit any leading zeros in the output.  Example  Sample input: 

3
24 1
4358 754
305 794

Sample output:

34
1998
1 ",-0.204952420952,VITC03,"The Dramatics Club of VITCC prefer comedies to tragedies. Unfortunately, most of the ancient plays are tragedies. Therefore MishraJi, the dramatic advisor of VITCC has decided to transfigure some tragedies into comedies. Obviously, this work is very hard because the basic sense of the play must be kept intact, although all the things change to their opposites. For example the numbers: if any number appears in the tragedy, it must be converted to its reversed form before being accepted into the comedy play.



Reversed number is a number written in arabic numerals but the order of digits is reversed. The first digit becomes last and vice versa. For example, if the main hero had 1245 strawberries in the tragedy, he has 5421 of them now. Note that all the leading zeros are omitted. That means if the number ends with a zero, the zero is lost by reversing (e.g. 1200 gives 21). Also note that the reversed number never has any trailing zeros.



MishraJi needs to calculate with reversed numbers. Your task is to add two reversed numbers and output their reversed sum. Of course, the result is not unique because any particular number is a reversed form of several numbers (e.g. 21 could be 12, 120 or 1200 before reversing). Thus we must assume that no zeros were lost by reversing (e.g. assume that the original number was 12).The input consists of N cases (equal to about 10000). The first line of the input contains only positive integer N. Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the reversed numbers you are to add.For each case, print exactly one line containing only one integer - the reversed sum of two reversed numbers. Omit any leading zeros in the output.",3811,2522,0,25,0.857868020305,6,1
36957,13.5391725455,ADDREV,"  The Antique Comedians of Malidinesia prefer comedies to tragedies. Unfortunately, most of the ancient plays are tragedies. Therefore the dramatic advisor of ACM has decided to transfigure some tragedies into comedies. Obviously, this work is very hard because the basic sense of the play must be kept intact, although all the things change to their opposites. For example the numbers: if any number appears in the tragedy, it must be converted to its reversed form before being accepted into the comedy play.  Reversed number is a number written in arabic numerals but the order of digits is reversed. The first digit becomes last and vice versa. For example, if the main hero had 1245 strawberries in the tragedy, he has 5421 of them now. Note that all the leading zeros are omitted. That means if the number ends with a zero, the zero is lost by reversing (e.g. 1200 gives 21). Also note that the reversed number never has any trailing zeros.  ACM needs to calculate with reversed numbers. Your task is to add two reversed numbers and output their reversed sum. Of course, the result is not unique because any particular number  is a reversed form of several numbers (e.g. 21 could be 12, 120 or 1200 before reversing). Thus we must assume that no zeros were lost by reversing (e.g. assume that the original number was 12).   The input consists of N cases (equal to about 10000). The first line of the input contains only positive integer N . Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the reversed numbers you are to add.   For each case, print exactly one line containing only one integer - the reversed sum of two reversed numbers.  Omit any leading zeros in the output.  Example  Sample input: 

3
24 1
4358 754
305 794

Sample output:

34
1998
1 ",-0.197717467685,CODEJAM7,"Mirrored number is a number written in decimal numerals but we reverse the order of digits. The
last digit becomes first and vice versa. For instance, if the number is 4628
the number becomes 8264 of now. Note that all the leading zeros are omitted. That means if the
number ends with a zero, the zero is lost by mirroring (e.g. 1400 gives 41). Another point to note is that there will be no trailing zeroes in the mirrored numbers.
QUARK managers need to calculate with mirrored numbers. Your task is to add two mirrored numbers and
output their mirrored sum. Of course, the result is not unique because any particular number is a
mirrored form of several numbers (e.g. 41 could be 14, 140 or 1400 before mirroring). Thus we must
assume that no zeros were lost by mirroring (e.g. assume that the original number was 14).The input has N cases. The first line of the input consists of only one positive integer N. After which follow
the N cases. Each case consists of exactly one line which has two positive integers separated by a space. These
are the mirrored numbers which you are required to add. Numbers will be at most 250 digits long.",3811,2627,0,128,0.396475770925,7,1
36958,13.5391725455,ADDREV,"  The Antique Comedians of Malidinesia prefer comedies to tragedies. Unfortunately, most of the ancient plays are tragedies. Therefore the dramatic advisor of ACM has decided to transfigure some tragedies into comedies. Obviously, this work is very hard because the basic sense of the play must be kept intact, although all the things change to their opposites. For example the numbers: if any number appears in the tragedy, it must be converted to its reversed form before being accepted into the comedy play.  Reversed number is a number written in arabic numerals but the order of digits is reversed. The first digit becomes last and vice versa. For example, if the main hero had 1245 strawberries in the tragedy, he has 5421 of them now. Note that all the leading zeros are omitted. That means if the number ends with a zero, the zero is lost by reversing (e.g. 1200 gives 21). Also note that the reversed number never has any trailing zeros.  ACM needs to calculate with reversed numbers. Your task is to add two reversed numbers and output their reversed sum. Of course, the result is not unique because any particular number  is a reversed form of several numbers (e.g. 21 could be 12, 120 or 1200 before reversing). Thus we must assume that no zeros were lost by reversing (e.g. assume that the original number was 12).   The input consists of N cases (equal to about 10000). The first line of the input contains only positive integer N . Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the reversed numbers you are to add.   For each case, print exactly one line containing only one integer - the reversed sum of two reversed numbers.  Omit any leading zeros in the output.  Example  Sample input: 

3
24 1
4358 754
305 794

Sample output:

34
1998
1 ",-0.19184951945,NEURONB1,"Reversed number is a number written in arabic numerals but the order of digits is reversed. The first digit becomes last and vice versa. For example, if the number is 1245,it will become 5421 .Note that all the leading zeros are omitted. That means if the number ends with a zero, the zero is lost by reversing (e.g. 1200 gives 21). Also note that the reversed number never has any trailing zeros. Your task is to add two reversed numbers and output their reversed sum. Of course, the result is not unique because any particular number is a reversed form of several numbers (e.g. 21 could be 12, 120 or 1200 before reversing). Thus we must assume that no zeros were lost by reversing (e.g. assume that the original number was 12).The input consists of N cases (equal to about 10000). The first line of the input contains only positive integer N. Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the reversed numbers you are to add.For each case, print exactly one line containing only one integer - the reversed sum of two reversed numbers. Omit any leading zeros in the output.",3811,3793,0,121,0.615384615385,7,1
36961,13.5391725455,ADDREV,"  The Antique Comedians of Malidinesia prefer comedies to tragedies. Unfortunately, most of the ancient plays are tragedies. Therefore the dramatic advisor of ACM has decided to transfigure some tragedies into comedies. Obviously, this work is very hard because the basic sense of the play must be kept intact, although all the things change to their opposites. For example the numbers: if any number appears in the tragedy, it must be converted to its reversed form before being accepted into the comedy play.  Reversed number is a number written in arabic numerals but the order of digits is reversed. The first digit becomes last and vice versa. For example, if the main hero had 1245 strawberries in the tragedy, he has 5421 of them now. Note that all the leading zeros are omitted. That means if the number ends with a zero, the zero is lost by reversing (e.g. 1200 gives 21). Also note that the reversed number never has any trailing zeros.  ACM needs to calculate with reversed numbers. Your task is to add two reversed numbers and output their reversed sum. Of course, the result is not unique because any particular number  is a reversed form of several numbers (e.g. 21 could be 12, 120 or 1200 before reversing). Thus we must assume that no zeros were lost by reversing (e.g. assume that the original number was 12).   The input consists of N cases (equal to about 10000). The first line of the input contains only positive integer N . Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the reversed numbers you are to add.   For each case, print exactly one line containing only one integer - the reversed sum of two reversed numbers.  Omit any leading zeros in the output.  Example  Sample input: 

3
24 1
4358 754
305 794

Sample output:

34
1998
1 ",0.435184010322,CMB01,"Reversed number is a number written in arabic numerals but the order of digits is reversed. The first digit becomes last and vice versa. For example, if the number is 1245,it will become 5421 .Note that all the leading zeros are omitted. That means if the number ends with a zero, the zero is lost by reversing (e.g. 1200 gives 21). Also note that the reversed number never has any trailing zeros. Your task is to add two reversed numbers and output their reversed sum. Of course, the result is not unique because any particular number is a reversed form of several numbers (e.g. 21 could be 12, 120 or 1200 before reversing). Thus we must assume that no zeros were lost by reversing (e.g. assume that the original number was 12).The input consists of N cases (equal to about 10000). The first line of the input contains only positive integer N. Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the reversed numbers you are to add.For each case, print exactly one line containing only one integer - the reversed sum of two reversed numbers. Omit any leading zeros in the output.",3811,4867,0,121,0.615384615385,6,1
37696,-0.14650274902,PGCD,"  Johnny has created a table which encodes the results of some operation -- a function of two arguments. But instead of a boring multiplication table of the sort you learn by heart at prep-school, he has created a GCD (greatest common divisor) table! So he now has a table (of height a and width b ), indexed from (1,1) to ( a , b ), and with the value of field ( i , j ) equal to gcd( i , j ). He wants to know how many times he has used prime numbers when writing the table.   First, t  10, the number of test cases. Each test case consists of two integers, 1  a , b 7.   For each test case write one number - the number of prime numbers Johnny wrote in that test case.  Example  Input: 2
10 10
100 100 Output: 30
2791 ",-0.208480406747,NEURONE2,"Johnny has created a table which encodes the results of some operation -- a function of two arguments. But instead of a boring multiplication table of the sort you learn by heart at prep-school, he has created a GCD (greatest common divisor) table! So he now has a table (of height a and width b), indexed from (1,1) to (a,b), and with the value of field (i,j) equal to gcd(i,j). He wants to know how many times he has used prime numbers when writing the table.First, t ≤ 10, the number of test cases. Each test case consists of two integers, 1 ≤ a,b < 10^7 Each test case's input is separated by a blank line.For each test case write one number - the number of prime numbers Johnny wrote in that test case. Print a blank line after each test case's output.",3898,478,0,13,0.655172413793,8,1
37700,-0.14650274902,PGCD,"  Johnny has created a table which encodes the results of some operation -- a function of two arguments. But instead of a boring multiplication table of the sort you learn by heart at prep-school, he has created a GCD (greatest common divisor) table! So he now has a table (of height a and width b ), indexed from (1,1) to ( a , b ), and with the value of field ( i , j ) equal to gcd( i , j ). He wants to know how many times he has used prime numbers when writing the table.   First, t  10, the number of test cases. Each test case consists of two integers, 1  a , b 7.   For each test case write one number - the number of prime numbers Johnny wrote in that test case.  Example  Input: 2
10 10
100 100 Output: 30
2791 ",-0.19513969365,D4,"Johnny has created a table which encodes the results of some operation -- a function of two arguments. But instead of a boring multiplication table of the sort you learn by heart at prep-school, he has created a GCD (greatest common divisor) table! So he now has a table (of height a and width b), indexed from (1,1) to (a,b), and with the value of field (i,j) equal to gcd(i,j). He wants to know how many times he has used prime numbers when writing the table.First, t ≤ 10, the number of test cases. Each test case consists of two integers, 1 ≤ a,b < 107.For each test case write one number - the number of prime numbers Johnny wrote in that test case.",3898,4167,0,32,0.716981132075,4,1
37729,2.20234843406,INTEST,"  The purpose of this problem is to verify whether the method you are using to read input data is sufficiently fast to handle problems branded with the enormous Input/Output warning. You are expected to be able to process at least 2.5MB of input data per second at runtime.  The input begins with two positive integers n k (n, k7). The next n lines of input contain one positive integer t i , not greater than 10 9 , each.  Write a single integer to output, denoting how many integers t i are divisible by k. Example   Input: 7 3
1
51
966369
7
9
999996
11 Output: 4 ",8.07287274794,INTEST,The purpose of this problem is to verify whether the method you are using to read input data is sufficiently fast to handle problems branded with the enormous Input/Output warning. You are expected to be able to process at least 2.5MB of input data per second at runtime.,3900,5168,1,60,0.486842105263,0,1
37731,-0.249131043736,TLCS,"      Wersja polska  English version      For a given two words x = x 1 x 2 ...x n and y = y 1 y 2 ...y m find the longest common subsequence, i.e. z = z 1 z 2 ...z k such that every two consecutive elements of z are equal to some two elements of x : x a , x b , and y : y c , y d where a < b and c < d . Assume, that elements of words are letters 'a' - 'z' and m , n <= 1000.   N [the number of series <= 1000] n  x  m  y  ...   case 1 Y [or N when no answer to this case] d [the length of the lcs] z j  p q [position of z j in x and in y , respectively] ...  Text grouped in [ ] does not appear in the input and output file.  Example  Input: 3
5 ddacc
3 cac
7 cbbccbc
4 aaca
4 cbeb
5 fdceb Output: case 1 Y
2
a 3 2
c 4 3
case 2 N
case 3 Y
3
c 1 3
e 3 4
b 4 5 Score 2   ",-0.191218088285,TLCS,"For a given two words x = x1x2...xn and y = y1y2...ym find the longest common subsequence, i.e. z = z1z2...zk such that every two consecutive elements of z are equal to some two elements of x: xa, xb, and y: yc, yd where a < b and c < d. Assume, that elements of words are letters 'a' - 'z' and m,n <= 1000.t [the number of test cases <= 1000]
n x
m y
...case 1 Y [or N when no answer to this case]
d [the length of the lcs]
zj p q [position of zj in x and in y, respectively]
...",3902,5248,1,111,0.395348837209,0,1
37733,0.172710852498,SUMTRIAN,"  This is problem SUMITR without strict 
source limit. Let us consider a triangle of numbers in which a number appears in the first line, two 
numbers appear in the second line etc. Develop a program which will compute the largest 
of the sums of numbers that appear on the paths starting from the top
towards the base, so that:  on each path the next number is located on the row below, more precisely 
either directly below or below and one place to the right;  the number of rows is strictly positive, but less than 100;  all numbers are positive integers between O and 99.    In the first line integer n - the number of test cases (equal to about 1000). 
Then n test cases follow. Each test case starts with the number of lines which is followed by their content.  For each test case write the determined value in a separate line. Example   Input: 2
3
1
2 1
1 2 3
4 
1 
1 2 
4 1 2
2 3 1 1 Output: 5
9  Warning: large Input/Output data, be careful with certain languages ",-0.203901875471,RIYAPUZL," Riya is quite famous for her problem-solving skills in VESIT. When she was facing an interview for placement, a recruiter asked her this question :



Let's consider a triangle of numbers in which a number appears in the first line, two numbers appear in the second line, three in the third line, etc. Develop a program which will compute the largest of the sums of numbers that appear on the paths starting from the top towards the base, so that:on each path the next number is located on the row below, more precisely either directly below or below and one place to the right.
Remember you cannot travel to the number which is below and one place to the left. In the first line it consists of one integer N - the number of test cases (equal to about 100). Then N test cases follow. Each test case starts with R denoting the number of lines and which is followed by their R lines of content. For each test case write the determined value in a separate line. ",3907,2010,0,12,0.434782608696,8,1
37734,0.172710852498,SUMTRIAN,"  This is problem SUMITR without strict 
source limit. Let us consider a triangle of numbers in which a number appears in the first line, two 
numbers appear in the second line etc. Develop a program which will compute the largest 
of the sums of numbers that appear on the paths starting from the top
towards the base, so that:  on each path the next number is located on the row below, more precisely 
either directly below or below and one place to the right;  the number of rows is strictly positive, but less than 100;  all numbers are positive integers between O and 99.    In the first line integer n - the number of test cases (equal to about 1000). 
Then n test cases follow. Each test case starts with the number of lines which is followed by their content.  For each test case write the determined value in a separate line. Example   Input: 2
3
1
2 1
1 2 3
4 
1 
1 2 
4 1 2
2 3 1 1 Output: 5
9  Warning: large Input/Output data, be careful with certain languages ",2.07598757232,SUMTRIAN,"Let's consider a triangle of numbers in which a number appears in the first line, two numbers appear in the second line, three in the third line, etc. Develop a program which will compute the largest of the sums of numbers that appear on the paths starting from the top towards the base, so that:on each path the next number is located on the row below, more precisely either directly below or below and one place to the right;
the number of rows is strictly positive, but less than 100
all numbers are positive integers between O and 99.In the first line integer n - the number of test cases (equal to about 1000). Then n test cases follow. Each test case starts with the number of lines which is followed by their content.For each test case write the determined value in a separate line.",3907,5197,1,47,0.585185185185,0,1
37927,-0.200726487427,DESDEHAS,"  Mo and Larry have devised a way of encrypting messages. They first decide secretly on the number of columns and write the message (letters only) down the columns, padding with extra random letters so as to make a rectangular array of letters. For example, if the message is Theres no place like home on a snowy night and there are five columns, Mo would write down  (Espaol - con color azul) Mou y Larry desarrollaron un mtodo para encriptar mensajes. Primero, deciden secretamente el nmero de columnas, y escriben el mensaje (slo letras) hacia abajo por columnas, rellenando con letras al azar para completar un arreglo rectangular de letras. Por ejemplo, si el mensaje es Theres no place like home on a snowy night y hay 5 columnas, Mo escribe:  t o i o y h p k n n e l e a i r a h s g e c o n h s e m o t n l e w x  Note that Mo includes only letters and writes them all in lower case. In this example, Mo used the character x to pad the message out to make a rectangle, although he could have used any letter. Mo then sends the message to Larry by writing the letters in each row, alternating left-to-right and right-to-left. So, the above would be encrypted as  Observar que Mo incluye slo letras y las escribe a todas en minsculas. En este ejemplo, Mo us la letra 'x' para rellenar el mensaje hasta completar un rectngulo, aunque el podra haber usado cualquier letra. Mo luego enva el mensaje a Larry escribiendo las letras en cada fila, alternativamente de izquierda a derecha y de derecha a izquierda. As, el rectngulo anterior se encripta como:  toioynnkpheleaigshareconhtomesnlewx  Your job is to recover for Larry the original message (along with any extra padding letters) from the encrypted one.  Tu trabajo es recuperar para Larry el mensaje original (junto con todas las letras de relleno) a partir del mensaje encriptado.   There will be multiple input sets. Input for each set will consist of two lines. The first line will contain an integer in the range 2...20 indicating the number of columns used. The next line is a string of up to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of input.  Entrada  Hay varios casos de entrada. Cada caso consiste de dos lneas. La primer lnea contiene un entero en el rango 2..20 que indica el nmero de columnas usadas. La lnea siguiente es un string de hasta 200 letras minsculas. El ltimo caso de entrada viene seguido por una lnea que contiene nicamente un 0, indicando fin de la entrada.   Each input set should generate one line of output, giving the original plaintext message, with no spaces.  Salida  Cada caso de entrada tiene que generar una lnea de salida, con el texto original del mensaje, sin espacios.  Example - Ejemplo  Input: Entrada: 5 toioynnkpheleaigshareconhtomesnlewx 3 ttyohhieneesiaabss 0  Output: Salida:  theresnoplacelikehomeonasnowynightx thisistheeasyoneab  ",-0.209035028638,CSEA3,"Mo and Larry have devised a way of encrypting messages. They first decide secretly on the
number of columns and write the message (letters only) down the columns, padding
with extra random letters so as to make a rectangular array of letters. For example, if
the message is ""There's no place like home on a snowy night"" and there are five
columns, Mo would write down
t o i o y
h p k n n
e l e a i
r a h s g
e c o n h
s e m o t
n l e w x
Note that Mo includes only letters and writes them all in lower case. In this example, Mo
used the character 'x' to pad the message out to make a rectangle, although he could
have used any letter. Mo then sends the message to Larry by writing the letters in
each row, alternating left-to-right and right-to-left. So, the above would be encrypted
as
toioynnkpheleaigshareconhtomesnlewx
Your job is to recover for Larry the original message (along with any extra padding letters)
from the encrypted one.There will be multiple input sets. Input for each set will consist of two lines. The first line will contain an integer in the range 2...20 indicating the number of columns used. The next line is a string of up to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of input.Each input set should generate one line of output, giving the original plaintext message, (with no spaces).",3956,1642,0,289,0.428115015974,5,1
37929,-0.200726487427,DESDEHAS,"  Mo and Larry have devised a way of encrypting messages. They first decide secretly on the number of columns and write the message (letters only) down the columns, padding with extra random letters so as to make a rectangular array of letters. For example, if the message is Theres no place like home on a snowy night and there are five columns, Mo would write down  (Espaol - con color azul) Mou y Larry desarrollaron un mtodo para encriptar mensajes. Primero, deciden secretamente el nmero de columnas, y escriben el mensaje (slo letras) hacia abajo por columnas, rellenando con letras al azar para completar un arreglo rectangular de letras. Por ejemplo, si el mensaje es Theres no place like home on a snowy night y hay 5 columnas, Mo escribe:  t o i o y h p k n n e l e a i r a h s g e c o n h s e m o t n l e w x  Note that Mo includes only letters and writes them all in lower case. In this example, Mo used the character x to pad the message out to make a rectangle, although he could have used any letter. Mo then sends the message to Larry by writing the letters in each row, alternating left-to-right and right-to-left. So, the above would be encrypted as  Observar que Mo incluye slo letras y las escribe a todas en minsculas. En este ejemplo, Mo us la letra 'x' para rellenar el mensaje hasta completar un rectngulo, aunque el podra haber usado cualquier letra. Mo luego enva el mensaje a Larry escribiendo las letras en cada fila, alternativamente de izquierda a derecha y de derecha a izquierda. As, el rectngulo anterior se encripta como:  toioynnkpheleaigshareconhtomesnlewx  Your job is to recover for Larry the original message (along with any extra padding letters) from the encrypted one.  Tu trabajo es recuperar para Larry el mensaje original (junto con todas las letras de relleno) a partir del mensaje encriptado.   There will be multiple input sets. Input for each set will consist of two lines. The first line will contain an integer in the range 2...20 indicating the number of columns used. The next line is a string of up to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of input.  Entrada  Hay varios casos de entrada. Cada caso consiste de dos lneas. La primer lnea contiene un entero en el rango 2..20 que indica el nmero de columnas usadas. La lnea siguiente es un string de hasta 200 letras minsculas. El ltimo caso de entrada viene seguido por una lnea que contiene nicamente un 0, indicando fin de la entrada.   Each input set should generate one line of output, giving the original plaintext message, with no spaces.  Salida  Cada caso de entrada tiene que generar una lnea de salida, con el texto original del mensaje, sin espacios.  Example - Ejemplo  Input: Entrada: 5 toioynnkpheleaigshareconhtomesnlewx 3 ttyohhieneesiaabss 0  Output: Salida:  theresnoplacelikehomeonasnowynightx thisistheeasyoneab  ",-0.154899913282,PD33,"Mo and Larry have devised a way of encrypting messages. They first decide secretly on the number of columns and write the message (letters only) down the columns, padding with extra random letters so as to make a rectangular array of letters. For example, if the message is “There’s no place like home on a snowy night” and there are five columns, Mo would write down t o i o y h p k n n e l e a i r a h s g e c o n h s e m o t n l e w x Note that Mo includes only letters and writes them all in lower case. In this example, Mo used the character ‘x’ to pad the message out to make a rectangle, although he could have used any letter. Mo then sends the message to Larry by writing the letters in each row, alternating left-to-right and right-to-left. So, the above would be encrypted as toioynnkpheleaigshareconhtomesnlewx Your job is to recover for Larry the original message (along with any extra padding letters) from the encrypted one.There will be multiple input sets. Input for each set will consist of two lines. The first line will contain an integer in the range 2...20 indicating the number of columns used. The next line is a string of up to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of input.Each input set should generate one line of output, giving the original plaintext message, with no spaces.",3956,4376,0,270,0.498305084746,7,1
37980,-0.205006684541,TFOSS,"  A small group of archaeologists is working in the Antarctic. Their sensors have detected a number of caves in which there are interesting fossils. However, a thick layer of ice blocks the entrance to each cave. The archaeologists possess the equipment needed to burn a tunnel in the layer of ice, but the fuel is extremely expensive. In order to determine the size of each fossil the group has launched a number of probes through small bore-holes. Each probe which hit the fossil emits a signal consisting of its x and y coordinates. Your task is to determine the smallest possible size of the tunnel, which is equal to the maximal distance between any two probes (so that the fossil wont be damaged during extraction). The drilling equipment needs to be provided with the squared value of this distance. Given the list of coordinates of the points containing probes, find the square of the maximal distance between any two probes.   t [the number of tests Text grouped in [ ] does not appear in the input file.  o1 [the square of the maximal distance in the first set]
[output for the next test cases...]  Example   Input: 5

1
2 -3

4
0 0
-2 2
2 2
1 0

6
-4 2
2 2
5 0
0 5
6 1
-1 -1

10
0 0
5 1
9 2
12 3
14 4
15 5
16 7
17 10
18 14
19 19

10
2 -3
-1 2
0 5
-5 -1
-4 2
4 0
1 3
4 3
-3 -4
0 -2 Output: 0
16
101
722
98 ",-0.205217112847,TFOSS,"A small group of archaeologists is working in the Antarctic. Their sensors have detected a number of caves in which there are interesting fossils. However, a thick layer of ice blocks the entrance to each cave. The archaeologists possess the equipment needed to burn a tunnel in the layer of ice, but the fuel is extremely expensive. In order to determine the size of each fossil the group has launched a number of probes through small bore-holes.Each probe which hits a fossil emits a signal consisting of its x and y coordinates. Your task is to determine the smallest possible size of the tunnel, which is equal to the maximum distance between any two probes (so that the fossil won’t be damaged during extraction). The drilling equipment requiers the squared value of this distance.Given a list of coordinates of points containing probes, find the square of the maximum distance between any two probes.t [the number of tests <= 20]
[empty line]
n [the number of active probes <= 100000]
x1 y1 [coordinates of the first probe]
...
xn xn
[integer coordinates from -50000000 to 50000000]
[empty line]
[input for the next test cases...]o1 [the square of the maximal distance in the first set]
on [output for the next test cases...]",3970,4800,1,37,0.539772727273,0,1
38046,-0.266908638131,MMATCH,"  There is a school trip being organized for kids.
The hotel the group is staying in can offer them one big room with enough beds to suit any group of visitors, and several smaller rooms with B beds alltogether.
The children have heard many strange and frightening stories about the big room. That's why not even one of them wants to sleep in the big room.
Furthermore not every kid would like to sleep in any bed. Your goal is to assign B beds from the smaller rooms in such a way
that the maximal number of children are happy (a child is happy when it gets to sleep in one of the beds it has selected).   The first line contains a positive integer t  For each test case print the maximal number of happy children.  Example   Input: 3
3 3
1 1
2 1
2 2
3 2
3 3
0 0
4 3
1 1
1 3
2 1
3 1
3 2
4 2
0 0
4 2
1 1
1 2
2 1
2 2
3 1
3 2
4 1
4 2
0 0 Output: 3
3
2 ",-0.20542921927,MMATCH,"There is a school trip being organized for kids. The hotel the group is staying in can offer them one big room with enough beds to suit any group of visitors, and several smaller rooms with B beds alltogether. The children have heard many strange and frightening stories about the big room. That's why not even one of them wants to sleep in the big room. Furthermore not every kid would like to sleep in any bed.

Your goal is to assign B beds from the smaller rooms in such a way that the maximal number of children are happy (a child is happy when it gets to sleep in one of the beds it has selected).The first line contains a positive integer t<=1000 indicating the number of test cases. Each test case is an instance of the problem defined above. The first line of each test case is a pair of positive integers L and B (the number of children L<=100 and beds B<=100). The next lines contain a sequence of (c,b) pairs ending with two zeros. (c,b) means that the child c will be happy if it gets to sleep in bed b.For each test case print the maximal number of happy children.",3986,4808,1,33,0.531468531469,0,1
38081,3.69880052086,PALIN,"  A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of not more than 1000000 digits, write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.   The first line contains integer t , the number of test cases. Integers K are given in the next t lines.   For each K , output the smallest palindrome larger than K .  Example  Input: 2
808
2133 Output: 818
2222  Warning: large Input/Output data, be careful with certain languages ",-0.20432287289,NEURONB3,"A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of not more than 5 digits, write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.The first line contains integer t, the number of test cases. Integers K are given in the next t lines.For each K, output the smallest palindrome larger than K.",3994,3269,0,29,0.6625,7,1
38083,3.69880052086,PALIN,"  A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of not more than 1000000 digits, write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.   The first line contains integer t , the number of test cases. Integers K are given in the next t lines.   For each K , output the smallest palindrome larger than K .  Example  Input: 2
808
2133 Output: 818
2222  Warning: large Input/Output data, be careful with certain languages ",0.272234467468,PALIN,"A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of not more than 1000000 digits, write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.The first line contains integer t, the number of test cases. Followed by t lines containing integers K.For each K, output the smallest palindrome larger than K.",3994,3664,1,31,0.619047619048,0,1
38084,3.69880052086,PALIN,"  A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of not more than 1000000 digits, write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.   The first line contains integer t , the number of test cases. Integers K are given in the next t lines.   For each K , output the smallest palindrome larger than K .  Example  Input: 2
808
2133 Output: 818
2222  Warning: large Input/Output data, be careful with certain languages ",-0.138848972858,NXTPALIN,"A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of value not more than 100000 , write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.There is a single positive integer T on the first line of input. It stands for the number of numbers to follow. Then there are T lines, each containing exactly one positive integer number N, 1 <= N <= 10000For every input number N, output a single line containing the smallest integer value which is a palindrome and greater than N.",3994,4538,0,4,0.465346534653,3,1
38085,3.69880052086,PALIN,"  A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of not more than 1000000 digits, write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.   The first line contains integer t , the number of test cases. Integers K are given in the next t lines.   For each K , output the smallest palindrome larger than K .  Example  Input: 2
808
2133 Output: 818
2222  Warning: large Input/Output data, be careful with certain languages ",0.0888510599519,CMB02,"A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of not more than 5 digits, write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.The first line contains integer t, the number of test cases. Integers K are given in the next t lines.For each K, output the smallest palindrome larger than K.",3994,4862,0,29,0.6625,5,1
38123,1.38875466881,TSORT,"  Given the list of numbers, you are to sort them in non decreasing order.    t  the number of numbers in list, then t lines follow [ t Each line contains one integer: N [0 N Output Output given numbers in non decreasing order.  Example  Input:  5
5
3
6
7
1  Output:  1
3
5
6
7 ",-0.159598879979,SORT4," Given the list of numbers, you are to sort them in non decreasing order.t – the number of numbers in list, then t lines follow [t <= 10^6]. Each line contains one integer: N [0 <= N <= 10^6].Output given numbers in non decreasing order.",3996,101,0,14,0.697674418605,2,1
38129,1.38875466881,TSORT,"  Given the list of numbers, you are to sort them in non decreasing order.    t  the number of numbers in list, then t lines follow [ t Each line contains one integer: N [0 N Output Output given numbers in non decreasing order.  Example  Input:  5
5
3
6
7
1  Output:  1
3
5
6
7 ",-0.11003652131,SORT,"Given the list of numbers, you are to sort them in non decreasing order.Output given numbers in non decreasing order.",3996,4547,0,40,0.421052631579,1,1
38130,1.38875466881,TSORT,"  Given the list of numbers, you are to sort them in non decreasing order.    t  the number of numbers in list, then t lines follow [ t Each line contains one integer: N [0 N Output Output given numbers in non decreasing order.  Example  Input:  5
5
3
6
7
1  Output:  1
3
5
6
7 ",3.33950559275,TSORT,"Given the list of numbers, you are to sort them in non decreasing order.t – the number of numbers in list, then t lines follow [t <= 10^6].
Each line contains one integer: N [0 <= N <= 10^6]Output given numbers in non decreasing order.",3996,5171,1,16,0.651162790698,0,1
38394,-0.0987094431144,TFIB,"  Recall the definition of the Fibonacci numbers:   f 1 := 1  f 2 := 2  f n := f n-1 + f n-2 (n>=3)  Given two numbers a and b , calculate how many Fibonacci numbers
are in the range [ a , b ].   The input contains several test cases. Each test case consists of two
non-negative integer numbers a and b . Input is terminated
by a=b=0 . Otherwise, a100 . The
numbers a and b are given with no superfluous leading zeros.   For each test case output on a single line the number of Fibonacci numbers f i with ai.  Example   Input: 10 100
1234567890 9876543210
0 0 Output: 5
4 ",-0.207600985851,PD32,"Recall the definition of the Fibonacci numbers:

f1 := 1
f2 := 2
fn := fn-1 + fn-2 (n>=3)

Given two numbers a and b, calculate how many Fibonacci numbers are in the range [a,b].The input contains several test cases. Each test case consists of two non-negative integer numbers a and b. Input is terminated by a=b=0. Otherwise, a<=b<=10^100. The numbers a and b are given with no superfluous leading zeros.For each test case output on a single line the number of Fibonacci numbers fi with a<=fi<=b.",4073,2579,0,39,0.461538461538,4,1
38405,-0.229691252504,RATIONAL,"  Given a number N, find the number of positive irreducible rational numbers less than 1 such that when expressed as P/Q, both P, Q are less than or equal to N.   The first line contain a single integer T, the number of test cases. Following T (<= 1000) lines will contain a test case, a single number N (<= 1000000).   For each test case print the output on a single line.  Example  Input: 3 1 2 3  Output:  0 1 3  ",-0.156670606352,SNCK04,"A positive rational number is a real number which can be expressed as P/Q where P, Q are coprime positive intergers. The Chef is very hungry and can get food only if he solves the following question. ""Given a number N, find the number of positive rational numbers less than 1 such that when expressed as P/Q, both P, Q are less than or equal to N"". Please help the Chef in answering this question. The Chef promises to share the food with you.The first line contain a single integer T, the number of test cases. Following T (<= 1000) lines will contain a test case, a single number N (<= 1000000).For each test case print the output on a single line.",4074,4641,0,29,0.510638297872,8,1
38590,3.52883606875,LASTDIG2,"  Pappu was doing the work of his math class about three days but he is tired of make operations a lot and he should deliver his task tomorrow. His maths teacher gives two numbers a and b. The problem consist in find the last digit of the potency of base a and index b. Help Pappu with his problem. You are given two integer numbers: the base a (number of digits d, such that 1  The first line of input contains an integer t, the number of test cases (t  For each test case output an integer per line representing the result.  Example  Input: 3
3 10
6 2
150 53 Output: 9
6
0  Source limit is 700 Bytes. ",-0.0931942697418,CDM03," Chef was doing the work of his math class about three days but he is tired of make operations a lot and he should deliver his task tomorrow. His math’s teacher gives two numbers a and b. The problem consist in find the last digit of the potency of base a and index b. Help Chef with his problem. You are given two integer numbers: the base a and the index b . a and b both are not 0. You have to find the last digit of a^b. The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows:
For each test case will appear a and b separated by space. For each test case output an integer per line representing the result. ",4114,4373,0,14,0.603773584906,7,1
38630,-0.290787515947,ALTPERM,"   You are given K indices, A[1], A[2], ... , A[K].  A[1] < A[2] < ... < A[K].  A[1] = 1 and A[K] = N.  A permutation of the numbers between 1 and N is called valid if :  The numbers in the permutation between indices A[1] and A[2] (inclusive) form an increasing sequence, the numbers in the permutation between indices A[2] and A[3] (inclusive) form a decreasing sequence, those between A[3] and A[4] (inclusive) form an increasing sequence and so on.  Count the number of valid permutations.    There will be multiple test cases. The first line contains the number of test cases T.  There follow 2*T lines, 2 lines for each test case. The first line for each test case contains the numbers N and K. The second line contains K space seperated numbers, ie. A[1] to A[K].      Output T lines, one for each test case.  All answers should be output MOD 1000000007.  Example  Sample Input : 3
3 3
1 2 3
4 3
1 3 4
10 6
1 2 5 7 8 10 Sample Output :
2
3
6166  Constraints T <= 111
2 <= N <= 20000
2 <= K <= 22 K <= N A[1] < A[2] < ... < A[K].
A[1] = 1 and A[K] = N. ",-0.205901687401,SNCK03,"You are given K indices, A[1], A[2], ... , A[K].A[1] < A[2] < ... < A[K].A[1] = 1 and A[K] = N.A permutation of the numbers between 1 and N is called valid if :The numbers in the permutation between indices A[1] and A[2] (inclusive) form an increasing sequence, the numbers in the permutation between indices A[2] and A[3] (inclusive) form a decreasing sequence, those between A[3] and A[4] (inclusive) form an increasing sequence and so on.Count the number of valid permutations.There will be multiple test cases. The first line contains the number of test cases T. There follow 2*T lines, 2 lines for each test case. The first line for each test case contains the numbers N and K. The second line contains K space seperated numbers, ie. A[1] to A[K].Output T lines, one for each test case. All answers should be output modulo 1000000007.",4121,4749,0,77,0.672566371681,7,1
38632,-0.236361500468,PERMJUMP,"  John likes playing the game Permutation Jumping. First he writes down a permutation A of the first n numbers. Then, he chooses any cell to start on. If he is currently at cell x and hasnt visited the cell A[x], he jumps to cell A[x]. He keeps doing this till he cannot move to the cell A[x], because he has already visited it. In the end, he counts all the cells that he visited during the game, including the cell on which he started.  He does not want the game to go on for too long, and thus he wishes that irrespective of the choice of his starting cell, he does not ever have to visit more than K cells. On the other hand, he does not want the game to be too short either. Thus, irrespective of the choice of his starting cell, he should be able to visit atleast two cells.  Now he wonders how many permutations could he have chosen in the first place which would allow him to have the game duration as above. i.e. He should visit atleast 2 cells and atmost K cells, no matter which cell he started on.     The first line contains the number of test cases T (T <= 1000). The next T lines contain 2 space seperated integers N and K. (2 <= K <= N <= 100)   Output T lines, one corresponding to each test case. For each test case output a single integer which is the answer for the corresponding test case. Since the answer can be very large, output the answer modulo 1000000007.  Example  Sample Input : 2 4 2 6 4  Sample Output : 3 145  Note : For the first case, the valid permutations are {2 1 4 3}, {3 4 1 2} and {4 3 2 1}. ",-0.205616332278,RESN03,"John likes playing the game Permutation Jumping. First he writes down a permutation A of the first n numbers. Then, he chooses any cell to start on. If he is currently at cell x and hasnt visited the cell A[x], he jumps to cell A[x]. He keeps doing this till he cannot move to the cell A[x], because he has already visited it. In the end, he counts all the cells that he visited during the game, including the cell on which he started.He does not want the game to go on for too long, and thus he wishes that irrespective of the choice of his starting cell, he does not ever have to visit more than K cells. On the other hand, he does not want the game to be too short either. Thus, irrespective of the choice of his starting cell, he should be able to visit atleast two cells.Now he wonders how many permutations could he have chosen in the first place which would allow him to have the game duration as above. i.e. He should visit atleast 2 cells and atmost K cells, no matter which cell he started on.The first line contains the number of test cases T (T <= 1000). The next T lines contain 2 space seperated integers N and K. (2 <= K <= N <= 100)Output T lines, one corresponding to each test case. For each test case output a single integer which is the answer for the corresponding test case. Since the answer can be very large, output the answer modulo 1000000007.",4122,3187,0,56,0.84,7,1
38645,0.293109351939,ANDROUND,"  You are given a cyclic array A having N numbers. In an AND round, each element of the array A is replaced by the bitwise AND of itself, the previous element, and the next element in the array. All operations take place simultaneously. Can you calculate A after K such AND rounds ?   The first line contains the number of test cases T (T <= 50). There follow 2T lines, 2 per test case. The first line contains two space seperated integers N (3 <= N <= 20000) and K (1 <= K <= 1000000000). The next line contains N space seperated integers Ai (0 <= Ai <= 1000000000), which are the initial values of the elements in array A.    Output T lines, one per test case. For each test case, output a space seperated list of N integers, specifying the contents of array A after K AND rounds.  Example  Sample Input : 2 3 1 1 2 3 5 100 1 11 111 1111 11111  Sample Output : 0 0 0 1 1 1 1 1 ",-0.197557976579,RESN02,"You are given a cyclic array A having N numbers. In an XOR round, each element of the array A is replaced by the bitwise XOR (Exclusive OR) of itself, the previous element, and the next element in the array. All operations take place simultaneously. Can you calculate A after K such XOR rounds ?The first line contains the number of test cases T (T <= 50). There follow 2T lines, 2 per test case. The first line contains two space seperated integers N (3 <= N <= 500) and K (1 <= K <= 1000000000). The next line contains N space seperated integers Ai (0 <= Ai <= 1000000000), which are the initial values of the elements in array A.Output T lines, one per test case. For each test case, output a space seperated list of N integers, specifying the contents of array A after K XOR rounds.",4123,3644,0,39,0.764150943396,7,1
38649,0.293109351939,ANDROUND,"  You are given a cyclic array A having N numbers. In an AND round, each element of the array A is replaced by the bitwise AND of itself, the previous element, and the next element in the array. All operations take place simultaneously. Can you calculate A after K such AND rounds ?   The first line contains the number of test cases T (T <= 50). There follow 2T lines, 2 per test case. The first line contains two space seperated integers N (3 <= N <= 20000) and K (1 <= K <= 1000000000). The next line contains N space seperated integers Ai (0 <= Ai <= 1000000000), which are the initial values of the elements in array A.    Output T lines, one per test case. For each test case, output a space seperated list of N integers, specifying the contents of array A after K AND rounds.  Example  Sample Input : 2 3 1 1 2 3 5 100 1 11 111 1111 11111  Sample Output : 0 0 0 1 1 1 1 1 ",-0.1877902727,RESN01,"You are given a cyclic array A having N numbers. In an AND round, each element of the array A is replaced by the bitwise AND of itself, the previous element, and the next element in the array. All operations take place simultaneously. Can you calculate A after K such AND rounds ?The first line contains the number of test cases T (T <= 50). There follow 2T lines, 2 per test case. The first line contains two space seperated integers N (3 <= N <= 20000) and K (1 <= K <= 1000000000). The next line contains N space seperated integers Ai (0 <= Ai <= 1000000000), which are the initial values of the elements in array A.Output T lines, one per test case. For each test case, output a space seperated list of N integers, specifying the contents of array A after K AND rounds.",4123,4046,0,41,0.813725490196,7,1
38659,-0.105936503675,XORROUND,"  You are given a cyclic array A having N numbers. In an XOR round, each element of the array A is replaced by the bitwise XOR (Exclusive OR) of itself, the previous element, and the next element in the array. All operations take place simultaneously. Can you calculate A after K such XOR rounds ?    The first line contains the number of test cases T (T <= 50). There follow 2T lines, 2 per test case. The first line contains two space seperated integers N (3 <= N <= 500) and K (1 <= K <= 1000000000). The next line contains N space seperated integers Ai (0 <= Ai <= 1000000000), which are the initial values of the elements in array A.    Output T lines, one per test case. For each test case, output a space seperated list of N integers, specifying the contents of array A after K XOR rounds.  Example  Sample Input : 2 3 1 1 2 3 5 100 1 11 111 1111 11111  Sample Output : 0 0 0 11117 101 1075 12127 12081 ",-0.197557976579,RESN02,"You are given a cyclic array A having N numbers. In an XOR round, each element of the array A is replaced by the bitwise XOR (Exclusive OR) of itself, the previous element, and the next element in the array. All operations take place simultaneously. Can you calculate A after K such XOR rounds ?The first line contains the number of test cases T (T <= 50). There follow 2T lines, 2 per test case. The first line contains two space seperated integers N (3 <= N <= 500) and K (1 <= K <= 1000000000). The next line contains N space seperated integers Ai (0 <= Ai <= 1000000000), which are the initial values of the elements in array A.Output T lines, one per test case. For each test case, output a space seperated list of N integers, specifying the contents of array A after K XOR rounds.",4124,3644,0,42,0.779816513761,7,1
38663,-0.105936503675,XORROUND,"  You are given a cyclic array A having N numbers. In an XOR round, each element of the array A is replaced by the bitwise XOR (Exclusive OR) of itself, the previous element, and the next element in the array. All operations take place simultaneously. Can you calculate A after K such XOR rounds ?    The first line contains the number of test cases T (T <= 50). There follow 2T lines, 2 per test case. The first line contains two space seperated integers N (3 <= N <= 500) and K (1 <= K <= 1000000000). The next line contains N space seperated integers Ai (0 <= Ai <= 1000000000), which are the initial values of the elements in array A.    Output T lines, one per test case. For each test case, output a space seperated list of N integers, specifying the contents of array A after K XOR rounds.  Example  Sample Input : 2 3 1 1 2 3 5 100 1 11 111 1111 11111  Sample Output : 0 0 0 11117 101 1075 12127 12081 ",-0.1877902727,RESN01,"You are given a cyclic array A having N numbers. In an AND round, each element of the array A is replaced by the bitwise AND of itself, the previous element, and the next element in the array. All operations take place simultaneously. Can you calculate A after K such AND rounds ?The first line contains the number of test cases T (T <= 50). There follow 2T lines, 2 per test case. The first line contains two space seperated integers N (3 <= N <= 20000) and K (1 <= K <= 1000000000). The next line contains N space seperated integers Ai (0 <= Ai <= 1000000000), which are the initial values of the elements in array A.Output T lines, one per test case. For each test case, output a space seperated list of N integers, specifying the contents of array A after K AND rounds.",4124,4046,0,44,0.72972972973,7,1
38671,-0.298630369818,GRID,"  Your task in this problem is very straightforward. You are given a point in the cartesian plane (m,n) where m>0 and n>0. You start at (0,0) and are allowed to make unit moves along the positive x-axis or the positive y-axis. In other word if you are at a point (x,y) you can move to either (x+1,y) or (x,y+1). Your task is to find out the total number of ways you can reach (m,n) from (0,0) modulus K.   First line contains 'T', the number of testcases. The next 'T' lines contain three space separated integers m,n,K 1<=m,n<=1,000 K<=1,000,000   A single integer denoting the total number of paths mod K.  Example   Input: 1
4 4 100 Output: 70 ",-0.201135963145,TECH05,"Your task in this problem is very straightforward. You are given a point in the cartesian plane (m,n) where m>0 and n>0. You start at (0,0) and are allowed to make unit moves along the positive x-axis or the positive y-axis. In other word if you are at a point (x,y) you can move to either (x+1,y) or (x,y+1). Your task is to find out the total number of ways you can reach (m,n) from (0,0) modulus K.First line contains 'T', the number of testcases(T <= 50). The next 'T' lines contain three space separated integers m,n,K 1<=m,n<=1,000 K<=1,000,000A single integer denoting the total number of paths mod K.",4127,3529,0,17,0.813186813187,6,1
38675,0.210437270194,ANAG,"  In this problem, you are given two strings S1 and S2, your task is to determine whether one string is an anagram of the other. An anagram of a string is a string obtained by permuting the letters of a string. For example aaba and aaab are anagrams, while abcd and deba are not.   The first line would consist of the number of test cases 'T'. This would be followed by 'T' lines consisting of two space separated strings. The strings would consist of only letters 'a'-'z'. Each string would consist of no more than 20 characters.   You have to print ""YES"" if one string is an anagram of the other or ""NO"" otherwise.  Example   Input: 2
aaba aaab
abcd deba Output: YES
NO ",-0.196558856352,COCRMR03," In this problem, you are given two strings S1 and S2, your task is to determine whether one string is an anagram of the other. An anagram of a string is a string obtained by permuting the letters of a string. For example aaba and aaab are anagrams, while abcd and deba are not. The first line would consist of the number of test cases 'T'. This would be followed by 'T' lines consisting of two space separated strings. The strings would consist of only letters 'a'-'z'. Each string would consist of no more than 20 characters.You have to print ""YES"" if one string is an anagram of the other or ""NO"" otherwise.",4128,263,0,17,0.89156626506,8,1
38680,0.210437270194,ANAG,"  In this problem, you are given two strings S1 and S2, your task is to determine whether one string is an anagram of the other. An anagram of a string is a string obtained by permuting the letters of a string. For example aaba and aaab are anagrams, while abcd and deba are not.   The first line would consist of the number of test cases 'T'. This would be followed by 'T' lines consisting of two space separated strings. The strings would consist of only letters 'a'-'z'. Each string would consist of no more than 20 characters.   You have to print ""YES"" if one string is an anagram of the other or ""NO"" otherwise.  Example   Input: 2
aaba aaab
abcd deba Output: YES
NO ",0.170613806043,TECH04,"In this problem, you are given two strings S1 and S2, your task is to determine whether one string is an anagram of the other. An anagram of a string is a string obtained by permuting the letters of a string. For example aaba and aaab are anagrams, while abcd and deba are not.The first line would consist of the number of test cases 'T'. This would be followed by 'T' lines consisting of two space separated strings. The strings would consist of only letters 'a'-'z'. Each string would consist of no more than 20 characters.You have to print ""YES"" if one string is an anagram of the other or ""NO"" otherwise.",4128,4863,0,19,0.857142857143,6,1
38687,-0.32372525348,RNUM,"  In this problem your task is to reduce a given number 'N' to a non-positive number in as little moves as possible.    The moves allowed are : Given an integer 'N' you can subtract one of its factors (excluding 'N' itself) from 'N' and continue the same process with the resulting number until you reach a non-positive number     First line contains the number of test cases 'T'. 'T' lines follow containing a single integer 'N' 2<=N<100,000.     A single integer denoting the minimum number of moves necessary.  Example   Input: 1
10 Output: 5   ",-0.208541337037,TECH02,"In this problem your task is to reduce a given number 'N' to a non-positive number in as little moves as possible. The moves allowed are : Given an integer 'N' you can subtract one of its factors (excluding 'N' itself) from 'N' and continue the same process with the resulting number until you reach a non-positive number. Note that there is a special case when N=1, you can subtract '1' to reach 0.First line contains the number of test cases 'T'. 'T' lines follow containing a single integer 'N' 2<=N<100,000.A single integer denoting the minimum number of moves necessary.",4129,2271,0,10,0.74025974026,6,1
38695,-0.297913373141,SQRE,"  You are given a square with 'n' points on each side of the square. None of these points co-incide with the corners of this square. You have to compute the total number of triangles that can be formed using these '4n' points (n points on each side of the square) as vertices of the triangle.   First line contains the integer 'T', the number of test cases. This is followed by 'T' lines with a single integer 'n' on each line n <= 100.   The total number of triangles that can be formed.  Example   Input: 1
1 Output: 4 ",-0.113714192788,TECH07,"You are given a square with 'n' points on each side of the square. None of these points co-incide with the corners of this square. You have to compute the total number of triangles that can be formed using these '4n' points (n points on each side of the square) as vertices of the triangle.First line contains the integer 'T', the number of test cases. This is followed by 'T' lines with a single integer 'n' on each line n <= 100.The total number of triangles that can be formed.",4130,4694,0,17,0.809523809524,6,1
38707,-0.233950330958,SIMEQN,"  Given N,A,B,C, find how many solutions exist to the equation : a + b + c <= N, such that 0 <= a <= A, 0 <= b <= B, 0 <= c <= C.  Input :  The first line contains the number of test cases T. Each test case contains 4 integers, N,A,B,C. 0 <= N,A,B,C <= 2500  Output :  Output T lines, one for each test case.    Example  Sample Input : 2 4 3 2 1 1 1 1 1 Sample Output : 20 4 ",-0.195678481295,TECH08,"Given N,A,B,C, find how many solutions exist to the equation:a + b + c <= N,such that 0 <= a <= A, 0 <= b <= B, 0 <= c <= C.The first line contains the number of test cases T. Each test case contains 4 integers, N,A,B,C. 0 <= N,A,B,C <= 2500Output T lines, one for each test case.",4132,3718,0,38,0.655172413793,6,1
38710,-0.233950330958,SIMEQN,"  Given N,A,B,C, find how many solutions exist to the equation : a + b + c <= N, such that 0 <= a <= A, 0 <= b <= B, 0 <= c <= C.  Input :  The first line contains the number of test cases T. Each test case contains 4 integers, N,A,B,C. 0 <= N,A,B,C <= 2500  Output :  Output T lines, one for each test case.    Example  Sample Input : 2 4 3 2 1 1 1 1 1 Sample Output : 20 4 ",0.124186445869,EQUATION,"Given N,A,B,C, find how many solutions exist to the equation : a + b + c ≤ N, such that 0 ≤ a ≤ A, 0 ≤ b ≤ B, 0 ≤ c ≤ C.The first line contains the number of test cases T. Each test case contains 4 integers, N,A,B,C. 0 ≤ N,A,B,C ≤ 2500Output T lines, one for each test case.",4132,3955,0,35,0.719298245614,7,1
38739,-0.272012446441,DECSTRNG,"  You need to find a string which has exactly K positions in it such that the character at that position comes alphabetically later than the character immediately after it. If there are many such strings, print the one which has the shortest length. If there is still a tie, print the string which comes the lexicographically earliest (would occur earlier in a dictionary).  Input :  The first line contains the number of test cases T. Each test case contains an integer K (<= 100)  Output :  Output T lines, one for each test case, containing the required string.  Example  Sample Input : 2 1 2 Sample Output : ba cba ",0.673906204069,DECSTR,"You need to find a string which has exactly K positions in it such that the character at that position comes alphabetically later than the character immediately after it. If there are many such strings, print the one which has the shortest length. If there is still a tie, print the string which comes the lexicographically earliest (would occur earlier in a dictionary).The first line contains the number of test cases T. Each test case contains an integer K (≤ 100).Output T lines, one for each test case, containing the required string. Use only lower-case letters a-z.",4134,3774,0,22,0.741176470588,2,1
38786,-0.263213691305,FINDMAX,"  One way of finding the maximum element in an array is to initialize a variable to the first element in the array, iterate through the remaining array, and update the variable whenever a value strictly greater than it is found. Assuming that the array contains N elements each in the range 1..K, how many such arrays exist such that the above algorithm performs exactly P updates? Initialization of the variable is not counted as an update.  For example,the possible arrays for N = 4, K = 3 and P = 2 are: 1) {1,1,2,3} 2) {1,2,1,3} 3) {1,2,2,3} 4) {1,2,3,1} 5) {1,2,3,2} 6) {1,2,3,3}   The first line contains T the number of test cases. There follow T lines, containing 3 space seperated integers N, K and P.   Output T lines, one for each test case. On each line, output the answer as asked above. Since the answers can get very big, output the answer modulo 1000000007.  Example  Sample Input: 3
4 3 2
2 3 1
3 4 1 Sample Output: 6
3
30  Constraints  1 
1 
1 
0",-0.208053569744,SNON01,"One way of finding the maximum element in an array is to initialize a variable to the first element in the array, iterate through the remaining array, and update the variable whenever a value strictly greater than it is found. Assuming that the array contains N elements each in the range 1..K, how many such arrays exist such that the above algorithm performs exactly P updates? Initialization of the variable is not counted as an update.For example,the possible arrays for N = 4,K = 3 and P = 2 are1) {1,1,2,3}2) {1,2,1,3}3) {1,2,2,3}4) {1,2,3,1}5) {1,2,3,2}6) {1,2,3,3}The first line contains T the number of test cases. There follow T lines, containing 3 space seperated integers N,K and P.Output T lines, one for each test case. On each line, output the answer as asked above. Since the answers can get very big, output the answer modulo 1000000007.",4140,2603,0,40,0.651515151515,6,1
38787,0.167457479958,FINDPRM,"  One commonly used method to calculate all primes in the range [2..n] is to start with the number 2, mark it as prime, and mark all its multiples (excluding itself) as not prime. Then, we find the next smallest unmarked number, mark it as prime, and mark all its multiples (excluding itself) as not prime. Continuing this way, we get a list of all primes. Now, let us say that we modified the above algorithm, and start with n instead of 2. We mark it as prime, and mark all its factors (excluding itself) as not prime. Then we find the next greatest unmarked number, mark it as prime, and mark all its factors (excluding itself) as not prime. Continuing this way, we get a list of all primes. Now you wonder, given a value of n, how many numbers are such that both the above algorithms will mark them as prime?   The first line contains T the number of test cases. Each of the next T lines contain an integer n.   Output T lines, one for each test case, containing the required answer.  Example  Sample Input : 3 2 4 7 Sample Output : 1 1 2  Constraints  1 <= T <= 100000 2 <= n <= 10000000 ",-0.207804266594,SNON08,"One commonly used method to calculate all primes in the range [2..n] is to start with the number 2, mark it as prime, and mark all its multiples (excluding itself) as not prime. Then, we find the next smallest unmarked number, mark it as prime, and mark all its multiples (excluding itself) as not prime. Continuing this way, we get a list of all primes.Now, let us say that we modified the above algorithm, and start with n instead of 2. We mark it as prime, and mark all its factors (excluding itself) as not prime. Then we find the next greatest unmarked number, mark it as prime, and mark all its factors (excluding itself) as not prime. Continuing this way, we get a list of all primes.Now you wonder, given a value of n, how many numbers are such that both the above algorithms will mark them as prime?The first line contains T the number of test cases. Each of the next T lines contain an integer n.Output T lines, one for each test case, containing the required answer.",4141,2697,0,40,0.780701754386,6,1
38793,0.452651098386,LCMSUM,"  Given n, calculate the sum LCM(1,n) + LCM(2,n) + .. + LCM(n,n), where LCM(i,n) denotes the Least Common Multiple of the integers i and n.   The first line contains T the number of test cases. 
Each of the next T lines contain an integer n.   Output T lines, one for each test case, containing the required sum.  Example  Sample Input: 3
1
2
5 Sample Output: 1
4
55  Constraints  1 
1",-0.201919451711,SNON02,"Given n, calculate the sum LCM(1,n) + LCM(2,n) + .. + LCM(n,n), where LCM(i,n) denotes the Least Common Multiple of the integers i and n.The first line contains T the number of test cases. Each of the next T lines contain an integer n.Output T lines, one for each test case, containing the required sum.",4142,3496,0,22,0.701754385965,6,1
38799,0.287008340208,MAXSUMSQ,"  Given an array A having n elements, let X be the maximum sum of any contiguous sequence in the array. How many contiguous sequences in A sum up to X ?   The first line contains T the number of test cases. There follow 2T lines, 2 for each test case. The first line contains the n, the number of elements in the array. The second line contains n space seperated integers Ai.   Output T lines, one for each test case. On each line, output two space seperated integers; the maximum sequence sum, and the number of sequences which obtain this maximum sum.  Example  Sample Input : 2 3 -1 -1 -1 4 2 0 -2 2 Sample Output : -1 3 2 4  Constraints  1 <= T <= 35 1 <= n <= 100000 -1000 <= Ai <= 1000 ",-0.204373098916,SNON03,"Given an array A having n elements, let X be the maximum sum of any contiguous sequence in the array. How many contiguous sequences in A sum up to X ?The first line contains T the number of test cases. There follow 2T lines, 2 for each test case. The first line contains the n, the number of elements in the array. The second line contains n space seperated integers Ai.Output T lines, one for each test case. On each line, output two space seperated integers; the maximum sequence sum, and the number of sequences which obtain this maximum sum.",4143,200,0,50,0.716049382716,8,1
38810,-0.241608114151,SELTEAM,"  There are n players out of which atmost k players are chosen to form the team squad. Out of those players, some subset of them are selected to form a team, and a player of the selected team is appointed as the captain of the team. Given n and k, determine how many possible configurations exist. Two configurations differ if either the players in the team squad differ, or if the number of players in the team differ, or the players in the team differ, or if the captain differs. For example,the possible configurations for n = 2 and k = 2 are : 1) Team squad : {1}, Team : {1}, Captain : 1 2) Team squad : {2}, Team : {2}, Captain : 2 3) Team squad : {1,2}, Team : {1}, Captain : 1 4) Team squad : {1,2}, Team : {2}, Captain : 2 5) Team squad : {1,2}, Team : {1,2}, Captain : 1 6) Team squad : {1,2}, Team : {1,2}, Captain : 2   The first line contains T the number of test cases. Each of the next T lines contain 2 integers : n,k   Output T lines, one for each test case, containing the required total number of configurations. Since the answers can get very big, output the answer modulo 8388608.  Example  Sample Input : 3 2 2 7 1 5 3 Sample Output : 6 7 165  Constraints  1 <= T <= 10000 1 <= k <= n <= 100000 ",-0.208544299201,SNON04,"There are n players out of which atmost k players are chosen to form the team squad. Out of those players, some subset of them are selected to form a team, and a player of the selected team is appointed as the captain of the team. Given n and k, determine how many possible configurations exist. Two configurations differ if either the players in the team squad differ, or if the number of players in the team differ, or the players in the team differ, or if the captain differs.For example,the possible configurations for n = 2 and k = 2 are :1) Team squad : {1}, Team : {1}, Captain : 12) Team squad : {2}, Team : {2}, Captain : 23) Team squad : {1,2}, Team : {1}, Captain : 14) Team squad : {1,2}, Team : {2}, Captain : 25) Team squad : {1,2}, Team : {1,2}, Captain : 16) Team squad : {1,2}, Team : {1,2}, Captain : 2",4144,2273,0,96,0.487394957983,6,1
38824,-0.307857351314,TRKNIGHT,"  Your task is simple. A knight is placed on the top left corner of a chessboard having 2n rows and 2n columns. In how many ways can it move such that it ends up at a corner after atmost K moves ?   The first line contains T the number of test cases. Each of the next T lines contain 2 integers : n,k   Output T lines, one for each test case, containing the required total number of configurations. Since the answers can get very big, output the answer modulo 1000007.  Example  Sample Input : 3 2 1 2 2 3 3 Sample Output : 1 5 7  Constraints  1 <= T <= 20 2 <= n <= 12 1 <= k <= 1000000000 ",-0.208544299201,SNON05,Your task is simple. A knight is placed on the top left corner of a chessboard having 2n rows and 2n columns. In how many ways can it move such that it ends up at a corner after atmost K moves ?,4145,2272,0,92,0.425287356322,7,1
38830,1.81683003671,TRGRID,"  Starting at the top left corner of an N*M grid and facing towards the right, you keep walking one square at a time in the direction you are facing. If you reach the boundary of the grid or if the next square you are about to visit has already been visited, you turn right. You stop when all the squares in the grid have been visited. What direction will you be facing when you stop ? For example : Consider the case with N = 3,M = 3. The path followed will be (0,0) -> (0,1) -> (0,2) -> (1,2) -> (2,2) -> (2,1) -> (2,0) -> (1,0) -> (1,1). At this point, all squares have been visited, and you are facing right.   The first line contains T the number of test cases. Each of the next T lines contain two integers N and M, denoting the number of rows and columns respectively.   Output T lines, one for each test case, containing the required direction you will be facing at the end. Output L for left, R for right, U for up, and D for down.  Eample  Sample Input: 4
1 1
2 2
3 1
3 3 Sample Output: R
L
D
R  Constraints  1 1",-0.200201898651,SNON07,"Starting at the top left corner of an N*M grid and facing towards the right, you keep walking one square at a time in the direction you are facing. If you reach the boundary of the grid or if the next square you are about to visit has already been visited, you turn right. You stop when all the squares in the grid have been visited. What direction will you be facing when you stop ?For example : Consider the case with N = 3,M = 3. The path followed will be (0,0) -> (0,1) -> (0,2) -> (1,2) -> (2,2) -> (2,1) -> (2,0) -> (1,0) -> (1,1). At this point, all squares have been visited, and you are facing right.The first line contains T the number of test cases. Each of the next T lines contain two integers N and M, denoting the number of rows and columns respectively.Output T lines, one for each test case, containing the required direction you will be facing at the end. Output L for left, R for right, U for up, and D for down.",4146,3573,0,27,0.848,6,1
38834,0.102814676889,WEIRDFN,"  Let us define : F[1] = 1 F[i] = (a*M[i] + b*i + c)%1000000007 for i > 1 where M[i] is the median of the array {F[1],F[2],..,F[i-1]}. The median of an array is the middle element of that array when it is sorted. If there are an even number of elements in the array, we choose the first of the middle two elements to be the median. Given a,b,c and n, calculate the sum F[1] + F[2] + .. + F[n].   The first line contains T the number of test cases. Each of the next T lines contain 4 integers : a,b,c and n.   Output T lines, one for each test case, containing the required sum.  Example  Sample Input : 2 1 0 0 3 3 1 2 6 Sample Output : 3 103  Constraints  1 <= T <= 100 0 <= a,b,c < 1000000007 1 <= n <= 200000 ",-0.207317475578,SNON06,"Let us define :F[1] = 1F[i] = (a*M[i] + b*i + c)%1000000007 for i > 1 where M[i] is the median of the array {F[1],F[2],..,F[i-1]}. The median of an array is the middle element of that array when it is sorted. If there are an even number of elements in the array, we choose the first of the middle two elements to be the median.Given a,b,c and n, calculate the sum F[1] + F[2] + .. + F[n].",4147,2849,0,83,0.542553191489,7,1
38842,0.00555024915694,FRQPRIME,"  A range [L..H] is called a K-Frequent Prime range if there are atleast K primes amongst the numbers L,L+1,..,H. Given N and K, calculate how many subranges of the range [2..N] are K-Frequent Prime.   The first line contains the number of test cases T. Each of the next T lines contains 2 integers N and K.   Output T lines, one corresponding to each test case, containing the required answer.  Example  Sample Input : 4 2 1 5 2 5 1 9 3 Sample Output : 1 4 9 8 Note : For the first test case, the only valid subrange is [2..2], whereas for the second test case, the valid subranges are : [2..3],[2..4],[2..5],[3..5].  Constraints  1 <= T <= 100  2 <= N <= 100000  0 <= K <= 10000 ",-0.203081982412,TECH12,"A range [L..H] is called a K-Frequent Prime range if there are atleast K primes amongst the numbers L,L+1,..,H.Given N and K, calculate how many subranges of the range [2..N] are K-Frequent Prime.The first line contains the number of test cases T (<= 100). Each of the next T lines contains 2 integers N and K. (2 <= N <= 100000, 0 <= K <= 10000)Output T lines, one corresponding to each test case, containing the required answer.",4148,171,0,65,0.568181818182,8,1
38853,0.481785706424,YAPP,"  How many permutations of the first N numbers exist such that the maximum element between the indices [i..j] is either present at index i, or at index j ?   The first line contains the number of test cases T. Each of the next T lines contains an integer N   Output T lines containing the required answer for the corresponding test case. Since the answers can get really big, output the result modulo 1000000007.  Example  Sample Input: 1
2 Sample Output: 2  Constraints  1 1",-0.209035028638,IBT,"The first line contains the number of test cases T. Each of the next T lines contains two space separated numbers N and K.The first line contains the number of test cases T. Each of the next T lines contains two space separated numbers N and K.Output one line corresponding to each test case, containing the answer for the corresponding test case. Output all answers modulo 1000000007.",4149,624,0,26,0.333333333333,4,1
38857,0.481785706424,YAPP,"  How many permutations of the first N numbers exist such that the maximum element between the indices [i..j] is either present at index i, or at index j ?   The first line contains the number of test cases T. Each of the next T lines contains an integer N   Output T lines containing the required answer for the corresponding test case. Since the answers can get really big, output the result modulo 1000000007.  Example  Sample Input: 1
2 Sample Output: 2  Constraints  1 1",-0.207298723483,TECH14,"How many permutations of the first N numbers exist such that the maximum element between the indices [i..j] is either present at index i, or at index j ?The first line contains the number of test cases T (<=10000). Each of the next T lines contains an integer N (<= 1000000000)Output T lines containing the required answer for the corresponding test case. Since the answers can get really big, output the result modulo 1000000007.",4149,2847,0,19,0.75,6,1
38868,0.115783267254,MATGAME,"  Two players A and B play the following game.  1) First, a matrix M of size N*M is chosen, and filled with non-zero numbers. 2) Player A starts the game and the players play alternately. 3) In his turn, a player chooses any row which has atleast one non zero nuumber in it. In this row, the leftmost non zero number is chosen. Let this number be K. The player subtracts any number between 1 and K inclusive from it. 4) The game ends when all the numbers in the matrix M are 0. 5) The player who plays last wins the game.   Given N,M and the initial matrix, determine who wins the game. Assume that both players play optimally.     The first line contains the number of test cases T. Each test case consists of 2 numbers N and M. There follow N lines each having M integers. The jth number on the ith line is the number M[i][j]. There is a blank line between consecutive test cases.    Output T lines, one for each case. Output ""FIRST"" if player A wins, else output ""SECOND"".  Example  Sample Input : 3 2 2 1 1 1 1  1 3 2 1 1  2 2 3 2 3 2  Sample Output:  SECOND FIRST SECOND  Constraints  T <= 1000 1 <= N,M <= 50 The initial matrix values are between 1 and 50 inclusive. ",-0.186378561235,SNCK01,"Two players A and B play the following game.1) First, a matrix M of size N*M is chosen, and filled with non-zero numbers.2) Player A starts the game and the players play alternately.3) In his turn, a player chooses any row which has atleast one non zero number in it. In this row, the leftmost non zero number is chosen. Let this number be K. The player subtracts any number between 1 and K inclusive from it.4) The game ends when all the numbers in the matrix M are 0.5) The player who plays last wins the game.Given N,M and the initial matrix, determine who wins the game.Assume that both players play optimally.The first line contains the number of test cases T.Each test case consists of 2 numbers N and M. There follow N lines each having M integers. The jth number on the ith line is the number M[i][j].There is a blank line between consecutive test cases.Output T lines, one for each case. Output ""FIRST"" if player A wins, else output ""SECOND"".",4151,3987,0,78,0.699300699301,7,1
38895,0.107648743061,QCJ2,"  There are N numbered boxes placed on a table, let Bi denote the ith box in the line. Write a program that finds the total number of ways to place N identical balls such that atmost k balls are present in the boxes B1, .... ,Bk for 1<=k<=N. Since the number can be quite large you are supposed to output the answer modulo 761238923.   Input will contain multiple testcases, on each line N (1<=N<=100) will be given. The last line contains 0 which should not be processed.   For each testcase output exactly one line, the total number possible of ways modulo 761238923.  Example  Input: 1 2 0 Output:  1 2 ",-0.208041649204,QCJ1,"There are N numbered boxes placed on a table, let Bi denote the ith box in the line. Write a program that finds the total number of ways to place N identical balls such that atmost k balls are present in the boxes B1, .... ,Bk for 1<=k<=n. Since the number can be quite large you are supposed to output the answer modulo 761238923.Input will contain multiple testcases, on each line N (1<=N<=100) will be given. The last line contains 0 which should not be processed.For each testcase output exactly one line, the total number possible of ways modulo 761238923.",4156,2602,0,20,0.83950617284,1,1
38898,0.0635748264908,QCJ3,"  Tom and Hanks play the following game. On a game board having a line of squares labelled from 0,1,2 ... certain number of coins are placed with possibly more than one coin on a single square. In each turn a player can move exactly one coin to any square to the left i.e, if a player wishes to remove a coin from square i, he can then place it in any square which belongs to the set (0,1, ... i-1) . The game ends when all coins are on square 0 and player that makes the last move wins. Given the description of the squares and also assuming that Tom always makes the first move you have tell who wins the game (Assuming Both play Optimally).   The first line will contain N the number of test cases and then 2N lines follow. For each test case the first line will have S the size of the board and in the next line S integers follow. The i th integer gives the the number of coins in the i th square (starting from 1) . Atleast one of the S integers will be non zero. All the numbers in the input will be less than 25.   For each test case output one line containing either ""Tom Wins"" or ""Hanks Wins"".  Example  Input: 2 1 1 1 2 Output:  Tom Wins Hanks Wins ",-0.20580392919,QCJ6,"Tom and Hanks play the following game. On a game board having a line of squares labelled from 0,1,2 ... certain number of coins are placed with possibly more than one coin on a single square. In each turn a player can move exactly one coin to any square to the left i.e, if a player wishes to remove a coin from square i, he can then place it in any square which belongs to the set (0,1, ... i-1) . Given the description of the board and also assuming that Tom always makes the first move you have tell who wins the game (Assuming Both play Optimally).The first line will contain N the number of test cases and then 2N lines follow. For each test case the first line will have S the size of the board and in the next line S integers follow. The ith integer gives the the number of coins in the ith square. Atleast one of the S integers will be non zero. All the numbers in the input will be less than 25.For each test case output one line containing either ""Tom Wins"" or ""Hanks Wins"".",4157,3158,0,48,0.830769230769,1,1
38905,-0.122836164904,QCJ4,"  Given n points in a plane find the diameter of the smallest circle that encloses all the points. A point lying on the circle is also considered to be inside it   First line of input contains the n (<301) the number of points in the plane , followed by n lines of input Each line gives the coordinates of one point on the plane. Each coordinate is an integer in the range [0,1000]   Output consists of a single real number, the diameter of the circle rounded to two decimal places.  Example  Input: 4 1 1 1 0 0 1 0 0  Output:  1.41 ",-0.208040844191,QCJ3,"There are n chocolate chips in a dough which is in the form of a plane. Given the locations of the chocolate chips on the dough your task is find out the diameter of the smallest cookie that contains all the chips. You can assume that the cookie is perfectly circular in shape and also the chips have negligible dimensions.First line of input contains the n (<=100) the number of chocolate chips in the dough, followed by n lines of input. Each line gives the coordinates of one chocolate chip on the plane. Each coordinate is an integer in the range [0,1000].Output consists of a single real number, the diameter of the cookie rounded to two decimal places.",4158,2601,0,4,0.423913043478,1,1
38908,-0.238875394089,SOCOLA,"  Chocolate in its many forms is enjoyed by millions of people around the world every day. It is a truly universal candy, available in virtually every country around the world. You find that the only thing better than eating chocolate is to share it with friends. Unfortunately, your friends are very picky and have different appetites: some would like more and others less of the chocolate that you offer them. You have found it increasingly difficult to determine whether their demands can be met. It is time to write a program that solves the problem once and for all! Your chocolate comes as a rectangular bar. The bar consists of same-sized rectangular pieces. To share the chocolate, you may break one bar into two pieces along a division between rows or columns of the bar. You may then repeatedly break the resulting pieces in the same manner. Each of your friends insists on a getting a single rectangular portion of the chocolate that has a specified number of pieces. You are a little bit insistent as well: you will break up your bar only if all of it can be distributed to your friends, with none left over. For example, Figure 9 shows one way that a chocolate bar consisting of 3 x 4 pieces can be split into 4 parts that contain 6, 3, 2, and 1 pieces respectively, by breaking it 3 times. (This corresponds to the first sample input.)  Figure 9  The input consists of multiple test cases, each describing a chocolate bar to share. Each description starts with a line containing a single integer n (1 
The input is terminated by a line containing the integer zero.  For each test case, first display its case number. Then display whether it is possible to break the chocolate in the desired way: display ""Yes"" if it is possible, and ""No"" otherwise. Follow the format of the sample output. Sample Input  4 
3 4
6 3 2 1
2
2 3
1 5
0  Sample Output  Case 1: Yes
Case 2: No ",-0.197816287679,NOPC6,"Chocolate in its many forms is enjoyed by millions of people around the world every day. It is a truly universal candy, available in virtually every country around the world. You find that the only thing better than eating chocolate is to share it with friends. Unfortunately, your friends are very picky and have different appetites: some would like more and others less of the chocolate that you offer them. You have found it increasingly difficult to determine whether their demands can be met. It is time to write a program that solves the problem once and for all! Your chocolate comes as a rectangular bar. The bar consists of same-sized rectangular pieces. To share chocolate, you may break one bar into two pieces along a division between rows or columns of the bar. You may then repeatedly break the resulting pieces in the same manner. Each of your friends insists on a getting a single rectangular portion of the chocolate that has a specified number of pieces. You are a little bit insistent as well: you will break up your bar only if all of it can be distributed to your friends, with none left over. For example, Figure shows one way that a chocolate bar consisting of 3 × 4 pieces can be split into 4 parts that contain 6, 3, 2, and 11 pieces respectively, by breaking it 3 times. (This corresponds to the first sample input.) _ _ _ _
|_|_|_|_|
|_|_|_|_|
|_|_|_|_|

   |
   |
   v
 
 _ _ _      _
|_|_|_|     |_|
|_|_|_|     |_|
                           _ 
 _ _ _                 |_|
|_|_||_|The input consists of multiple test cases, each describing a chocolate bar to share. Each description starts with a line containing a single integer n (1 ≤n ≤15), the number of parts into which the bar is supposed to be split. This is followed by a line containing two integers x and y(1 ≤x ,y ≤≤100), the dimensions of the chocolate bar. The next line contains n positive integers, giving the number of pieces that are supposed to be in each of the n parts. The input is terminated by a line containing the integer zero.For each test case, first display its case number. Then display whether it is possible to break the chocolate in the desired way: display “Yes” if it is possible, and “No”” otherwise. Follow the format of the sample output.",4161,139,0,108,0.771551724138,5,1
38930,-0.250190917908,SSEQ,"  Now that the two tribes met, a joint force was formed. Colonel Prateek was ordered to lead the force. He needs to instruct his men on how to stand. The n men in the force have been given ranks from 1(lowest) to n(highest) and on parade they should be lined up from left to right in increasing order of rank. He soon discovered that his elite commandos preferred to do the fighting, and leave the thinking to their superiors. So,  when at the first roll call the soldiers lined up in fairly random order it was not because of their lack of discipline, but simply because they couldnt work out how to form a line in correct order of ranks. Colonel Prateek was not at all amused, particularly as he soon found that none of the soldiers even remembered his own rank. Over the years of service every soldier had only learned which of the other soldiers were his superiors. But Colonel Prateek was not a man to give up easily when faced with a true military challenge. After a moments thought a solution of brilliant simplicity struck him and he issued the following order: ""men, starting from the left, one by one, do: (step forward; go left until there is no superior to the left of you; get back in line)."". This did indeed get the men sorted in a few minutes. The problem was solved... for the time being.  The next day, the soldiers came in exactly the same order as the day before, and had to be rearranged using the same method. History repeated. After some weeks, Colonel Prateek managed to force each of his soldiers to remember how many men he passed when going left, and thus make the sorting process even faster.  If you know how many positions each man has to walk to the left, can you try to find out what order of ranks the soldiers initially line up in?   The first line of input contains an integer t<=50, the number of test cases. It is followed by t test cases, each consisting of 2 lines. The first line contains a single integer n (1<=n<=200000). The second line contains n space separated integers w i , denoting how far the i th soldier in line must walk to the left when applying Colonel Prateeks algorithm.   For each test case, output a single line consisting of n space separated integers - the ranks of the soldiers, given from left to right in their initial arrangement.  Example  Input:  2 3 0 1 0 5 0 1 2 0 1  Output:  2 1 3 3 2 1 5 4 ",-0.108920792345,ORDERS,"In Byteland it is always the military officer's main worry to order his soldiers on parade correctly. Luckily, ordering soldiers is not really such a problem. If a platoon consists of n men, all of them have different rank (from 1 - lowest to n - highest) and on parade they should be lined up from left to right in increasing order of rank.Sounds simple, doesn't it? Well, Sgt Johnny thought the same, until one day he was faced with a new command. He soon discovered that his elite commandos preferred to do the fighting, and leave the thinking to their superiors. So, when at the first rollcall the soldiers lined up in fairly random order it was not because of their lack of discipline, but simply because they couldn't work out how to form a line in correct order of ranks. Sgt Johnny was not at all amused, particularly as he soon found that none of the soldiers even remembered his own rank. Over the years of service every soldier had only learned which of the other soldiers were his superiors. But Sgt Johnny was not a man to give up easily when faced with a true military challenge. After a moment's thought a solution of brilliant simplicity struck him and he issued the following order: ""men, starting from the left, one by one, do: (step forward; go left until there is no superior to the left of you; get back in line)."". This did indeed get the men sorted in a few minutes. The problem was solved... for the time being.The next day, the soldiers came in exactly the same order as the day before, and had to be rearranged using the same method. History repeated. After some weeks, Sgt Johnny managed to force each of his soldiers to remember how many men he passed when going left, and thus make the sorting process even faster.If you know how many positions each man has to walk to the left, can you try to find out what order of ranks the soldiers initially line up in?The first line of input contains an integer t<=50, the number of test cases. It is followed by t test cases, each consisting of 2 lines. The first line contains a single integer n (1<=n<=200000). The second line contains n space separated integers wi, denoting how far the i-th soldier in line must walk to the left when applying Sgt Johnny's algorithm.For each test case, output a single line consisting of n space separated integers - the ranks of the soldiers, given from left to right in their initial arrangement.",4165,73,0,22,0.712230215827,5,1
40620,-0.182983657824,XMEDIAN,"  Given an array x of n elements find the medians of its first k elements for each k from 1 to n inclusive. The median of an array is the middle element of that array when it is sorted. If there are an even number of elements in the array, we choose the first of the middle two elements to be the median.  The first line of input contains number n (1 Output Output n integers - the medians of the first k elements of the array for each k from 1 to n inclusive. Example   Input: 5
1
2
3
4
5 Output: 1
1
2
2
3 ",-0.207317475578,SNON06,"Let us define :F[1] = 1F[i] = (a*M[i] + b*i + c)%1000000007 for i > 1 where M[i] is the median of the array {F[1],F[2],..,F[i-1]}. The median of an array is the middle element of that array when it is sorted. If there are an even number of elements in the array, we choose the first of the middle two elements to be the median.Given a,b,c and n, calculate the sum F[1] + F[2] + .. + F[n].",4216,2849,0,28,0.371794871795,7,1
40622,-0.260354607411,TSPAGAIN,"  There are N cities numbered from 0..N-1. A salesman is located at city 0. He wishes to visit all cities exactly once and return back to city 0. There are K toll booths. Each toll booth has a certain range of functioning. The parameters for toll k are given as x_k and y_k. If the salesman travels from city i to j, he has to pay 1 dollar toll fee to each toll p having x_p >= i and y_p <= j. Calculate the cheapest way for the salesman to complete his tour.  Input :  The first line contains T the number of test cases. T test cases follow. The first line of each test case contains two space seperated integers N and K. Each of the next K lines contains 2 integers, the ith line containing x_i and y_i (0 <= x_i,y_i < N). A blank line seperates two test cases. Output : Output T lines, one for each test case, containing the required answer. Sample Input : 2 3 2 2 0 0 2 3 4 1 0 2 1 0 1 1 2 Sample Output : 3 6 Constraints :  1 <= T <= 50 2 <= n <= 1000 1 <= K <= 10000 ",-0.209035028638,BRIDGE,"There are N islands numbered from 0 to N-1 which are connected by a single bridge. Peter and Pan are located at island 0. They want to visit all islands exactly once and return back to island 0. There are K toll booths. Each toll booth has a certain range of functioning. The arguments for toll k are given as x_k and y_k. If the salesman travels from city i to j, he has to pay 1 dollar toll fee to each toll p having x_p >= i and y_p <= j. Calculate the cheapest way for the salesman to complete his tour.The first line contains T the number of test cases.

The first line of each test case contains two space seperated integers N and K.

Each of the next K lines contains 2 integers, the ith line containing x_i and y_i (0 <= x_i,y_i < N).

A blank line seperates two test cases.Output is a single line for each test case.",4217,1502,0,54,0.634328358209,7,1
40623,-0.260354607411,TSPAGAIN,"  There are N cities numbered from 0..N-1. A salesman is located at city 0. He wishes to visit all cities exactly once and return back to city 0. There are K toll booths. Each toll booth has a certain range of functioning. The parameters for toll k are given as x_k and y_k. If the salesman travels from city i to j, he has to pay 1 dollar toll fee to each toll p having x_p >= i and y_p <= j. Calculate the cheapest way for the salesman to complete his tour.  Input :  The first line contains T the number of test cases. T test cases follow. The first line of each test case contains two space seperated integers N and K. Each of the next K lines contains 2 integers, the ith line containing x_i and y_i (0 <= x_i,y_i < N). A blank line seperates two test cases. Output : Output T lines, one for each test case, containing the required answer. Sample Input : 2 3 2 2 0 0 2 3 4 1 0 2 1 0 1 1 2 Sample Output : 3 6 Constraints :  1 <= T <= 50 2 <= n <= 1000 1 <= K <= 10000 ",-0.200917089126,TSPAGAIN,"There are N cities numbered from 0..N-1. A salesman is located at city 0. He wishes to visit all cities exactly once and return back to city 0. There are K toll booths. Each toll booth has a certain range of functioning. The parameters for toll k are given as x_k and y_k. If the salesman travels from city i to j, he has to pay 1 dollar toll fee to each toll p having x_p >= i and y_p <= j. Calculate the cheapest way for the salesman to complete his tour.",4217,4353,1,121,0.582608695652,0,1
40725,0.13259639368,QUEST4,"  To reach the treasure, Jones has to pass through the ""Room of Death"" . The floor of this room is a square with side 120 units. It is laid with square tiles of dimensions {1 X 1} arranged into a grid. But, at some places in the grid tiles are missing. As soon as the door to this room is opened poisonous gas starts coming out of these missing grid locations. The only escape from this gas is to completely cover these locations with planks lying outside the room. Each plank has dimensions {120 X 1} and can only be placed parallel to either sides of the floor. Now Jones wants to minimize the damage to his health so that he has enough of it left for the treasure. He figures out that in order to achieve this he has to use the minimum number of planks possible. He also realises that even if the planks overlap, poisonous gas from the missing tiles can still be successfully blocked. Please help Jones in this task.           The first line of the input is a positive integer t , denoting the number of rooms. The descriptions for the t rooms follow one after the other.  Room Description:   The first line of the room description is a positive integer n (n  , denoting the number of missing tile locations. This is followed by the n lines, one for each missing tile location. Each line contains two integers x y (0 , separated by a single space, representing the co-ordinates of the missing tile location.    The output should consist of t lines, one for each room. The k th line in the output should be an integer m k , the minimum number of planks needed for the k th room.  Example    Input:  2 3 1 0 2 0 3 0 4 1 1 2 2 3 3 4 4   Output:  1 4 ",-0.17566953304,ABACUS04," To attain inner peace Geek Sundaram has to pass through the ""Hall of Valley of Death"". The floor of this hall is a square with length 100 m. It is laid with square tiles of size 1 X 1 arranged over the entire hall. But, at some places in the hall tiles are broken. The moment a person enters the hall, the underworld awakens and dead souls emerge from these broken tiles. The only way to escape from these evil souls is to completely cover the broken locations with magic planks from the room of requirements. Each plank has size 100 X 1 and can only be placed parallel to either sides of the floor. Now Geek Sundaram has to save himself from these evil souls. He figures out that he has to use the minimum number of planks possible. Please help Geek Sundaram to attain inner peace.The first line of the input is a positive integer t <= 30, denoting the number of halls.
The descriptions for the t halls follow one after the other.
Hall Description:
The first line of the hall description is a positive integer n (n <= 10000), denoting the number of broken tile locations.
This is followed by the n lines, one for each broken tile location.
Each line contains two integers x y (0 <= x, y < 100), separated by a single space, representing the co-ordinates of the broken tile location.The output should consist of t lines, one for each hall. The kth line in the output should be an integer mk, the minimum number of planks needed for the kth hall. ",4229,254,0,79,0.437209302326,6,1
40974,-0.268145185761,MBR,"  Multiplication of natural numbers in general is a cumbersome operation. In some cases however the product can be obtained by moving the last digit to the front. Example: 179487 * 4 = 717948 Of course this property depends on the numbersystem you use, in the above example we used the decimal representation. In base 9 we have a shorter example: 17 * 4 = 71 (base 9) as (9 * 1 + 7) * 4 = 7 * 9 + 1  The input for your program is a textfile. Each line consists of three numbers separated by a space: the base (<=36) of the number system, the least significant digit of the first factor, and the second factor. This second factor is one digit only hence less than the base. The input file ends with the standard end-of-file marker.  All Numbers in input are greater than 1 and will fit in the standard ""int"" data type. For base > 10 you can assume the digits to be 'A' ... 'Z'.  Note: Numbers in Input may or may not be expressed using the above digits (refer example)  Your program determines for each input line the number of digits of the smallest first factor with the rotamultproperty. The output-file is also a textfile. Each line contains the answer for the corresponding input line.  Example  Input 10 7 4 9 7 4 17 14 12 17 E C  Output:  6 2 4 4  The Last two inputs are actually the same. ",-0.207784188912,CS08,"Multiplication of natural numbers in general is a cumbersome operation. In some cases however the product can be obtained by moving the last digit to the front. Example: 179487 * 4 = 717948 Of course this property depends on the numbersystem you use, in the above example we used the decimal representation. In base 9 we have a shorter example: 17 * 4 = 71 (base 9) as (9 + 7) * 4 = 7 * 9 +1Input description... The input for your program is a textfile. Each line consists of three numbers separated by a space: the base of the number system, the least significant digit of the first factor, and the second factor. This second factor is one digit only hence less than the base. The input file ends with the standard end-of-file marker.Output description... Your program determines for each input line the number of digits of the smallest first factor with the rotamultproperty. The output-file is also a textfile. Each line contains the answer for the corresponding input line.",4262,2694,0,88,0.701986754967,4,1
41006,-0.199551348353,CHEFMAY,"  There are n points with integer coordinates. We can form different quadrangles out of them by taking four different points and connecting them with lines. Lets call a quadrangle ABCD nice if and only if:   Ax > 0 and Ay > 0;  Bx > 0 and By Cx Dx  0;  ABCD has an integer area.   Your task is to count all different nice quadrangles that can be formed on the given points.   The first line of input file contains number t  the number of test cases. Then the description of each test case follows. The first line of each test case contains number n  the number of points. Then n lines follow each consisting of two integers x, y  the coordinates of a point. No two points in the same test case coincide. Constraints  1 
1 
-30000 Output For each test case print the number of nice quadrangles that can be formed using given points. Example   Input: 1
6
1 1
2 2
-1 -1
-2 2
2 -1
-3 -4 Output: 2 ",-0.180641071071,NICEQUAD,"There are n points with integer coordinates. We can form different quadrangles out of them by taking four different points and connecting them with lines. Let’s call a quadrangle ABCD nice if and only if:Ax > 0 and Ay > 0;
Bx > 0 and By < 0;
Cx < 0 and Cy < 0;
Dx < 0 and Dy > 0;
ABCD has an integer area.Your task is to count all different nice quadrangles that can be formed on the given points.The first line of input file contains number t – the number of test cases. Then the description of each test case follows. The first line of each test case contains number n – the number of points. Then n lines follow each consisting of two integers x, y – the coordinates of a point. No two points in the same test case coincide.For each test case print the number of nice quadrangles that can be formed using given points.",4269,4199,0,26,0.646551724138,6,1
42689,-0.239596587839,BYTEFOOD,"  Fanatics from the BBFO blew up all the food factories in the Bytelandian capital! Hurry up! There is still some food left in shops. Some shops are located in the centre, others in the suburbs, so Johnny has to decide which of them are worth visiting. Some shops can be very big and have plenty of food in them, others may be so small that food dissappears from them at an alarming rate... So? Help Johnny buy as much food as possible. There are n open shops, each of them located at position ( x i , y i ), for i =1,..., n , where 0 x i , y i  f i = max {0, a i - b i * time } where 0 a i b i time is the time (in minutes) that has elapsed from the moment Johnny left the house (assume that Johnny does not live in the same place as any shop). If Johnny decides to stay in a shop, he can buy at most b i units of food per minute. Otherwise, he can move along the ortogonal system of streets of the city at a constant speed of unit distance per minute. Johnny only ever changes the action he is performing at the full minute. Because his family is slowly beginning to starve, he should be back at home not later than m minutes after he left. 
Since there are thousands of starving families in the capital, Johnny can't spent more that 1 c i   The first line of input contains a single positive integer t n m n lines consist of four integers x i y i a i b i c i each, describing the position and the parameters of the function for food availability of the i -th shop. At the end of every test case comes a line with two integers p q (between 0 and 250), corresponding to the x and y coordinates of the position of Johnny's house. All the input data are integers.   Process all test cases. The correct output for the i -th test case takes the following form: i [the number of the test case, in the input order] s m [ s is the number of the target shop and m > 0 is the number of minutes spent in it]. At the end of the series of moves you should always write a line conisting of two zeros ('0 0'). All the output data should be integers.  Scoring  The score of your program is the total amount of food that Johnny bought (summed over all the testcases in which he managed to come back home before the deadline).  Example    Input 4
2 20
0 0 100 5 5
10 0 200 10 10
5 0
2 20
0 0 180 15 10
10 0 200 20 10
5 0
4 101
0 0 1000 20 5
20 0 200 1 5
0 20 5000 200 5
20 20 300 5 10
10 10
1 15
1 0 10 1 5
5 0 Output 1
2 10
0 0
2
1 10
0 0
3
3 5
4 10
2 1
0 0
4
1 5
0 0 Score Score = 1261 ",-0.205853432138,BYTEFOOD,"Fanatics from the BBFO blew up all the food factories in the Bytelandian capital! Hurry up! There is still some food left in shops. Some shops are located in the centre, others in the suburbs, so Johnny has to decide which of them are worth visiting. Some shops can be very big and have plenty of food in them, others may be so small that food dissappears from them at an alarming rate... So? Help Johnny buy as much food as possible.

There are n open shops, each of them located at position (xi,yi), for i=1,...,n, where 0 <= xi,yi <= 250. The distances between shops are measured using the Manhattan metric (i.e. as sums of absolute values of differences of x and y coordinates). Besides, every shop is characterized by a linear time function describing how much food is left in the shop at the moment:fi = max{0, ai - bi * time}where 0 <= ai <= 1000000, 0 <= bi <= 1000, while time is the time (in minutes) that has elapsed from the moment Johnny left the house (assume that Johnny does not live in the same place as any shop). If Johnny decides to stay in a shop, he can buy at most bi units of food per minute. Otherwise, he can move along the ortogonal system of streets of the city at a constant speed of unit distance per minute. Johnny only ever changes the action he is performing at the full minute. Because his family is slowly beginning to starve, he should be back at home not later than m minutes after he left. Since there are thousands of starving families in the capital, Johnny can't spent more that 1 <= ci <= 10 minutes in a shop. Moreover, he will never go into the same shop twice for fear of being lynched...The first line of input contains a single positive integer t <= 1000, the number of test cases. Each test case begins with the number of shops in the city 1 <= n <= 1000 and the deadline 1 <= m <= 5000. Then the following n lines consist of four integers xi yi ai bi ci each, describing the position and the parameters of the function for food availability of the i-th shop. At the end of every test case comes a line with two integersp q (between 0 and 250), corresponding to the x and y coordinates of the position of Johnny's house.

All the input data are integers.Process all test cases. The correct output for the i-th test case takes the following form:
i [the number of the test case, in the input order]
s m [s is the number of the target shop and m > 0 is the number of minutes spent in it].
At the end of the series of moves you should always write a line conisting of two zeros ('0 0').

All the output data should be integers.",4381,5349,1,38,0.594427244582,0,1
43007,-0.269268075581,CHEFJUN,"  There is a very large field, colored white and divided into squares. There is a coordinate system attached to the field: y-axis goes from south to north and x-axis goes from west to east. Sides of the squares are parallel to the axes. There is a robot in the (0, 0) square. Robot starts to move in spiral as depicted. First it moves one step east and one step north. Then two steps west and two steps south. Then three steps east and three steps north, four steps west and four steps south and so on. It moves to a new square with each step. As it moves it counts squares it passes and, if the number of the square is the prime number, then the robot fills this square with black color. The (0, 0) square has the number 0. Given the coordinates of a square you are to calculate the distance from this square to the nearest to it black square. For two squares with coordinates (x1, y1) and (x2, y2) the distance between those squares is |x1-x2|+|y1-y2|.    Input file consists of a set of tests. The first line of the file is number T  the number of tests (T Output For each coordinate pair in the input file you are to output the distance between this square and the nearest to it black square. Example   Input: 8
0 0
1 0
1 1
0 1
3 3
-3 -3
-1 2
0 -3 Output: 1
1
0
0
1
1
2
2 ",-0.180095634351,PRIMPATT,"There is a very large field, colored white and divided into squares. There is a coordinate system attached to the field: y-axis goes from south to north and x-axis goes from west to east. Sides of the squares are parallel to the axes. There is a robot in the (0, 0) square. Robot starts to move in spiral as depicted. First it moves one step east and one step north. Then two steps west and two steps south. Then three steps east and three steps north, four steps west and four steps south and so on. It moves to a new square with each step. As it moves it counts squares it passes and, if the number of the square is the prime number, then the robot fills this square with black color. The (0, 0) square has the number 0. Given the coordinates of a square you are to calculate the distance from this square to the nearest to it black square. For two squares with coordinates (x1, y1) and (x2, y2) the distance between those squares is |x1-x2|+|y1-y2|.Input file consists of a set of tests. The first line of the file is number T – the number of tests (T <= 500). Following T lines contains two integers each separated with a space: x and y – the coordinates of the square (-2000001 < x < 2000001, -2000001 < y < 2000001).For each coordinate pair in the input file you are to output the distance between this square and the nearest to it black square.",4423,4201,0,8,0.762589928058,8,1
43010,-0.293916116672,CHEFJUL,"  Johnny has a pool in his garden. There are several islands in the pool. Some islands are connected by bridges. Any bridge can be removed. Every day Johnny removes some bridges so that there is only one way from any island to any other. In the evening he returns removed bridges to their places. Also he has some favorite bridges which he never removes. Johnny will be happy if he is able to make a configuration of bridges on the given day which he has never made before. You have to count the amount of days he will be happy. Of course, if the favorite bridges themselves don't satisfy the happiness condition Johnny will not be happy for even single day.  The first line of input file contains number t the number of test cases. Then the description of each test case follows. The first line of each test case contains number n the number of islands. Islands are numbered with integers from 1 to n. Then n lines follow each containing n characters defining the connectivity matrix of those islands. Character in column x of line y will be 1 if the islands with numbers x and y are connected and 0 otherwise. The next line is number p the number of favorite bridges. The next p lines contain the pairs of islands that are conected by favorite bridges. Constraints  1 
2 
1 Output For each test case print the number of days Johnny will be happy in this situation. Example   Input: 1
4
0111
1011
1101
1110
2
1 2
3 4 Output: 4 ",-0.205159216898,HAPPY,"Johnny has a pool in his garden. There are several islands in the pool. Some islands are connected by bridges. Any bridge can be removed. Every day Johnny removes some bridges so that there is only one way from any island to any other. In the evening he returns removed bridges to their places. Also he has some favorite bridges which he never removes. Johnny will be happy if he is able to make a configuration of bridges on the given day which he has never made before. You have to count the amount of days he will be happy. Of course, if the favorite bridges themselves don't satisfy the happiness condition Johnny will not be happy for even single day.The first line of input file contains number t – the number of test cases. Then the description of each test case follows. The first line of each test case contains number n – the number of islands. Islands are numbered with integers from 1 to n. Then n lines follow each containing n characters defining the connectivity matrix of those islands. Character in column x of line y will be ‘1’ if the islands with numbers x and y are connected and ‘0’ otherwise. The next line is number p – the number of favorite bridges. The next p lines contain the pairs of islands that are connected by favorite bridges.For each test case print the number of days Johnny will be happy in this situation.",4424,4957,0,18,0.861111111111,6,1
43046,-0.301001529819,ITERBIT,"  Let f(x) be the number of 1's in the binary representation of x. We can define f^k(x) as f(x) for k = 1, and f^(k-1)(f(x)) for k > 1. Let f^*(x) be the smallest k >= 1 such that f^k(x) = 1. Given N and K, how many numbers x between 1 and N inclusive have f^*(x) = K ? Input : The first line contains the number of test cases T. Each of the next T lines contains two space seperated numbers N and K. Output : Output one line corresponding to each test case, containing the answer for the corresponding test case. Output all answers modulo 1000000007. Sample Input : 6 1 1 2 1 3 1 3 2 13 3 20 2 Sample Output : 1 2 2 1 3 10 Constraints : 1 <= T <= 1000 1 <= N <= 10^500 1 <= K <= 10 ",-0.209035028638,IBT,"The first line contains the number of test cases T. Each of the next T lines contains two space separated numbers N and K.The first line contains the number of test cases T. Each of the next T lines contains two space separated numbers N and K.Output one line corresponding to each test case, containing the answer for the corresponding test case. Output all answers modulo 1000000007.",4432,624,0,87,0.379310344828,4,1
43058,-0.270706655044,TREESUM,"  Let Lx denote the level of a node x in a rooted tree. Lx is 1 if x is the root, otherwise Lx = 1 + Ly, where y is the parent of x in the rooted tree.  You need to calculate the sum Lx ^ K for all nodes x in the tree.   The first line contains the number of test cases T. T test cases follow. The first line of each test case contains N and K, where N is the number of nodes in the tree. The following N - 1 lines contain two integers ai and bi, indicating an edge between nodes ai and bi in the tree. There is a blank line after each test case.  Output N lines for each test case. The i-th line should contain the required sum if the tree is rooted at node i. Output all values modulo 1000000007. Output a blank line after each test case.  Example  Sample Input: 2
3 2
0 1
1 2

3 3
0 1
0 2 Sample Output: 14
9
14

17
36
36  Constraints  1 1 1 0",-0.207932761252,TRSUM,"Let Lx denote the level of a node x in a rooted tree. Lx is 1 if x is the root, otherwise Lx = 1 + Ly, where y is the parent of x in the rooted tree. You need to calculate the sum Lx^K for all nodes x in the tree.The first line contains the number of test cases T. T test cases follow. The first line of each test case contains N and K, where N is the number of nodes in the tree. The following N - 1 lines contain two integers ai and bi, indicating an edge between nodes ai and bi in the tree. There is a blank line after each test case.Output N lines for each test case. The ith line should contain the required sum if the tree is rooted at node i. Output all values modulo 1000000007. Output a blank line after each test case.",4433,2598,0,32,0.765957446809,2,1
43102,3.6253969338,DIVSUM,"  Given a natural number n (1 <= n <= 500000), please output the summation of all its proper divisors.  Definition: A proper divisor of a natural number is the divisor that is strictly less than the number.  e.g. number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.     An integer stating the number of test cases (equal to about 200000), and that many lines follow, each containing one integer between 1 and 500000 inclusive.   One integer each line: the divisor summation of the integer given respectively.  Example  Sample Input:
3
2
10
20

Sample Output:
1
8
22  Warning: large Input/Output data, be careful with certain languages ",-0.115219105713,DS15,"An integer stating the number of test cases T and that many lines follow, each containing natural number n for which output will be summation of all its proper divisors.One integer each line: the divisor summation of the integer given respectively.",4441,4546,0,89,0.313953488372,4,1
43103,3.6253969338,DIVSUM,"  Given a natural number n (1 <= n <= 500000), please output the summation of all its proper divisors.  Definition: A proper divisor of a natural number is the divisor that is strictly less than the number.  e.g. number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.     An integer stating the number of test cases (equal to about 200000), and that many lines follow, each containing one integer between 1 and 500000 inclusive.   One integer each line: the divisor summation of the integer given respectively.  Example  Sample Input:
3
2
10
20

Sample Output:
1
8
22  Warning: large Input/Output data, be careful with certain languages ",-0.0520073430479,PD13,"Given a natural number n (1 <= n <= 500000), please output the summation of all its proper divisors. Definition: A proper divisor of a natural number is the divisor that is strictly less than the number. e.g. number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.An integer stating the number of test cases (equal to about 200000), and that many lines follow, each containing one integer between 1 and 500000 inclusive.One integer each line: the divisor summation of the integer given respectively.",4441,4768,0,29,0.759036144578,6,1
43245,0.209644341018,FLIB,"  G(n) is defined as  G(n) = G(n-1) + f(4n-1)   , for n > 0  and    G(0) = 0  f(i) is ith Fibonacci number. Given n you need to evaluate G(n) modulo 1000000007.   First line contains number of test cases t (t  For each test case print G(n) modulo 1000000007.  Example  Input: 2
2
4  Output: 15
714 ",-0.201043590039,AVISKR02,"Flibonakki series G(n) is defined asG(n) = G(n-1) + f(4n-1) , for n > 0and G(0) = 0f(i) is our good old Fibonacci series. Given n you need to evaluate G(n).First line contains number of test cases t (t<40000). Each of the next t lines contain an integer n ( 0 < n < 2^51 ).For each test case print the nth flibonakki number modulo 1000000007.",4466,3495,0,5,0.449275362319,7,1
43262,-0.21895617406,LGLOVE,"  Bob fell in love with LCM and GCD. So much that he started seeing LCMs and GCDs everywhere.  Betty, his girl friend was jealous and she gave Bob an array A[ ] of integers, which had nothing to do with LCMs or GCDs.  Quickly, naughty Bob evaluated a new array B[ ] containing n integers, such that B[i] is LCM(1,2,3,...,A[i]), A[i]>0. When A[i] is 0, B[i] is also 0.  Angry Betty decided to give m queries to Bob, each being one of the following type:  -   ""0 i j p"", meaning add 'p' to each element in A[i..j]. -300000<= p <= 300000 , 0<=i<=j<n  -   ""1 i j""    , meaning print the LCM of all elements in B[i..j]. 0<=i<=j<n  -   ""2 i j""    , meaning print the GCD of all elements in B[i..j].0<=i<=j<n   First line contains n(n <= 100000 ) and m( m <= 35000 ).  Second line contains n integers in the original array A[ ] .  Next m lines contain one of the above said queries.  It is guaranteed that A[i] after any number of updates will satisfy 0<=A[i]<=300000.   Output one line for each query of type 1 or 2, modulo 1000000007.  Example  Input: 5 5 4 1 3 6 2 1 2 4 2 1 3 0 0 3 2 1 1 2 2 2 4  Output:  60 1 60 2  ",-0.206279360161,AVISKR01,"Bob fell in love with LCM and GCD. So much that he started seeing LCMs and GCDs everywhere.Betty, his girl friend was jealous and she gave Bob an array A[ ] of integers, which had nothing to do with LCMs or GCDs.Quickly, naughty Bob evaluated a new array B[ ] containing n integers, such that B[i] is LCM(1,2,3,...,A[i]), if A[i]>0. When A[i] is 0, B[i] is also 0.Angry Betty decided to give m queries to Bob, each being one of the following type:- ""0 i j p"", meaning add 'p' to each element in A[i..j]. ( -300000<= p <= 300000)- ""1 i j"" , meaning print the LCM of all elements in B[i..j]. 0<=i- ""2 i j"" , meaning print the GCD of all elements in B[i..j].0<=iFirst line contains n(n <= 100000 ) and m( m <= 35000 ).Second line contains n integers in the original array A[ ] .Next m lines contain one of the above said queries.Output one line for each query of type 1 or 2, modulo 1000000007.",4467,277,0,86,0.673202614379,8,1
43264,-0.26550828993,SBACT,"      Given an nxn grid of cells, a bacteria colony can colonize these cells. Their growth after every second is governed by the following rules:  1) One new bacteria is born in cell (i ,j) if and only if either one of its four neighboring cells or the cell(i,j) itself has a bacteria population more than or equal to the threshold value, k.  2) Already living bacterias do not die.  Given, the initial state of the nxn cell grid, you need to accurately estimate the time by when the total bacteria population reaches m.   First line contains t, number of test cases.  Each test case starts with n (side length of grid) , k (growth threshold) and m (final population).  Next n lines contain an nxn grid of integers, where ith row,jth column has an integer representing the number of bacteria's present initially at cell(i,j).  1<  n <= 100 , 0<  k <= 2^45 , 0< m <= 2^45,  There are no more than n cells with initial population equal to or greater than k.   For each test case print the number of seconds required for the total bacteria population to reach m. If m can never be reached print ""Not possible"" (quotes for clarity).  Example  Input: 1 3 5 15 0 0 0 0 3 0 0 0 5  Output:  3  ",-0.207932761252,AVISKR04,"Given an nxn grid of cells, a bacteria colony can colonize these cells. Their growth after every second is governed by the following rules:1) One new bacteria is born in cell (i ,j) if and only if either one of its four neighboring cells or the cell(i,j) itself has a bacteria population more than or equal to the threshold value, k.2) Already living bacterias do not die.Given, the initial state of the nxn cell grid, you need to accurately estimate the time by when the total bacteria population reaches m.First line contains t, number of test cases.Each test case starts with n (side length of grid ) , k (growth threshold) and m (final population).Next n lines contain an nxn grid of integers, where ith row,jth column tells the number of bacteria's present initially at cell(i,j).1< n <= 100 , 0< k <= 2^45 , 0< m <= 2^45,There are no more than n cells with initial population equal to or greater than k.For each test case print the number of seconds required for the total bacteria population to reach m. If m can never be reached print ""Not possible"" (quotes for clarity).",4468,2597,0,53,0.748387096774,7,1
43703,-0.294957471313,BPORT,"  N ports are to be constructed on the bytelandian river. Since trade occurs only along a Y miles stretch of the river, the distance between the start point and the last port must be Y. (Consider start point has the 0th port.)  To optimize the ship movement between important ports, the distance between any two consecutive ports has been fixed to be within a range of possible distances. Also, distance between two consecutive ports can only be an integer number of miles.  As a programmer you have been assigned the job of evaluating the number of different possible arrangements of ports modulo 1000000007.     First line of input contains t. The number of test cases. (t<100)  First line of each test case contains two integers: N, the number of ports to be built (N<=20) and Y, the ditance between the start point and the last port. (Y<100000)  Next N lines of the test case contains the range of distances between consecutive ports, with ith line giving two integers, the minimum and maximum gap between (i-1)th and ith port.     Print one of output for each test case which is the number of possible arrangements modulo 1000000007.    Example  Input:  1  2 4  0 3  0 3  Output:  3 ",-0.208208328082,AVISKR03,"N ports are to be constructed on the bytelandian river. Since trade occurs only along a Y miles stretch of the river, the distance between the first and the last port must be Y.To optimize the ship movement between important ports, the distance between any two consecutive ports has been fixed to be within a range of possible distances. Also, distance between two consecutive ports can only be an integer number of miles.As a programmer you have been assigned the job of evaluating the number of different possible arrangements of ports modulo 1000000007.First line of input contains t. The number of test cases. (t<100)First line of each test case contains two integers: N, the number of ports (N<=20) and Y, the ditance between the first and the last port. (Y<100000)Next (N-1) lines of the test case contains the range of distances between consecutive ports, with ith line giving two integers, the minimum and maximum gap between (i-1)th and ith port.Print one of output for each test case which is the number of possible arrangements modulo 1000000007.",4505,422,0,54,0.731092436975,7,1
43707,-0.214075557446,SHOPPERS,"  A group of N shoppers go to a supermarket. The supermarket has M items. Each shopper wants to buy only the items he likes. They plan to buy K items in all. A shopper can buy at max only one item. Some shoppers may not buy anything and some items might not be bought. First line contains the number of test cases. Each test case contains three integers N , M and K separated by spaces. Then follow N lines containing M characters each. If jth character of ith line is 1 then ith shopper likes item j. 1<= K <= N, M <=13 For each test case, output the number of ways K items in all can be bought. Example Input: 1 4 4 2 1111 0100 0100 1100 Output: 14  ",-0.207381627548,AVISKR05,"A group of N shoppers go to a supermarket. The supermarket has M items. Each shopper wants to buy only the items he likes. They plan to buy K items in all. A shopper can buy at max only one item. Some shoppers may not buy anything and some items might not be bought.First line contains the number of test cases.Each test case contains three integers N , M and K separated by spaces. Then follow N lines containing M characters each. If jth character of ith line is 1 then ith shopper likes item j.1<= K <= N, M <=13For each test case, output the number of ways K items in all can be bought.",4506,2765,0,20,0.789473684211,8,1
43712,-0.283614159558,RANJAN05,"   There are x villages in Andhere Nagar. Each village has its index  an integer number from 1 to x . The capital has index a .  All the roads in Andhere Nagar are two-way. The road system is such that  there is exactly one path from the capital to each city, i.e. the road  map looks like a tree. In Andhere Nagar's chronicles the road map is kept in  the following way: for each village i , different from the capital, there is kept number p i  index of the last village on the way from the capital to i .  Once the king of Andhere Nagar, Choupat Raja, decided to move the capital from village a to village b .  Naturally, after this the old representation of the road map in Andhere Nagar 's chronicles became incorrect. Please, help the king find out a  new representation of the road map in the way described above.    The first line contains three space-separated integers x , a , b ( 2 x 5 10 4 ,1ab n )  amount of villages in Andhere Nagar, index of the old capital and index of the new one, correspondingly.  The following line contains x -1 space-separated integers  the old representation of the road map. For each city, apart from a , there is given integer p i  index of the last city on the way from the capital to city i . All the cities are described in order of increasing indexes.   Output x -1 numbers  new representation of the road map in the same format.  Example 1  Input: 3 2 3 2 2  Output: 2 3  Example 2  Input: 6 2 4 6 1 2 4 2  Output: 6 4 1 4 2 ",-0.205374429629,FMAP," FreeKart Company is connected to n cities numbered from 1 to n. Currently the Headquarter of company is situated at index hq1. Each pair of connected cities are connected both ways. The connection is such that there is exactly one connection from the Headquarter to each city. The map of the connected cities is kept in the following way: for each city i, different from the Headquarter, there is kept number ci — index of the last city on the way from the Headquarter to i.


The company decided to move the Headquarter from city hq1 to city hq2. So, after this change the old representation of the map as described above became incorrect. Please, help the company to find out a new map in the way described above. The first line contains the number of test cases(0 < T <= 10 ). The next line contains three space-separated integers n, hq1, hq2 (2 ≤ n ≤ 2*10^4, 1 ≤ hq1 ≠ hq2 ≤ n) — number of connected cities, index of the old Headquarter and index of the new Headquarter, respectively.


The following line contains n - 1 space-separated integers — the old representation of the map. For each city, other than hq1, there is given integer ci — index of the last city on the way from the Headquarter to city i. All the cities are described in order of increasing indexes. Output n - 1 numbers — new representation of the map in the same format.",4508,2823,0,86,0.414634146341,7,1
44454,1.5877393234,MARBLES,"  Hnschen dreams he is in a shop with an infinite amount of marbles. He is allowed to select n marbles. There are marbles of k different colors. From each color there are also infinitely many marbles. Hnschen wants to have at least one marble of each color, but still there are a lot of possibilities for his selection. In his effort to make a decision he wakes up.
Now he asks you how many possibilites for his selection he would have had.
Assume that marbles of equal color can't be distinguished, and the order of the marbles is irrelevant.   The first line of input contains a number T  For each test case print the number of possibilities that Hnschen would have had.
You can assume that this number fits into a signed 64 bit integer.  Example  Input: 2
10 10
30 7 Output: 1
475020 ",0.459100234805,MARBLES,"Rohit dreams he is in a shop with an infinite amount of marbles. He is allowed to select n marbles. There are marbles of k different colors. From each color there are also infinitely many marbles. Rohit wants to have at least one marble of each color, but still there are a lot of possibilities for his selection. In his effort to make a decision he wakes up. Now he asks you how many possibilities for his selection he would have had. Assume that marbles of equal color can't be distinguished, and the order of the marbles is irrelevant.The first line of input contains a number T <= 100 that indicates the number of test cases to follow. Each test case consists of one line containing n and k, where n is the number of marbles Rohit selects and k is the number of different colors of the marbles. You can assume that 1<=k<=n<=1000000.For each test case print the number of possibilities that Rohit would have had. You can assume that this number fits into a signed 64 bit integer.",4557,3663,1,33,0.689655172414,0,1
44488,-0.318597730392,ARCHPLG," Byteland is a country located in the Archipelago of Rectangular Islands. The archipelago consists of 1 islands. A fact that each island has a rectangular shape is very nice for Bytelandian cartographers.  Bytelandian islands are rather small and none are very fertile, so each of (rectangular of course) pieces of cultivated land is under special control, simply speaking: never enter there to save your life. Other areas are guaranteed to be free accessible for the people. The communication between islands is possible by ferries. On each island there is 0 terminals, from where crossings to another terminals on other islands are possible. 
It is known that total number of crossing connections is 0. Other infrastructure is practically unknown. Specifically the only possible 
way of traveling through  the island is to do it on foot. Well, now we are close to a task you are requested to solve. John  one of the Bytelandian citizens is working as a sales manager. Simply speaking he is often requested to travel from one place to another, what he rather dislike and preferably (like other Bytelandian people use to do) he would like to spent more time in one of the
beach clubs playing Puto (a kind of strategic game, very popular in Byteland). Please help him to find a way to spare his time. Task  Find one of the fastest ways for John using ferries and foot paths on islands. Assume that while walking John is always moving one BM (Bytelandian unit of length) per BH  (Bytelandian unit of time). 
You can also assume that the ferry departures nearly immediately after John arrives the terminal, it will be enough to round up the walking time to the nearest integer.  In the first  line t - the number of tests, then for each test:
in next line n - the number of islands. Description of each island is as follows: name
w h [island dimensions]
b - [number of terminals]
[description of each terminal in a form:]
name x y [name of a terminal and its coordinates]
F [number of restricted areas F All coordinates are nonnegative integers measured in BM according to upper left corner of an island. You can assume that any two restricted areas are disjoint. After the description of all islands all ferry connections are given (each connection is bi-directional). m  [number of connections]
[description of each connection]
NB1 NW1 NB2 NW2 time [name of a first terminal, its island, the second respectively
and communiaction time]
...
[description follows]
...
NBS NWS NBC NWC [start and goal terminal for John]   For each test describe the shortest route for John from terminal NBS on NWS island to terminal  NBC on NWC island in the following format: case nr Y [nr - test number]
T [travel time in BH]
NBS  NWS
...
[consecutive terminals]
...
NBC NWC
[empty line]
[consecutive tests]  If two consecutive terminals are located on the same island and John must take some walk you must give all middle point like in an example.   Example   Input: 1
3
W1
8 7
2
Lindos 4 0
Kamejros 4 7
3
2 1 6 2
2 3 6 4 
2 5 6 6 
W2
14 12
2
Malia 14 1
Knossos 1 12
5
2 6 10 10
11 1 12 6
8 1 10 5
11 7 12 9
3 2 5 4
W3 
1 1
1
Korkyra 0 0
0
2
Kamejros W1 Knossos W2 100
Malia W2 Korkyra W3 100
Korkyra W3 Lindos W1  An example of a correct answer:  Output: case 1 Y
230
Korkyra W3
Malia W2
12 6
11 7
10 10
Knossos W2
Kamejros W1
2 6
2 1
Lindos W1 ",-0.207974496478,ARCHPLG,"Bytelandian islands are rather small and none are very fertile, so each of the rectangular pieces of cultivated land is under special control, simply speaking: ‘never enter there if you value your life’. Other areas are guaranteed to be freely accessible for all people.The communication between islands is possible by ferries. On each island there is 0<=b<=10 terminals, from where crossings to another terminals on other islands are possible. It is known that total number of crossing connections is 0<=m<=100000. Other infrastructure is practically unknown. Specifically the only possible way of traveling through the island is to do it on foot.Well, now we are close to a task you are requested to solve. John – one of the Bytelandian citizens is working as a sales manager. He is often requested to travel from one place to another which he rather dislikes. What he'd rather do is spend his time relaxing on the beach. Please help him to find a way to spare his time.In the first line t - the number of tests, then for each test: in next line n - the number of islands. Description of each island is as follows:name
w h [island dimensions]
b - [number of terminals]
[description of each terminal in a form:]
name x y [name of a terminal and its coordinates]
F [number of restricted areas F<20]
xl, yd, xr, yu [coordinates of each restricted area,
0 <=xl < xr<=250 0<=yd < yu<=250.]All coordinates are nonnegative integers measured in BM according to upper left corner of an island.You can assume that any two restricted areas are disjoint. After the description of all islands all ferry connections are given (each connection is bi-directional).m  [number of connections]
[description of each connection]
NB1 NW1 NB2 NW2 time [name of a first terminal, its island, the second respectively
and communiaction time]
...
[description follows]
...
NBS NWS NBC NWC [start and goal terminal for John]For each test describe the shortest route for John from terminal NBS on NWS island to terminal NBC on NWC island in the following format:case nr Y [nr - test number]
T [travel time in BH]
NBS  NWS
...
[consecutive terminals]
...
NBC NWC
[empty line]
[consecutive tests]If two consecutive terminals are located on the same island and John must take some walk you must give all middle point like in an example.",4558,5106,1,206,0.490616621984,0,1
44657,12.9072391552,ACPC10A,"  According to Wikipedia, an arithmetic progression (AP) is a sequence of numbers such that the difference of any two successive members of the sequence is a constant. For instance, the sequence 3, 5, 7, 9, 11, 13, . . . is an arithmetic progression with common difference 2. For this problem, we will limit ourselves to arithmetic progression whose common difference is a non-zero integer. On the other hand, a geometric progression (GP) is a sequence of numbers where each term after the first is found by multiplying the previous one by a fixed non-zero number called the common ratio. For example, the sequence 2, 6, 18, 54, . . . is a geometric progression with common ratio 3. For this problem, we will limit ourselves to geometric progression whose common ratio is a non-zero integer. Given three successive members of a sequence, you need to determine the type of the progression and the next successive member.   Your program will be tested on one or more test cases. Each case is specified on a single line with three integers (10, 000 < a1 , a2 , a3 < 10, 000) where a1 , a2 , and a3 are distinct. The last case is followed by a line with three zeros.   For each test case, you program must print a single line of the form: XX v where XX is either AP or GP depending if the given progression is an Arithmetic or Geometric Progression. v is the next member of the given sequence. All input cases are guaranteed to be either an arithmetic or geometric progressions.  Example  Input: 4 7 10 2 6 18 0 0 0 Output: AP 13 GP 54 ",-0.181824112113,CDM02," According to Wikipedia, an arithmetic progression (AP) is a sequence of numbers such that the difference of any two successive members of the sequence is a constant. For instance, the sequence 3, 5, 7, 9, 11, 13, . . . is an arithmetic progression with common difference 2. For this problem, we will limit ourselves to arithmetic progression whose common difference is a non-zero integer.On the other hand, a geometric progression (GP) is a sequence of numbers where each term after the first is found by multiplying the previous one by a fixed non-zero number called the common ratio. For example, the sequence 2, 6, 18, 54, . . . is a geometric progression with common ratio 3. For this problem, we will limit ourselves to geometric progression whose common ratio is a non-zero integer.Given three successive members of a sequence, you need to determine the type of the progression and the next successive member. Input description.The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows:
The first line of each test case contains three integers (−10, 000 < a1 , a2 , a3 < 10, 000) where a1 , a2 , and a3 are distinct. For each test case, you program must print a single line of the form:
XX v
where XX is either AP or GP depending if the given progression is an Arithmetic or Geometric Progression. v is the next member of the given sequence. All input cases are guaranteed to be either an arithmetic or geometric progressions. ",4602,3554,0,27,0.75,5,1
44658,12.9072391552,ACPC10A,"  According to Wikipedia, an arithmetic progression (AP) is a sequence of numbers such that the difference of any two successive members of the sequence is a constant. For instance, the sequence 3, 5, 7, 9, 11, 13, . . . is an arithmetic progression with common difference 2. For this problem, we will limit ourselves to arithmetic progression whose common difference is a non-zero integer. On the other hand, a geometric progression (GP) is a sequence of numbers where each term after the first is found by multiplying the previous one by a fixed non-zero number called the common ratio. For example, the sequence 2, 6, 18, 54, . . . is a geometric progression with common ratio 3. For this problem, we will limit ourselves to geometric progression whose common ratio is a non-zero integer. Given three successive members of a sequence, you need to determine the type of the progression and the next successive member.   Your program will be tested on one or more test cases. Each case is specified on a single line with three integers (10, 000 < a1 , a2 , a3 < 10, 000) where a1 , a2 , and a3 are distinct. The last case is followed by a line with three zeros.   For each test case, you program must print a single line of the form: XX v where XX is either AP or GP depending if the given progression is an Arithmetic or Geometric Progression. v is the next member of the given sequence. All input cases are guaranteed to be either an arithmetic or geometric progressions.  Example  Input: 4 7 10 2 6 18 0 0 0 Output: AP 13 GP 54 ",-0.0706988354983,ARHN01," Problem description.An arithmetic progression(AP) is a sequence of numbers such that the difference of any two successive members of the sequence is a constant.
For example:- 1, 4, 7, 10,13, 16, 19, ...
A geometric progression(GP) is a sequence of numbers where each term after the first is found by multiplying the previous one by a fixed non-zerocontant.
For examplee:- 1, 3, 9, 81, ... (with common ratio of 3).Given three successive members of a sequence, you need to determine the type of the progression and the next successive member. Each case is specified on a single line with three integers a1, a2, a3 are distinct. The last case is followed by a line with three zeros.For each test case, your program must print a single line of the form:
XX v
where XX is either AP or GP depending if the given progression is an Arithmetic orGeometric Progression. v is the next member of the given sequence. All input cases are guaranteed to be either an arithmetic or geometric progressions.",4602,4377,0,124,0.488095238095,5,1
45244,-0.265895762951,SCROLL,"  Sruthi is looking at a spreadsheet containing N rows. Only K rows of the spreadsheet are visible at a time (If the top row is i, the bottom row will be i+K-1). In the beginning, rows 1..K are visible. Sruthi needs to read certain values from rows r1,r2...rM in that order. It is possible to scroll the spreadsheet so that the rows j..j+K-1 can be viewed instead of the current i..i+K-1. This operation counts as one scroll and its scroll length is defined as |j-i|  Find the minimum number of scrolls required so that Sruthi can read of all the M values in the given order. As there may be more than one way to do this, also find the minimum total scroll length required to do the reading in so many scrolls.   The first line of the input contains the integer T (<=20), the number of test cases to follow.  The description of each test case begins with a line containing 3 integers N(<=10^8), K(<=10^8) and M(<=50000) as defined in the problem. Following this are M lines giving the row numbers from which values have to be read sequentially.   Output two space separated integers in a line per test case : The minimum number of scrolls required and the minimum scroll length required for the minimum number of scrolls.  Example  Input: 2
20 10 2
10
20
20 10 2
10
7 Output: 1 10
0 0 ",-0.205817322457,IOPC1101,"Sruthi is looking at a spreadsheet containing N rows. Only K rows of the spreadsheet are visible at a time (If the top row is i, the bottom row will be i+K-1). In the beginning, rows 1..K are visible. Sruthi needs to read certain values from rows r1,r2...rM in that order. It is possible to scroll the spreadsheet so that the rows j..j+K-1 can be viewed instead of the current i..i+K-1. This operation counts as one scroll and its scroll length is defined as |j-i|Find the minimum number of scrolls required so that Sruthi can read of all the M values in the given order. As there may be more than one way to do this, also find the minimum total scroll length required to do the reading in so many scrolls.The first line of the input contains the integer T (<=20), the number of test cases to follow.The description of each test case begins with a line containing 3 integers N(<=10^8), K(<=10^8) and M(<=50000) as defined in the problem. Following this are M lines giving the row numbers from which values have to be read sequentially.Output two space separated integers in a line per test case : The minimum number of scrolls required and the minimum scroll length required for the minimum number of scrolls.",4688,3068,0,26,0.84962406015,7,1
45252,-0.234335547192,CHOCDIST,"  In Dystopia, chocolates are being distributed to children waiting in a queue. The distribution proceeds as follows. Each chocolate bar is rectangular in shape with integer edge lengths. If the chocolate bar is a square, it is given away completely to the first child in the queue. Otherwise the largest possible square piece of chocolate is broken off from the chocolate bar and given to the first child. After a child receives his share of chocolate, he leaves the queue. The remaining portion of the chocolate bar is dealt with in the same fashion and the whole or a portion of it is given to the next child in the queue.  For example, if we start with a 5x3 chocolate bar, the first child in the queue receives a 3x3 chocolate bar, leaving a 2x3 bar. The second child gets a 2x2 bar while the third and fourth children get 1x1 bars. Thus four children have been fed using the 5x3 bar.  The Dystopian government has got a carton of chocolate bars to be distributed to children in the country. To make sure that maximum inequality is achieved while distributing chocolates, the chocolate bars in the carton are all of different sizes. For every i such that M<=i<=N and every j such that P<=j<=Q (where M,N,P,Q are integers) there is exactly one chocolate bar of length i and breadth j in the carton. Here a bar of length i and breadth j is considered to be different from a bar of length j and breadth i.  Given the values of M,N,P,Q find the number of children that can be fed with the chocolate in the carton.   The first line of the input contains the number of test cases, T (<=1000)  Following this are T lines, each describing a test case with four integers M,N,P,Q separated by spaces (1<=M<=N<=100000000, 1<=P<=Q<=1000)   Output T lines, each containing an integer : The number of children that can be fed using the chocolate in the carton  Example  Input: 2
1 2 1 2
3 4 4 5 Output: 6
14 ",-0.20640110391,IOPC1102,"In Dystopia, chocolates are being distributed to children waiting in a queue. The distribution proceeds as follows. Each chocolate bar is rectangular in shape with integer edge lengths. If the chocolate bar is a square, it is given away completely to the first child in the queue. Otherwise the largest possible square piece of chocolate is broken off from the chocolate bar and given to the first child. After a child receives his share of chocolate, he leaves the queue. The remaining portion of the chocolate bar is dealt with in the same fashion and the whole or a portion of it is given to the next child in the queue.For example, if we start with a 5x3 chocolate bar, the first child in the queue receives a 3x3 chocolate bar, leaving a 2x3 bar. The second child gets a 2x2 bar while the third and fourth children get 1x1 bars. Thus four children have been fed using the 5x3 bar.The Dystopian government has got a carton of chocolate bars to be distributed to children in the country. To make sure that maximum inequality is achieved while distributing chocolates, the chocolate bars in the carton are all of different sizes. For every i such that M<=i<=N and every j such that P<=j<=Q (where M,N,P,Q are integers) there is exactly one chocolate bar of length i and breadth j in the carton. Here a bar of length i and breadth j is considered to be different from a bar of length j and breadth i.Given the values of M,N,P,Q find the number of children that can be fed with the chocolate in the carton.The first line of the input contains the number of test cases, T (<=1000)Following this are T lines, each describing a test case with four integers M,N,P,Q separated by spaces (1<=M<=N<=100000000, 1<=P<=Q<=1000)Output T lines, each containing an integer : The number of children that can be fed using the chocolate in the carton",4689,2964,0,30,0.866279069767,7,1
45258,-0.282955339037,TRIEQUAL,"  Consider three distinct points A,B,C on a plane. The sum of straight line distances from A to B and B to C is always greater than or equal to the straight line distance from A to C. Equality holds only when ABC is a degenerate triangle. This is the famous triangle inequality  In this case, distance between points is measured by the Euclidean metric. ie, the distance between points (x 1 ,y 1 ) and (x 2 ,y 2 ) is given by sqrt((x 1 -x 2 ) 2 +(y 1 -y 2 ) 2 ). However, this is not the only metric possible. Another common metric used is the Manhattan metric where the distance between the pair of points is given by |x 1 -x 2 |+|y 1 -y 2 |  You are given N distinct points on a plane where distances are measured using the Manhattan metric. Find the number of ordered triplets of distinct points (A,B,C) such that the sum of distances from A to B and B to C is equal to the distance from A to C.   The first line of input contains an integer T (<=10), the number of test cases to follow.  Following this are the descriptions of T test cases. Each test case description begins with an integer N (<=50000), the number of points. Following this are N lines, each giving the x and y coordinates of a point (0<=x i ,y i <=10 8 ) separated by a space.   Output T lines, each containing the number of ordered triplets of distinct points in every test case with the given property  Example  Input: 2
3
0 0
1 1
2 2
3
0 0
1 2
2 1 Output: 2
0 ",-0.208449712018,IOPC1104,"Consider three distinct points A,B,C on a plane. The sum of straight line distances from A to B and B to C is always greater than or equal to the straight line distance from A to C. Equality holds only when ABC is a degenerate triangle. This is the famous triangle inequalityIn this case, distance between points is measured by the Euclidean metric. ie, the distance between points (x1,y1) and (x2,y2) is given by sqrt((x1-x2)2+(y1-y2)2). However, this is not the only metric possible. Another common metric used is the Manhattan metric where the distance between the pair of points is given by |x1-x2|+|y1-y2|You are given N distinct points on a plane where distances are measured using the Manhattan metric. Find the number of ordered triplets of distinct points (A,B,C) such that the sum of distances from A to B and B to C is equal to the distance from A to C.The first line of input contains an integer T (<=10), the number of test cases to follow.Following this are the descriptions of T test cases. Each test case description begins with an integer N (<=50000), the number of points. Following this are N lines, each giving the x and y coordinates of a point (0<=xi,yi<=108) separated by a space.Output T lines, each containing the number of ordered triplets of distinct points in every test case with the given property",4690,2244,0,62,0.709219858156,8,1
45268,-0.290632148276,MILPATR,"  Dystopia consists of N cities. There are one-way roads connecting some pairs of cities. The dysfunctional state has recently seen a lot of protests to overthrow the tyrannical ruler and the government plans to use military patrol vehicles to make sure that the protests are suppressed. Every patrol vehicle is assigned a sequence of cities. If a patrol vehicle is assigned the cities c 1 ,c 2 ,...c k then it starts from the city c 1 and takes the direct one-way road to c 2 , from there it takes the one-way road to c 3 and so on. Finally the vehicle takes the one way road from c k to c 1 . This routine is repeated everyday to keep the protestors perpetually under fear.  Now note that:   Every city has to appear in exactly one vehicle's patrol sequence exactly once  Every patrol vehicle has to move - so it has to be assigned more than one city     The government does not have any limit on the number of patrol vehicles it can use. However, they want to make sure that the least possible amount of money is spent on the patrol mission and hence they want to minimise the total distance travelled by the patrol vehicles.  Given the road network of Dystopia, find the minimum total distance the patrol vehicles need to move so that all the cities can be patrolled. If it is impossible to organise a nationwide patrol with the given constraints, report the same.   First line of the contains T, the number of test cases (T<=10)  This is followed by the descriptions of the T testcases. The first line of the description contains two integers N and R, the number of cities and one way roads respectively (N<=200,R<=10000). The cities are numbered 1,2,3,...N This is followed by R lines, each representing a one way road by 3 integers N 1 , N 2 and D : the start city, the end city and the length of the road respectively ( N 1 !=N 2 , 1<=D<=1000000). You are assured that there is no more than one one way road from any N 1 to N 2   For each test case output one line. If the patrol can be done, output the minimum total distance that the patrol vehicles have to travel. Otherwise output Impossible  Example  Input: 2
3 3
1 2 1
2 3 1
1 3 1
4 6
1 2 2
2 3 2
3 4 2
4 1 2
1 4 1
3 2 1 Output: Impossible
6 ",-0.208157053729,IOPC1105,"Dystopia consists of N cities. There are one-way roads connecting some pairs of cities. The dysfunctional state has recently seen a lot of protests to overthrow the tyrannical ruler and the government plans to use military patrol vehicles to make sure that the protests are suppressed. Every patrol vehicle is assigned a sequence of cities. If a patrol vehicle is assigned the cities c1,c2,...ck then it starts from the city c1 and takes the direct one-way road to c2, from there it takes the one-way road to c3 and so on. Finally the vehicle takes the one way road from ck to c1. This routine is repeated everyday to keep the protestors perpetually under fear.Now note that:Every city has to appear in exactly one vehicle's patrol sequence exactly once
Every patrol vehicle has to move - so it has to be assigned more than one cityThe government does not have any limit on the number of patrol vehicles it can use. However, they want to make sure that the least possible amount of money is spent on the patrol mission and hence they want to minimise the total distance travelled by the patrol vehicles.Given the road network of Dystopia, find the minimum total distance the patrol vehicles need to move so that all the cities can be patrolled. If it is impossible to organise a nationwide patrol with the given constraints, report the same.First line of the contains T, the number of test cases (T<=10)This is followed by the descriptions of the T testcases. The first line of the description contains two integers N and R, the number of cities and one way roads respectively (N<=200,R<=10000). The cities are numbered 1,2,3,...N This is followed by R lines, each representing a one way road by 3 integers N1, N2 and D : the start city, the end city and the length of the road respectively ( N1!=N2, 1<=D<=1000000). You are assured that there is no more than one one way road from any N1 to N2For each test case output one line. If the patrol can be done, output the minimum total distance that the patrol vehicles have to travel. Otherwise output Impossible",4691,2454,0,73,0.745192307692,7,1
45284,-0.30342683034,PARTPLNE,"  You are given the coordinates of 4*K+5 points on a plane such that no three of them are collinear. You need to select five points from these : a central point O and four arm points A,B,C,D such that:   Rays from the centre to the arm points divide the plane into four regions containing an equal number of points  None of the four central angles is a reflex angle  Sum of absolute values of the cotangents of the central angles is as low as possible     If it is possible to choose points satisfying this condition, output the lowest possible value for the sum of absolute values of the cotangents of the central angles. Otherwise report that it is not possible.   The first line of input contains T(<=4), the number of test cases. Following this are the descriptions of the T test cases.  The first line in the description of each test case gives K(<=100). Following this are 4*K+5 lines giving the x and y coordinates of each point separated by a space (0<=x,y<=10 6 )   For each test case output in a different line the minimum sum of absolute values of the cotangents of the central angles, with six digits after the decimal point. If the division cannot be done in the manner explained, print Impossible  Example  Input: 2 0 0 0 0 1 1 1 1 0 2 3 0 0 0 2 0 0 1 2 1 1 2 Output: 4.500000 Impossible ",-0.209035028638,IOPC1106,"You are given the coordinates of 4*K+5 points on a plane such that no three of them are collinear. You need to select five points from these : a central point O and four arm points A,B,C,D such that:Rays from the centre to the arm points divide the plane into four regions containing an equal number of points
None of the four central angles is a reflex angle
Sum of absolute values of the cotangents of the central angles is as low as possibleIf it is possible to choose points satisfying this condition, output the lowest possible value for the sum of absolute values of the cotangents of the central angles. Otherwise report that it is not possible.The first line of input contains T(<=4), the number of test cases. Following this are the descriptions of the T test cases.The first line in the description of each test case gives K(<=100). Following this are 4*K+5 lines giving the x and y coordinates of each point separated by a space (0<=x,y<=106)For each test case output in a different line the minimum sum of absolute values of the cotangents of the central angles, with six digits after the decimal point. If the division cannot be done in the manner explained, print Impossible",4692,1608,0,55,0.792307692308,8,1
45286,-0.30342683034,LEAKCONT,"  The acid manufacturing company has a special room to store leaky acid containers. The container holders in the room, which have the capacity to hold one leaky container each, are arranged in a rectangular grid of R rows and C columns such that the columns are in the North-South direction while the rows are in the East-West direction. Currently there are N leaky containers in some of the holders and M more have just arrived and need to be placed in the holders.  The company has realised that the containers being produced these days are exceptionally leaky. So much so that the acid that is leaking is corroding the holders completely.  Every acid container leaks either in the North-South direction or the East-West direction. Containers can be rotated by 90 degrees and thus a container that is leaking in the East-West direction can be made to leak North-South and vice versa. Given enough time, a leaky container can corrode the holder completely and start corroding the two adjacent holders in the leak direction and this process can go on.  The company employee has to make a decision fast. He needs to rotate some of the existing containers and place the new containers in proper holders and directions such that the total number of holders that will be corroded is minimised.  Find out the minimum number of holders that will be corroded after proper placement of the new containers and proper orientation of all containers.   The first line of the input contains the number of test cases T (<=10).  For each test case, the first line has four numbers R, C, N and M (1<=R,C<=100, 1<=M,N<=20, M+N<=R*C). This is followed by N lines, each giving the location and leak direction of an existing container by 3 integers r (row number), c (column number) and d (1 if leakage is N-S, 0 if E-W). Numbering of rows and columns begins with 1.   For each test case, output on a different line the smallest number of holders that will get corroded after rotating the existing containers and placing the newly arrived containers.  Example  Input: 2
4 6 4 4
1 2 0
2 4 0
3 2 1
3 5 1
50 50 5 10
1 35 1
17 44 0
17 46 1
42 35 1
42 46 0 Output: 12
148 ",-0.208449712018,IOPC1107,"The acid manufacturing company has a special room to store leaky acid containers. The container holders in the room, which have the capacity to hold one leaky container each, are arranged in a rectangular grid of R rows and C columns such that the columns are in the North-South direction while the rows are in the East-West direction. Currently there are N leaky containers in some of the holders and M more have just arrived and need to be placed in the holders.The company has realised that the containers being produced these days are exceptionally leaky. So much so that the acid that is leaking is corroding the holders completely.Every acid container leaks either in the North-South direction or the East-West direction. Containers can be rotated by 90 degrees and thus a container that is leaking in the East-West direction can be made to leak North-South and vice versa. Given enough time, a leaky container can corrode the holder completely and start corroding the two adjacent holders in the leak direction and this process can go on.The company employee has to make a decision fast. He needs to rotate some of the existing containers and place the new containers in proper holders and directions such that the total number of holders that will be corroded is minimised.Find out the minimum number of holders that will be corroded after proper placement of the new containers and proper orientation of all containers.The first line of the input contains the number of test cases T (<=10).For each test case, the first line has four numbers R, C, N and M (1<=R,C<=100, 1<=M,N<=20, M+N<=R*C). This is followed by N lines, each giving the location and leak direction of an existing container by 3 integers r (row number), c (column number) and d (1 if leakage is N-S, 0 if E-W). Numbering of rows and columns begins with 1.For each test case, output on a different line the smallest number of holders that will get corroded after rotating the existing containers and placing the newly arrived containers.",4693,2243,0,50,0.805,8,1
45291,-0.287220233059,PROGPROG,"  An arithmetic progression is a sequence of numbers a 1 , a 2 ,... a n such that a i+1 -a i is equal for all 0i<n. This difference is called the common difference of the arithmetic progression.  Now consider a sequence of arithmetic progressions A 1 = (a 1,1 , a 1,2 ,... a 1,n 1 ), A 2 = (a 2,1 , a 2,2 ,... a 2,n 2 ),... A k = (a k,1 , a k,2 ,... a k,n k )  A progressive progression is such a sequence with the additional properties that:   a i,n i = a i+1,1 for 1  i < k  c i , the common difference of A i , is a positive factor of a i,1 for 1  i  k  c i <c i+1 for 1  i < k  n i >1 for 1  i  k  k  1     Find the number of progressive progressions such that a 1,1 =1 and a k,n k = N. As this number can be quite large, output it modulo 100000007.   The first line of input contains T ( 100), the number of testcases. This is followed by the description of the testcases. The description of each testcase consists of a single integer N (1 < N  1000000).   For each testcase, output modulo 100000007 the number of progressive progressions such that a 1,1 =1 and a k,n k = N  Example  Input: 2
5
10 Output: 1
6 ",-0.208449712018,IOPC1108,"An arithmetic progression is a sequence of numbers a1, a2,... an such that ai+1-ai is equal for all 0≤i<n. This difference is called the common difference of the arithmetic progression.Now consider a sequence of arithmetic progressions A1 = (a1,1, a1,2,... a1,n1), A2 = (a2,1, a2,2,... a2,n2),... Ak = (ak,1, ak,2,... ak,nk)A progressive progression is such a sequence with the additional properties that:ai,ni = ai+1,1 for 1 ≤ i < k
ci, the common difference of Ai, is a positive factor of ai,1 for 1 ≤ i ≤ k
ci<ci+1 for 1 ≤ i < k
ni >1 for 1 ≤ i ≤ k
k ≥ 1Find the number of progressive progressions such that a1,1=1 and ak,nk = N. As this number can be quite large, output it modulo 100000007.The first line of input contains T (≤ 100), the number of testcases. This is followed by the description of the testcases. The description of each testcase consists of a single integer N (1 < N ≤ 1000000).For each testcase, output modulo 100000007 the number of progressive progressions such that a1,1=1 and ak,nk = N",4694,2242,0,88,0.453237410072,8,1
45316,-0.305132787949,MOVEBOOK,"  Sheldon and Lenard are a pair of nerds playing an unimaginatively named game, ""Move the books"". The game board is an infinitely long strip of cells numbered 1,2,3.... from left to right. On certain cells, their favourite physics books have been placed. A player's move consists of taking any one of the books and moving it to any cell which lies to its left. But there is a constraint that you are not allowed to make your book jump over a cell that contains a book already (ie, You cannot move a book from cell j to cell i < j if there is a cell k which contains one or more books such that i < k < j). However, you can place a book into a cell even if it contains one or more books already. But books that are placed in a cell are stacked in the order in which they arrive and hence only the topmost book (the last arrived one) can be moved from there. The players make moves alternately, and the person unable to move any book loses.  They have been playing the game for a long time. Sheldon makes the first move in all the games and wins most of the time. Lenard is fed up and wants to make the first move. However, Sheldon doesn't yield and this leads to an argument. This is the final agreement they have come up with:   They start with N books placed in different cells. The arrangement is computer generated and hence there is no player role in this step  Lenard picks two natural numbers a & c while Sheldon picks a natural number b. Both are unaware of the number(s) the other person has chosen while choosing their own number(s). Three more books are now added to the set : a cells to the right of the rightmost current book, b cells to the right of this book and c cells to the right of the latter book.  They start the game with the same rules as earlier, with Sheldon making the first move.     Now Lenard feels that there might be certain pairs (a,c) such that independent of which number Sheldon chooses, Lenard is assured to win the game. Given the initial configuration of the board find all such pairs, sort them lexicographically [(a 1 ,c 1 ) < (a 2 ,c 2 ) iff a 1 < a 2 or (a 1 =a 2 and c 1 < c 2 )] and output the Kth such pair. If there are less than K pairs with this property, output Impossible   The first line of the Input contains T (50), the number of test cases. Following this are the descriptions of the T test cases  The first line in the description of each test case contains two space separated integers N (1000) and K (10 8 ). Following these are N lines, each containing the location of a book. The book positions are given in increasing order and will each fit in a 32 bit signed integer.   For each test case output the Kth lexicographically smallest pair of integers that will assure Lenard a win. The two integers should be separated by a space and pairs for each test case should be output on a new line. If for any test case there are less than K pairs of integers that assure Lenard a win, on the line for that test case output Impossible  Example  Input: 1
1 1
1 Output: 1 1 ",-0.208449712018,IOPC1109,"Sheldon and Lenard are a pair of nerds playing an unimaginatively named game, ""Move the books"". The game board is an infinitely long strip of cells numbered 1,2,3.... from left to right. On certain cells, their favourite physics books have been placed. A player's move consists of taking any one of the books and moving it to any cell which lies to its left. But there is a constraint that you are not allowed to make your book jump over a cell that contains a book already (ie, You cannot move a book from cell j to cell i < j if there is a cell k which contains one or more books such that i < k < j). However, you can place a book into a cell even if it contains one or more books already. But books that are placed in a cell are stacked in the order in which they arrive and hence only the topmost book (the last arrived one) can be moved from there. The players make moves alternately, and the person unable to move any book loses.They have been playing the game for a long time. Sheldon makes the first move in all the games and wins most of the time. Lenard is fed up and wants to make the first move. However, Sheldon doesn't yield and this leads to an argument. This is the final agreement they have come up with:They start with N books placed in different cells. The arrangement is computer generated and hence there is no player role in this step
Lenard picks two natural numbers a & c while Sheldon picks a natural number b. Both are unaware of the number(s) the other person has chosen while choosing their own number(s). Three more books are now added to the set : a cells to the right of the rightmost current book, b cells to the right of this book and c cells to the right of the latter book.
They start the game with the same rules as earlier, with Sheldon making the first move.Now Lenard feels that there might be certain pairs (a,c) such that independent of which number Sheldon chooses, Lenard is assured to win the game. Given the initial configuration of the board find all such pairs, sort them lexicographically [(a1,c1) < (a2,c2) iff a1 < a2 or (a1=a2 and c1 < c2)] and output the Kth such pair. If there are less than K pairs with this property, output ImpossibleThe first line of the Input contains T (≤50), the number of test cases. Following this are the descriptions of the T test casesThe first line in the description of each test case contains two space separated integers N (≤1000) and K (≤108). Following these are N lines, each containing the location of a book. The book positions are given in increasing order and will each fit in a 32 bit signed integer.For each test case output the Kth lexicographically smallest pair of integers that will assure Lenard a win. The two integers should be separated by a space and pairs for each test case should be output on a new line. If for any test case there are less than K pairs of integers that assure Lenard a win, on the line for that test case output Impossible",4695,2241,0,52,0.84229390681,7,1
45385,-0.278690445016,ROADTRIP,"  Phileas Fogg and Passepartout are now going on a road trip in their brand new car. They start at location A 0 and need to go to A N . Their car has a capacity to hold only C units of fuel and can travel unit distance on unit amount of fuel. They start by filling some amount of fuel from the filling station at A 0 . On the way, there are several filling stations A 1 , A 2 ,... A N-1 . The cost of fuel is not the same at all filling stations. Find the minimum amount that they have to spend on fuel to make the journey.  Note that it is assured that the journey can be completed with the car of the given capacity.   The first line of input contains T (10), the number of test cases. Following this are the descriptions of the testcases  The first line in the description of each test case contains two space integers N (50000) and C (10 8 ). This is followed by N lines, each containing an integer. The integer on the ith line is the distance from A 0 to A i and is  10 8 . The distances are in increasing order. This is followed by N more lines, each containing an integer. The integer on the ith line is the cost of one unit of fuel at the filling station A i-1 and is   10 8 .   Output one integer per test case, the minimum total amount that needs to be spent on fuel to complete the journey  Example  Input: 2
5 10
10
20
30
40
50
1
2
1
2
1
5 15
10
20
30
40
50
1
2
1
2
1 Output: 70
60 ",-0.207571737109,IOPC1110,"Phileas Fogg and Passepartout are now going on a road trip in their brand new car. They start at location A0 and need to go to AN. Their car has a capacity to hold only C units of fuel and can travel unit distance on unit amount of fuel. They start by filling some amount of fuel from the filling station at A0. On the way, there are several filling stations A1, A2,... AN-1. The cost of fuel is not the same at all filling stations. Find the minimum amount that they have to spend on fuel to make the journey. Note that it is assured that the journey can be completed with the car of the given capacity.The first line of input contains T (≤10), the number of test cases. Following this are the descriptions of the testcasesThe first line in the description of each test case contains two space integers N (≤50000) and C (≤108). This is followed by N lines, each containing an integer. The integer on the ith line is the distance from A0 to Ai and is ≤ 108. The distances are in increasing order. This is followed by N more lines, each containing an integer. The integer on the ith line is the cost of one unit of fuel at the filling station Ai-1 and is ≤ 108.Output one integer per test case, the minimum total amount that needs to be spent on fuel to complete the journey",4696,2690,0,42,0.718954248366,7,1
45388,-0.305132787949,GNTFNTN,"  The Dystopian government has installed a giant fountain in front of the parliament building. The fountain consists of N levels stacked one on top of the other and is situated on top of a large tank of infinite capacity. The levels of the fountain are numbered 1 to N from top to bottom. The top l 1 levels are identical with capacity c 1 , the next l 2 levels identical with capacity c 2 ,... the final l K levels with capacity c K . Here l 1 + l 2 + ... l K = N.  When water is added to level i beyond its capacity, the excess water overflows to level i+1. Water overflowing from level N is collected in the tank. Water is added to the levels in the following fashion. First, w 1 amount of water is added to each level i such that s 1  i  e 1 . Then w 2 amount of water is added to each s 2  i  e 2 ... Finally w M amount is added to s M  i  e M . Note that water might be added to the same level multiple times in this fashion.  You have to find out the amount of water that has overflowed to the tank at the bottom, and the total number of levels of the fountain that are completely filled   The first line of the input contains T (10), the number of test cases. Following this are the descriptions of the test cases.  The first line of the description of a test case contains space separated integers N (2x10 8 ), K (2000) and M (10 4 ). Following this are K lines, each containing a space separated pair of integers. These are the (l i ,c i ) pair as explained in the problem statement. Here l 1 + l 2 + ... l K = N and c i  10 8 . This is followed by M lines, each containing a space separated triplet of integers. These are (s i ,e i ,w i ) as explained in the problem statement. 1  s i  e i  N and w i  10 6   For each test case output a space separated pair of integers : The total amount of water that has overflowed to the tank and the number of levels of the fountain that are completely filled.  Example  Input: 1
10 2 1
5 6
5 3
3 9 5 Output: 5 5 ",-0.208449712018,IOPC1111,"The Dystopian government has installed a giant fountain in front of the parliament building. The fountain consists of N levels stacked one on top of the other and is situated on top of a large tank of infinite capacity. The levels of the fountain are numbered 1 to N from top to bottom. The top l1 levels are identical with capacity c1, the next l2 levels identical with capacity c2,... the final lK levels with capacity cK. Here l1 + l2 + ... lK = N.When water is added to level i beyond its capacity, the excess water overflows to level i+1. Water overflowing from level N is collected in the tank. Water is added to the levels in the following fashion. First, w1 amount of water is added to each level i such that s1 ≤ i ≤ e1. Then w2 amount of water is added to each s2 ≤ i ≤ e2... Finally wM amount is added to sM ≤ i ≤ eM. Note that water might be added to the same level multiple times in this fashion. You have to find out the amount of water that has overflowed to the tank at the bottom, and the total number of levels of the fountain that are completely filledThe first line of the input contains T (≤10), the number of test cases. Following this are the descriptions of the test cases.The first line of the description of a test case contains space separated integers N (≤2x108), K (≤2000) and M (≤104). Following this are K lines, each containing a space separated pair of integers. These are the (li,ci) pair as explained in the problem statement. Here l1 + l2 + ... lK = N and ci ≤ 108. This is followed by M lines, each containing a space separated triplet of integers. These are (si,ei,wi) as explained in the problem statement. 1 ≤ si ≤ ei ≤ N and wi ≤ 106For each test case output a space separated pair of integers : The total amount of water that has overflowed to the tank and the number of levels of the fountain that are completely filled.",4697,2240,0,76,0.623655913978,8,1
45395,-0.299161936319,SSTRCITS,"  Unlike Dystopia, the neighbouring nation of Utopia believes in economic development. To improve the economy of the nation, the Utopian government has decided to select some pairs of cities as sister cities and take steps to improve trade relations between each pair.  There are N cities in Utopia, numbered 1 to N. There are two-way roads  connecting some pairs of cities. The total number of roads in Utopia is R. Now the road network in Utopia has been created efficiently so that there is no road that is redundant. That is, there is exactly one way to travel between any pair of cities without using the same road twice. Now when a pair of cities is chosen as sister cities, the government wants to make sure that there is a direct road between them. Also, a given city cannot have more than one sister.  Given the road network of Utopia, find the number of ways of selecting K pairs of sister cities under these constraints. As the answer can be quite large, output it modulo 100000007.  For example, assume that there are 6 cities in Utopia. There are direct roads between the following pairs of cities : (1,2), (2,3), (2,4), (4,5), (4,6). Notice that  there is exactly one way to travel between any pair of cities. If the government wants to select two pairs of sister cities, it can do it in four ways : {(1,2),(4,5)}, {(3,2),(4,5)}, {(1,2),(4,6)}, {(3,2),(4,6)}   First line of the input contains T (10), the number of test cases. This is followed by the description of the test cases.  The description of each test case begins with a line containing 3 space separated integers N (<400), R (<10000) and K (<400). Following these are R lines, each representing a road in Utopia. The line will contain two different space separated integers N 1 and N 2 implying that there is a two way road between N 1 and N 2 . You are assured that the road network has the property as described in the problem statement.   For each test case, output modulo 100000007 the number of ways of selecting K pairs of sister cities satisfying the conditions in the problem statement.  Example  Input: 2
3 2 1
1 2
2 3
6 5 2
1 2
2 3
2 4
4 5
4 6 Output: 2
4 ",-0.208449712018,IOPC1112,"Unlike Dystopia, the neighbouring nation of Utopia believes in economic development. To improve the economy of the nation, the Utopian government has decided to select some pairs of cities as sister cities and take steps to improve trade relations between each pair.There are N cities in Utopia, numbered 1 to N. There are two-way roads connecting some pairs of cities. The total number of roads in Utopia is R. Now the road network in Utopia has been created efficiently so that there is no road that is redundant. That is, there is exactly one way to travel between any pair of cities without using the same road twice. Now when a pair of cities is chosen as sister cities, the government wants to make sure that there is a direct road between them. Also, a given city cannot have more than one sister.Given the road network of Utopia, find the number of ways of selecting K pairs of sister cities under these constraints. As the answer can be quite large, output it modulo 100000007.For example, assume that there are 6 cities in Utopia. There are direct roads between the following pairs of cities : (1,2), (2,3), (2,4), (4,5), (4,6). Notice that there is exactly one way to travel between any pair of cities. If the government wants to select two pairs of sister cities, it can do it in four ways : {(1,2),(4,5)}, {(3,2),(4,5)}, {(1,2),(4,6)}, {(3,2),(4,6)}First line of the input contains T (≤10), the number of test cases. This is followed by the description of the test cases.The description of each test case begins with a line containing 3 space separated integers N (<400), R (<10000) and K (<400). Following these are R lines, each representing a road in Utopia. The line will contain two different space separated integers N1 and N2 implying that there is a two way road between N1 and N2. You are assured that the road network has the property as described in the problem statement.For each test case, output modulo 100000007 the number of ways of selecting K pairs of sister cities satisfying the conditions in the problem statement.",4698,2239,0,42,0.826530612245,8,1
45422,-0.305985766753,SKISLOPE,"  A skier wants to ski down from the top of a mountain to its base. There are several possible routes, using different slopes enroute, and passing through some flat areas. The effort expended in skiing down a slope depends upon the length of the slope and the speed of skiing. For each slope, there is a maximum advisable speed. The skier wants to use a toute that minimizrs the average effort spent per unit distance traveled (i.e. the total effort expended divided by the total distance traveled).  The flat regions on the mountain are numbered 1 to N from top to bottom. The skier begins at level 1 and needs to reach level N. You are given the numbers of the flat regions each slope connects. Note that on a slope, one can only ski downwards. For each slope, you are also given the length of the slope and the maximum advisable speed for it. The effort expended in skiing down a particular slope is given by the following formula:  e = d*(70-s) if s  60, and e = d*(s-50) if s > 60  where e is the effort required, d is the distance traveled and s is the speed of travel.  You have to determine the minimum average effort per unit distance that the skier has to expend in order to reach the mountain base, while staying within the maximum advisable speed at every slope.   The first line of input gives the number of test cases T(20). This is followed by the descriptions of the test cases  For each test case, the first line of input gives the number of flats, N (N  1000), and the number of slopes, R (R  20000), connecting them respectively. Each of the next R lines describes a slope by giving: the numbers of the flats at the top and the bottom of the slope, the maximum advisable speed for the slope ( 100), and the length of the slope ( 1000) respectively.   For each test case, output a single number (with four places after the decimal point, rounded up) that gives the minimum average effort per unit distance that needs to be expended to ski down from the mountain top to the base. The output for each test case should be on a separate line.  Example  Input: 2
4 5
1 4 30 60
1 2 50 40
1 3 60 20
2 4 60 50
3 4 50 50
3 3
1 2 50 40
1 3 40 20
2 3 20 30 Output: 14.4445
30.0000 ",-0.208156634651,IOPC1113,"A skier wants to ski down from the top of a mountain to its base. There are several possible routes, using different slopes enroute, and passing through some flat areas. The effort expended in skiing down a slope depends upon the length of the slope and the speed of skiing. For each slope, there is a maximum advisable speed. The skier wants to use a toute that minimizrs the average effort spent per unit distance traveled (i.e. the total effort expended divided by the total distance traveled).The flat regions on the mountain are numbered 1 to N from top to bottom. The skier begins at level 1 and needs to reach level N. You are given the numbers of the flat regions each slope connects. Note that on a slope, one can only ski downwards. For each slope, you are also given the length of the slope and the maximum advisable speed for it. The effort expended in skiing down a particular slope is given by the following formula:e = d*(70-s) if s ≤ 60, and e = d*(s-50) if s > 60where e is the effort required, d is the distance traveled and s is the speed of travel.You have to determine the minimum average effort per unit distance that the skier has to expend in order to reach the mountain base, while staying within the maximum advisable speed at every slope.The first line of input gives the number of test cases T(≤20). This is followed by the descriptions of the test casesFor each test case, the first line of input gives the number of flats, N (N ≤ 1000), and the number of slopes, R (R ≤ 20000), connecting them respectively. Each of the next R lines describes a slope by giving: the numbers of the flats at the top and the bottom of the slope, the maximum advisable speed for the slope (≤ 100), and the length of the slope (≤ 1000) respectively.For each test case, output a single number (with four places after the decimal point, rounded up) that gives the minimum average effort per unit distance that needs to be expended to ski down from the mountain top to the base. The output for each test case should be on a separate line.",4699,2453,0,52,0.807291666667,8,1
45424,-0.27357257219,PLCNMGME,"  Place-name game is a favourite pastime among the few children that go to school in Dystopia. The game is played as follows : One player says the name of a city and the next player has to say the name of a city that begins with the last letter of the said city. The game then goes on.  Dystopian cities recently went through a massive renaming. Now each city has a name that begins with a consonant and ends with a consonant.  Anaximander is a student with a very poor knowledge of geography. Hence he fares very poorly in the game. He has recently come up with a new idea. He would just remember the name of 21 Dystopian cities. He wants to choose the 21 cities such that there is exactly one city name starting with each consonant and exactly one city name ending with each. This would give him a good advantage in the game, whether he is playing first or second.  Given the names of the N cities in Dystopia, find out the number of ways Anaximander can select 21 city names out of the lot satisfying the properties. As this number can be very large, output it modulo 100000007.   The first line of the input contains N (1000), the number of cities. This is followed by N lines, each containing the name of a city in Dystopia. Each city name will begin and end with a consonant, and will contain at least 2 and at most 10 letters.   Output modulo 100000007 the number of ways Anaximander can choose 21 city names out of the N with the intended properties.  Example  Input: 23
BBBB
CCCC
DDDD
FFFF
GGGG
HHHH
JJJJ
KKKK
LLLL
MMMM
NNNN
PPPP
QQQQ
RRRR
SSSS
TTTT
VVVV
WWWW
XXXX
YYYY
ZZZZ
BAAC
CAAB Output: 2 ",-0.208156634651,IOPC1114,"Place-name game is a favourite pastime among the few children that go to school in Dystopia. The game is played as follows : One player says the name of a city and the next player has to say the name of a city that begins with the last letter of the said city. The game then goes on.Dystopian cities recently went through a massive renaming. Now each city has a name that begins with a consonant and ends with a consonant.Anaximander is a student with a very poor knowledge of geography. Hence he fares very poorly in the game. He has recently come up with a new idea. He would just remember the name of 21 Dystopian cities. He wants to choose the 21 cities such that there is exactly one city name starting with each consonant and exactly one city name ending with each. This would give him a good advantage in the game, whether he is playing first or second.Given the names of the N cities in Dystopia, find out the number of ways Anaximander can select 21 city names out of the lot satisfying the properties. As this number can be very large, output it modulo 100000007.The first line of the input contains N (≤1000), the number of cities. This is followed by N lines, each containing the name of a city in Dystopia. Each city name will begin and end with a consonant, and will contain at least 2 and at most 10 letters.Output modulo 100000007 the number of ways Anaximander can choose 21 city names out of the N with the intended properties.",4700,2452,0,22,0.871621621622,8,1
45425,-0.28551427545,ENUMRTNL,"  It is well known that rational numbers form a countable set. Hence the set of rational numbers in the open interval (0,1) also form a countable set.  Here we enumerate the rationals in (0,1) in the following fashion. First, every rational is expressed in the lowest terms : ie, as p/q where p and q are positive integers with no common factor other than one. Then we sort the fractions in the ascending order of p+q. In case of a tie, the smaller fraction comes first.  The first few terms in this enumeration are 1/2, 1/3, 1/4, 2/3, 1/5, 1/6, 2/5...  Given a natural number N, find the numerator and denominator of the Nth term in the enumeration.   The first line of the input contains T (1000), the number of test cases. This is followed by T lines, each containing an integer N(10 11 ).   For each value of N, output separated by space the numerator and denominator (in lowest terms) of the Nth fraction in the enumeration  Example  Input: 2 3 6 Output: 1 4 1 6 ",-0.209035028638,IOPC1115,"It is well known that rational numbers form a countable set. Hence the set of rational numbers in the open interval (0,1) also form a countable set.Here we enumerate the rationals in (0,1) in the following fashion. First, every rational is expressed in the lowest terms : ie, as p/q where p and q are positive integers with no common factor other than one. Then we sort the fractions in the ascending order of p+q. In case of a tie, the smaller fraction comes first.The first few terms in this enumeration are 1/2, 1/3, 1/4, 2/3, 1/5, 1/6, 2/5...Given a natural number N, find the numerator and denominator of the Nth term in the enumeration.The first line of the input contains T (≤1000), the number of test cases. This is followed by T lines, each containing an integer N(≤1011).For each value of N, output separated by space the numerator and denominator (in lowest terms) of the Nth fraction in the enumeration",4701,1607,0,29,0.790322580645,8,1
45426,-0.28551427545,ENUMRTNL,"  It is well known that rational numbers form a countable set. Hence the set of rational numbers in the open interval (0,1) also form a countable set.  Here we enumerate the rationals in (0,1) in the following fashion. First, every rational is expressed in the lowest terms : ie, as p/q where p and q are positive integers with no common factor other than one. Then we sort the fractions in the ascending order of p+q. In case of a tie, the smaller fraction comes first.  The first few terms in this enumeration are 1/2, 1/3, 1/4, 2/3, 1/5, 1/6, 2/5...  Given a natural number N, find the numerator and denominator of the Nth term in the enumeration.   The first line of the input contains T (1000), the number of test cases. This is followed by T lines, each containing an integer N(10 11 ).   For each value of N, output separated by space the numerator and denominator (in lowest terms) of the Nth fraction in the enumeration  Example  Input: 2 3 6 Output: 1 4 1 6 ",-0.208335983846,IOPC1209,"Those of you who participated in IOPC last time might remember the ""Enumeration of rationals"" problem. Here is a variant of the same:We enumerate the rationals in (0,1) in the following fashion. First, every rational is expressed in the lowest terms : ie, as p/q where p and q are positive integers with no common factor other than one. Then we sort the fractions in the ascending order of p+q. In case of a tie, the smaller fraction comes first.The first few terms in this enumeration are 1/2, 1/3, 1/4, 2/3, 1/5, 1/6, 2/5...Given an integer N, find the position of 1/N in this enumeration.The first line of the input contains T, the number of test cases (T ≤ 25). This is followed by T lines, each containing an integer N (2 ≤ N ≤ 109).For each N in the input, output the position of 1/N in the enumeration.",4701,2214,0,41,0.520547945205,8,1
45428,-0.310250660775,CNTTEAMS,"  The teacher in the Dystopian School for Politics and other Dirty Games (DSPDG) is training students in group activities. She feels that to really understand group behavior, students need to practice working in groups of different sizes. This is how she groups the students:  There are N students in the class, with roll numbers from 1 to N(2N10 12 ). The teacher generates using her laptop a random permutation of the roll numbers. The student with the roll number equal to the i th number in the permutation is assigned as a ""target"" to the student with roll number as i (Note that ""targetship"" is not mutual. If 1 is the target for 2, 2 need not be the target for 1). If any student is assigned himself as the target, the teacher generates another permutation till no student is assigned himself.  The N students stand far from each other. Now student 1 goes and joins his target. After this, student 2 (and any student who is with him) joins 2's target. At the i th step, student i and anyone who is already with him joins i's target. In case i's target is already with him, nothing is done.  By following this procedure, when all students have joined their targets, the class gets split into some groups. For example, assume that there are 6 students in the class and the permutation that has been generated is {2,4,5,6,3,1}. First, 1 goes and joins 2. Then 1 and 2 join 4. Then 3 joins 5. Then 1, 2 and 4 join 6. 5 is already with 3 and hence does not move. Similarly 6 is already with 1 and does not move. In the end, we have 2 teams : {1,2,4,6} and {3,5}  Given N, find out the expectation value of the number of teams that will be formed when the teacher groups the class in this fashion.   First line of the input contains T(100), the number of test cases. Following this are T lines, each containing an integer N(2N10 12 ).   For each N, output the expectation value of the number of groups formed. Output 6 digits after the decimal point while printing the expectation value  Example  Input: 2
3
4 Output: 1.000000
1.333333 ",-0.209035028638,IOPC1116,"The teacher in the Dystopian School for Politics and other Dirty Games (DSPDG) is training students in group activities. She feels that to really understand group behavior, students need to practice working in groups of different sizes. This is how she groups the students:There are N students in the class, with roll numbers from 1 to N(2≤N≤1012). The teacher generates using her laptop a random permutation of the roll numbers. The student with the roll number equal to the ith number in the permutation is assigned as a ""target"" to the student with roll number as i (Note that ""targetship"" is not mutual. If 1 is the target for 2, 2 need not be the target for 1). If any student is assigned himself as the target, the teacher generates another permutation till no student is assigned himself.The N students stand far from each other. Now student 1 goes and joins his target. After this, student 2 (and any student who is with him) joins 2's target. At the ith step, student i and anyone who is already with him joins i's target. In case i's target is already with him, nothing is done.By following this procedure, when all students have joined their targets, the class gets split into some groups. For example, assume that there are 6 students in the class and the permutation that has been generated is {2,4,5,6,3,1}. First, 1 goes and joins 2. Then 1 and 2 join 4. Then 3 joins 5. Then 1, 2 and 4 join 6. 5 is already with 3 and hence does not move. Similarly 6 is already with 1 and does not move. In the end, we have 2 teams : {1,2,4,6} and {3,5}Given N, find out the expectation value of the number of teams that will be formed when the teacher groups the class in this fashion.First line of the input contains T(≤100), the number of test cases. Following this are T lines, each containing an integer N(2≤N≤1012).For each N, output the expectation value of the number of groups formed. Output 6 digits after the decimal point while printing the expectation value",4702,632,0,30,0.854271356784,8,1
45532,-0.172028650372,TEMPLEQ,"       The Tirumala temple is the most visited place of worship in the world. As the number of pilgrims who visit the temple each day is very high, the head of the temple should keep monitoring the queue system. Today is another lovely day and he has started his work. There are N queues at the entrance of the temple and some of them are already filled with pilgrims. Each queue has a metal door at the beginning, which leads to the temple. When the door is opened, it allows only one pilgrim to get through it and it gets closed immediately after that.      New pilgrims are rushing in to the queues and the head needs to monitor the current sizes of the queues and decide which doors to be opened. At any time, he wants to know how many queues currently have at least X pilgrims. He also decides an integer Y and wants to open the doors of all the queues having at least Y pilgrims at that time. You are the controller of the queue system and are following his instructions. Respond quickly and win yourself a big laddu (sweet) from him :) .  Read the input section for rest of the details.   The first line contains two integers N and Q. N - The number of queues [ 1 <= N <= 100,000 ], Q - The number of queries [ 0 <= Q <= 500,000 ] . The second line contains N integers, which are the initial sizes of the queues. ith integer ( 1-based ) is the initial size of queue i  [ 0 <= initial size <= 100,000,000 ] Each of the next Q lines is one of the following 1 A  [ One pilgrim enters the queue# A ( 1 <= A <= N ) ] 2 X  [ Find the number of queues having atleast X pilgrims currently ( 0 <= X <= 1,000,000,000 )  ]  3 Y  [ Open the doors of all the queues having atleast Y pilgrims ( 1 <= Y <= 1,000,000,000 ), and thus allowing only one pilgrim to enter the temple from each of them ]   For each query of type ""2 X"" , print the answer in a new line.  Example  Input: 5 6 20 30 10 50 40 2 31 1 2 2 31 3 11 2 20 2 50 Output: 2 3 3 0 Note : Ideal time limit should be 2s. It has been increased to 7s, to let Java solutions pass, as the i/o is huge. * There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted. ",-0.199089391387,TEMPQUE,"New pilgrims are rushing in to the queues and the head needs to monitor the current sizes of the queues and decide which doors to be opened. At any time, he wants to know how many queues currently have at least X pilgrims. He also decides an integer Y and wants to open the doors of all the queues having at least Y pilgrims at that time. You are the controller of the queue system and are following his instructions. Respond quickly and win yourself a big laddu (sweet) from him :) .The first line contains two integers N and Q. N - The number of queues [ 1 <= N <= 100,000 ], Q - The number of queries [ 0 <= Q <= 500,000 ] . The second line contains N integers, which are the initial sizes of the queues. ith integer ( 1-based ) is the initial size of queue i [ 0 <= initial size <= 100,000,000 ]

Each of the next Q lines is one of the following

1 A [ One pilgrim enters the queue# A ( 1 <= A <= N ) ]

2 X [ Find the number of queues having atleast X pilgrims currently ( 0 <= X <= 1,000,000,000 ) ]

3 Y [ Open the doors of all the queues having atleast Y pilgrims ( 1 <= Y <= 1,000,000,000 ), and thus allowing only one pilgrim to enter the temple from each of them ]For each query of type ""2 X"" , print the answer in a new line.",4721,3548,0,219,0.545851528384,3,1
45545,0.0561752281128,CANDYSTN,"      Little Pratya loves collecting candies and she also likes playing games :).  Today Pratya is travelling in bus and she has a bag full of N candies. She looks outside the window and notices milestones with numbers written on them. She decides to play a game. She wants to select some initial non-zero number of candies from the bag and call it her collection of candies. When she sees a milestone on the way, she will add or remove some candies from her collection as following. Let the previous milestone number be a1 and the current milestone number be a2 .        a2 > a1 : Pratya adds ( a2 - a1 ) candies to her collection (thus, her bag of candies loses them). If the bag doesn't contain  at least ( a2 - a1 ) candies, she starts crying.  a2 < a1 : Pratya removes ( a1 - a2 ) candies from her collection (thus, her bag of candies gains them). If her collection doesn't contain  more than ( a1 - a2 ) candies, she starts crying.  a1 = a2 : Pratya is bored to see the same number again and so she eats one of the candies from her collection.  Moreover, Pratya always wants her candy collection to have at least one candy, otherwise she starts crying. Given the numbers written on all the milestones in order, find the minimum number of candies Pratya should select in the beginning so that she doesn't have to cry at all.  If it is not possible , print -1. Note that no change to the collection happens when she sees the first milestone.     The first line contain the number of test cases T . Each test case has two lines. The first line specifies N and M . N is the number of candies in the bag and M is the total number of milestones. Second line contains M integers, the numbers written on the milestones, in the order Pratya sees them.  ^ is used for power.  T <= 150  1 <= N <= 10^7  2 <= M <= 10^4  Each milestone number will be between [-10^6,10^6].   For each test case output the minimum number of candies that should be selected from the bag or -1 if its not possible  Example  Input: 3 10 5 1 5 1 -1 -2 2 5 1 5 1 -1 -2 100 3 1 2 3 Output: 4 -1 1  Note : Large input, prefer using scanf / printf to cin / cout  * There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted. ",-0.20433680515,MILESTN,"a2 > a1 : Pratya adds ( a2 - a1 ) candies to her collection (thus, her bag of candies loses them). If the bag doesn't contain at least ( a2 - a1 ) candies, she starts crying.a2 < a1 : Pratya removes ( a1 - a2 ) candies from her collection (thus, her bag of candies gains them). If her collection doesn't contain more than ( a1 - a2 ) candies, she starts crying.a1 = a2 : Pratya is bored to see the same number again and so she eats one of the candies from her collection.Moreover, Pratya always wants her candy collection to have at least one candy, otherwise she starts crying. Given the numbers written on all the milestones in order, find the minimum number of candies Pratya should select in the beginning so that she doesn't have to cry at all. If it is not possible , print -1. Note that no change to the collection happens when she sees the first milestone.The first line contain the number of test cases T. Each test case has two lines. The first line specifies N and M. N is the number of candies in the bag and M is the total number of milestones. Second line contains M integers, the numbers written on the milestones, in the order Pratya sees them.^ is used for power.T <= 1501 <= N <= 10^72 <= M <= 10^4Each milestone number will be between [-10^6,10^6].For each test case output the minimum number of candies that should be selected from the bag or -1 if its not possible",4722,3243,0,213,0.538095238095,5,1
45568,-0.247524670322,MNMXPATH,"  I have been asked to set a problem by spoj, what do I do now ? Lets see the standard stuff in most of the programming contests and make one problem out of it. Hmm... many problems are having Binary digits, Grids, Paths, Coins, Maximize or Minimize something, so let me mix them all now in to one problem, the one problem to rule them all ;) Lets have a grid of size N x M having N rows and M columns, and put gold coins in it. How many in each cell ? , lets involve binary here. I'll give you two binary strings A [1...N] and B [1...M]. Cell (i,j) (1-based indexing) Row-i and Column-j in the grid contains A[i] * B[j] gold coins. From a cell (i,j), you can move to any of the 4 adjacent cells (i-1,j), (i+1,j), (i,j-1), (i,j+1) in one step. I want a path of minimum length from top-left cell (1,1) to bottom-right cell (N,M), and the value of this path = number of gold coins it covers. Find the maximum value of such a path. Not every one wants to become a Raja, also find the minimum value of such a path.   First line contains T [ number of test cases, around 10 ]. T cases follow, each having 2 lines, ""N A"" and ""M B"" (quotes for clarity only). [ 1 <= N,M <= 100,000 and each character in A, B is either 0 or 1 ]   For each test case, print the maximum value of a path followed by the minimum value of a path, in the same line, separated by a single space. Output of each case should be in a separate line.  Example  Input: 2 4 1001 3 110 5 01111 3 110 Output: 3 1 5 0 Explanation: Case 1 : A Maximum path in bold  1 1 0  0 0 0  0 0 0  1 1 0  Case 1 : A Minimum path in bold  1 1 0  0 0 0  0 0 0  1 1 0  ",-0.20844887306,PATH01,"I have been asked to set problems for this contest, what do I do now ? Lets see the standard stuff in most of the programming contests and make one problem out of it. Hmm... many problems are having Binary digits, Grids, Paths, Coins, Maximize or Minimize something, so let me mix them all now in to one problem, the one problem to rule them all ;)

Lets have a grid of size N x M having N rows and M columns, and put gold coins in it. How many in each cell ? , lets involve binary here. I'll give you two binary strings A[1...N] and B[1...M]. Cell (i,j) (1-based indexing) Row-i and Column-j in the grid contains A[i] * B[j] gold coins. From a cell (i,j), you can move to any of the 4 adjacent cells (i-1,j), (i+1,j), (i,j-1), (i,j+1) in one step. I want a path of minimum length from top-left cell (1,1) to bottom-right cell (N,M), and the value of this path = number of gold coins it covers. Find the maximum value of such a path. Not every one wants to become a Raja, also find the minimum value of such a path.First line contains T [ number of test cases, around 10 ]. T cases follow, each having 2 lines, ""N A"" and ""M B"" (quotes for clarity only). [ 1 <= N,M <= 3000, and each character in A, B is either 0 or 1 ]For each test case, print the maximum value of a path followed by the minimum value of a path, in the same line, separated by a single space. Output of each case should be in a separate line.",4723,2238,0,81,0.843434343434,6,1
45585,-0.255245854181,FAVSUBS,"         Little Princess Rapunzel is blessed with long (really looong!) hair, which is golden colored and has healing power. After the end of a long happy story, she marries her lover Flynn. They decide to lead a normal life by getting rid of the mysterious hair, which when cut loses its power and turns brown. There are many colorful beads on her hair in order. Rapunzel has some K favorite colors B [1...K] To remember good old stories, she wants to keep a part of her hair after its cut. A favorite sub hair is that continuous part of the hair, which has each of her favorite color beads at least once.      For the purpose of this problem, we represent a color as an integer and Hair as an array A [1...N], which has exactly N colored beads in the given order. Could you please tell her the total number of ways she can cut her favorite sub hair (sub-array). Two sub-arrays are different, if their starting or ending index in A differ.   First line contains T [ number of test cases, around 10 ]. Each test case is preceded by a blank line, including the 1st case. [ -2,000,000 <= A[i], B[j] ( colors ) <= 2,000,000 ] Each test case has 4 lines, as described below. N [ 1 <= N <= 100,000 ] < Array A : N integers, separated by spaces > K [ 1 <= K <= 1,000 ] < Array B : K integers, separated by spaces, her favorite colors, without repetition >   For each test case, output the number of different sub-arrays, which has her favorite color appearing at least once, in a separate line.  Example  Input: 3

4
1 2 3 1
2
1 2

6
10 20 30 40 50 60
1
20

5
1 2 3 4 5
2
2 6 Output: 4
10
0 Explanation: Case 1 : Favorite sub-arrays in bold [ 1 2 3 1 ], [ 1 2 3 1 ] , [ 1 2 3 1 ], [ 1 2 3 1 ]  Note: Large input, prefer using scanf / printf to cin / cout  There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted. ",-0.206688163775,FAVSUBS,"For the purpose of this problem, we represent a color as an integer and Hair as an array A[1...N], which has exactly N colored beads in the given order. Could you please tell her the total number of ways she can cut her favorite sub hair (sub-array). Two sub-arrays are different, if their starting or ending index in A differ.First line contains T [ number of test cases, around 10 ]. Each test case is preceded by a blank line, including the 1st case. [ -2,000,000 <= A[i], B[j] ( colors ) <= 2,000,000 ]
Each test case has 4 lines, as described below.
N [ 1 <= N <= 100,000 ]
< Array A : N integers, separated by spaces >
K [ 1 <= K <= 1,000 ]
< Array B : K integers, separated by spaces, her favorite colors, without repetition >For each test case, output the number of different sub-arrays, which has her favorite color appearing at least once, in a separate line.",4724,2918,1,230,0.48401826484,0,1
45589,-0.267256584627,SNAKYNUM,"  Sanky is a school kid and is very fond of numbers. His teacher gave his class a home work, asking each of them to invent a new series of numbers, with a large collection of numbers in them. His friend Evan has already invented one, which starts from 0 and picks every alternate number : {0, 2, 4 ,...} and he named them 'Evan' numbers :). Sanky is not happy because he couldn't invent that first and thinks picking every alternate number starting from 1 : {1, 3, 5, ... } would not be very odd ;).      After refreshing at home, he comes up with a new series of numbers in which the digits alternate between increasing and decreasing when compared with the digit before it, in a zig-zag fashion. To make it clear, if the number is abcde, either a < b > c < d > e or a > b < c > d < e. He cleverly named them 'Snaky Numbers' :). Eg: 8, 90, 243516 and 31524 are Snaky while 44, 123 and 4235 are not. He is now wondering if his Snaky series is large enough. Particularly, he wants to know how many 'Snaky Numbers' are there of length at most  N . Count only non-negative integers, without leading zeros.         The answer may get very big and not fit in Sanky's book, so please just tell him the ( answer modulo M )   First line contains T [ number of test cases, around 50 ].  Each of the next T lines contains two integers N M.  1 <= N <= 1,000,000,000  2 <= M <= 1,000,000,007   For each test case, output  ( Number of Snaky numbers of length at most N ) % M, in a separate line  Example  Input: 3 1 101 2 107 3 1001 Output: 10 91 616  Hint: You may have to use the mod operator wisely !   * There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted. ",-0.207864953654,SNAKENUM,"Sanky is a school kid and is very fond of numbers. His teacher gave his class a home work, asking each of them to invent a new series of numbers, with a large collection of numbers in them. His friend Evan has already invented one, which starts from 0 and picks every alternate number : {0, 2, 4 ,...} and he named them 'Evan' numbers :). Sanky is not happy because he couldn't invent that first and thinks picking every alternate number starting from 1 : {1, 3, 5, ... } would not be very odd ;).After refreshing at home, he comes up with a new series of numbers in which the digits alternate between increasing and decreasing when compared with the digit before it, in a zig-zag fashion. To make it clear, if the number is abcde, either a < b > c < d > e or a > b < c > d < e. He cleverly named them 'Snaky Numbers' :). Eg: 8, 90, 243516 and 31524 are Snaky while 44, 123 and 4235 are not. He is now wondering if his Snaky series is large enough. Particularly, he wants to know how many 'Snaky Numbers' are there of length at most N. Count only non-negative integers, without leading zeros.MFirst line contains T [ number of test cases, around 60 ]. Each of the next T lines contains two integers N M [ 1 <= N <= 500,000 & 2 <= M <= 500,000 ]For each test case, output ( Number of Snaky numbers of length at most N ) % M, in a separate line",4725,2593,0,103,0.713656387665,1,1
45593,-0.190044746042,GRDGOVT,"  The Government of Greedistan has just found out that there is a lot of gold beneath some land area in their country. They quickly surveyed the land area and found that some people are living there, and surprisingly the houses are organized in a M x N grid, each cell having exactly one house.  To acquire all the gold beneath this area, the government has planned to make up a rumor ( a volcano is about to erupt near by ) and let the people vacate their houses themselves. They start the rumor at only one house on day 1. It takes exactly one day for the rumor to spread from a house to any of its neighbors ( top, left, bottom, right ). They all vacate their houses as soon as they know about the volcano.  The government wants to choose the starting house for the rumor in such a way that it takes minimum number of days for all the people to vacate their houses. Find this minimum time.   The first line contains T , the number of test cases. Each of the next T lines contain two integers M and N . If one of M or N is zero, other one will also be zero, and this means, there are no houses at all.  T <= 1,000  0 <= M <= 1,000,000  0 <= N <= 1,000,000   The minimum number of days it takes to spread the rumor to all houses.  Example  Input: 2 1 5 3 4 Output: 3 4 Explanation: Case 1 : Starting cell (1,3) Case 2 : See the following table with a possible answer, each cell has the first day in which they hear the rumor.   3 2 3 4   2 1 2 3   3 2 3 4  ",-0.193980167233,GREEDY,"The Government of Greedistan has just found out that there is a lot of gold beneath some land area in their country. They quickly surveyed the land area and found that some people are living there, and surprisingly the houses are organized in a M x N grid, each cell having exactly one house.To acquire all the gold beneath this area, the government has planned to make up a rumor ( a volcano is about to erupt near by ) and let the people vacate their houses themselves. They start the rumor at only one house on day 1. It takes exactly one day for the rumor to spread from a house to any of its neighbors ( top, left, bottom, right ). They all vacate their houses as soon as they know about the volcano.The government wants to choose the starting house for the rumor in such a way that it takes minimum number of days for all the people to vacate their houses. Find this minimum time.The first line contains T, the number of test cases. Each of the next T lines contain two integers M and N. If one of M or N is zero, other one will also be zero, and this means, there are no houses at all.T <= 1,0000 <= M <= 1,000,0000 <= N <= 1,000,000The minimum number of days it takes to spread the rumor to all houses.",4726,3669,0,82,0.739130434783,5,1
45597,0.0390170417605,CLNFORUM,"  Long ago during the Jurassic Park age, there was a company TopHunters, which used to conduct hunting competitions for the Dinosaurs around the world. Petrosaurus was believed to be the greatest hunter of that time and all other dinosaurs enjoyed watching the hunting videos posted by him in the forums ( yes, they had a website :) ).  Many Indian dinosaurs used to post in sms language in the forums and annoy others. Vexosaurus was so annoyed reading the posts with numbers used in place of letters. He decided to correct all those posts, before the forums get Rusty . Could you please code for him and replace the following words in 1st column with their corresponding words in 2nd column         8  ate    w8  wait    gr8  great    4  for    b4  before                      Lets not make this complex and just replace the words when they appear entirely as a word themselves, and not as a subpart of bigger words ( see examples for clarity ). A word is a continuous sequence of non-space characters.  Disclaimer : This is just a fictional story. Any resemblance to real persons or company or dinosaurs is purely coincidental :|   First line contains T [ number of test cases, around 50 ]. Each of the next T lines contains a sentence with not more than 100 characters [ 'a' - 'z' , '0' - '9' , space ]. There can be 2 or more continuous spaces and you have to preserve them, in the output. Input sentence will not begin or end with a space.   For each test case, output the corrected sentence, in a new line.  Example  Input: 3 i 8 food b4 gr8 2 see you w8ing 1234   5678   9 Output: i ate food before great 2 see you w8ing 1234   5678   9 ",-0.179515692548,CLNFORUM,"Long ago during the Jurassic Park age, there was a company TopHunters, which used to conduct hunting competitions for the Dinosaurs around the world. Petrosaurus was believed to be the greatest hunter of that time and all other dinosaurs enjoyed watching the hunting videos posted by him in the forums ( yes, they had a website :) ).Many Indian dinosaurs used to post in sms language in the forums and annoy others. Vexosaurus was so annoyed reading the posts with numbers used in place of letters. He decided to correct all those posts, before the forums get Rusty. Could you please code for him and replace the following words in 1st column with their corresponding words in 2nd column8 ate
w8 wait
gr8 great
4 for
b4 beforeDisclaimerFirst line contains T [ number of test cases, around 50 ]. Each of the next T lines contains a sentence with not more than 100 characters [ 'a' - 'z' , '0' - '9' , space ]. There can be 2 or more continuous spaces and you have to preserve them, in the output. Input sentence will not begin or end with a space.For each test case, output the corrected sentence, in a new line.",4727,4181,1,164,0.65306122449,0,1
45604,-0.0758216658695,BTCODE_A,"  Given 2 points in 2 dimensional space (xs,ys) and (xd,yd), your task is to find whether (xd,yd) can be reached from (xs,ys) by making a sequence of zero or more operations. From a given point (x, y), the operations possible are: a) Move to point (y, x) b) Move to point (x, -y) c) Move to point (x+y, y) d) Move to point (2*x, y)   The first line of input contains T, the number of test cases. T lines follow, one for each test case. For each test case, the input contains one line denoting the 4 integers xs, ys, xd, yd   Output T lines, one for each test case. For each test case, output ""YES"" if (xd,yd) is reachable from (xs,ys) and ""NO"" otherwise. (quotes for clarity)  Example  Input: 1
1 1 2 2 Output: YES Constraints: T <= 25
-10^10 <= xs, ys, xd, yd <= 10^10
Note that, although the input values are constrained by the above inequality, the coordinates of the points
at the intermediate steps need not be.  Explanation:  Test case 1: We can move in the following manner: (1,1) -> (2,1), using the operation (x,y) -> (2*x,y). Then, move from (2,1) -> (1,2), using the operation (x,y) -> (y,x). Finally use the operation (x,y) -> (2*x,y) to move from (1,2) -> (2,2). ",-0.204028787308,BTCODE_A,"Given 2 points in 2 dimensional space (xs,ys) and (xd,yd), your task is to find whether (xd,yd) can be reached from (xs,ys) by making a sequence of zero or more operations.
From a given point (x, y), the operations possible are:
a) Move to point (y, x)
b) Move to point (x, -y)
c) Move to point (x+y, y)
d) Move to point (2*x, y)The first line of input contains T, the number of test cases. T lines follow, one for each test case. For each test case, the input contains one line denoting the 4 integers xs, ys, xd, ydOutput T lines, one for each test case. For each test case, output ""YES"" if (xd,yd) is reachable from (xs,ys) and ""NO"" otherwise. (quotes for clarity)",4729,3268,1,104,0.507142857143,0,1
45605,-0.268944288644,BTCODE_B,"  You are given 'n' integers k 1 , k 2 , ...., k n and an integer 'x', which satisfy the equation x 1 k 1 * x 2 k 2 * ..... * x n k n = x. You are also given values a 1 , a 2 , ...., a n and y 1 , y 2 , ...., y n . Your task is to find the least positive value 'v', that can be taken by the expression: a 1 *x 1 y 1 + a 2 *x 2 y 2 + ... + a n *x n y n . Note that x 1 , x 2 , x 3 , ..... x n are some variables (not necessarily integers), which can only take positive values.   The first line of input contains a single integer 't', denoting the number of test cases. The first line of each testcase contains two space separated integers 'n' and 'x'. Next line contains 'n' integers k 1 , k 2 , ..., k n . Next line contains 'n' integers a 1 , a 2 , ..., a n . Next line contains 'n' integers y 1 , y 2 , ..., y n .   For each testcase output the least positive value 'v' that can be taken by the expression. To avoid floating point errors, round it off to the nearest integer.  For example, 12.6 is rounded off to 13, and 12.4 is rounded off to 12. To avoid ambiguity, there will be no test case for which the fractional part of the answer equals 0.5.  Example  Input: 2
1 4
2
3
3
2 6
1 1
1 1
1 1 Output: 24
5 Constraints: t <= 25
1 <= n <= 20
1 <= x <= 1000000
1 <= k i , a i , y i <=20
x i > 0  Explanation:  Test case 1: x 1 2 = 4. Therefore, x 1 = 2 and 3*x 1 3 = 24. Test case 2: x 1 *x 2 = 6. Minimum value of x 1 + x 2 is 2*sqrt(6) = 4.89897. x 1 = sqrt(6) and x 2 = sqrt(6) gives this solution. Answer is 4.89897, which when rounded off to the nearest integer equals 5. ",-0.208446059072,BTCODE_B,"You are given 'n' integers k1, k2, ...., kn and an integer 'x', which satisfy the equation x1k1 * x2k2 * ..... * xnkn = x. You are also given values a1, a2, ...., an and y1, y2, ...., yn. Your task is to find the least positive value 'v', that can be taken by the expression: a1*x1y1 + a2*x2y2 + ... + an*xnyn. Note that x1, x2, x3, ..... xn are some variables (not necessarily integers), which can only take positive values.The first line of input contains a single integer 't', denoting the number of test cases.
The first line of each testcase contains two space separated integers 'n' and 'x'.
Next line contains 'n' integers k1, k2, ..., kn.
Next line contains 'n' integers a1, a2, ..., an.
Next line contains 'n' integers y1, y2, ..., yn.For each testcase output the least positive value 'v' that can be taken by the expression. To avoid floating point errors, round it off to the nearest integer.For example, 12.6 is rounded off to 13, and 12.4 is rounded off to 12. To avoid ambiguity, there will be no test case for which the fractional part of the answer equals 0.5.",4730,2236,1,186,0.529069767442,0,1
45609,-0.217444922571,BTCODE_C,"  You are given 'n' inequalities. Each inequality is of one of the following 4 types: Type 1: x > v Type 2: x < v Type 3: x = v Type 4: x != v  where 'x' is a variable which can only take non-negative integral values.  Your task is to find the maximum number of inequalities which are satisfied for some value of 'x'. You are also required to find the minimum value of 'x' for which the maximum number of inequalities are satisfied.   The first line of input contains a single integer 'n', denoting the total number of inequalities. Each of the next 'n' lines contain 2 space separated integers t i and v i . t i denotes the type of inequality and v i denotes the value on the right hand side of the inequality.   Output two space separated integers, the first integer denoting the maximum number of inequalities which are satisfied for some value of 'x', and the second integer denoting the minimum value of 'x' for which the maximum number of inequalities are satisfied.  Example  Input: 4
1 10
2 9
3 7
4 4 Output: 3 7 Constraints: 1 <= n <= 100000
1 <= t i <= 4
1 <= v i <= 10^18  Explanation:  The given inequalities are: 1) x > 10, 2) x < 9, 3) x = 7, 4) x != 4. For x=7, the inequalities 2), 3) and 4) are satisfied. ",-0.208446059072,BTCODE_C,"You are given 'n' inequalities. Each inequality is of one of the following 4 types:
Type 1: x > v
Type 2: x < v
Type 3: x = v
Type 4: x != vwhere 'x' is a variable which can only take non-negative integral values.Your task is to find the maximum number of inequalities which are satisfied for some value of 'x'. You are also required to find the minimum value of 'x' for which the maximum number of inequalities are satisfied.The first line of input contains a single integer 'n', denoting the total number of inequalities.
Each of the next 'n' lines contain 2 space separated integers ti and vi. ti denotes the type of inequality and vi denotes the value on the right hand side of the inequality.Output two space separated integers, the first integer denoting the maximum number of inequalities which are satisfied for some value of 'x', and the second integer denoting the minimum value of 'x' for which the maximum number of inequalities are satisfied.",4731,2235,1,84,0.588709677419,0,1
45614,0.397972502004,BTCODE_D,"  Chakra is a young and dynamic entrepreneur, who is developing rapidly as a successful hotelier. He owns the Quickbyte chain of restaurants, 'M' of which are fully functional now. He divides each day into 'N' time slots. For each time slot 'j', in every restaurant 'i', there are A ij waiters and B ij customers. Being a quality conscious person, he wants each waiter to handle atmost one customer in a given time slot. Since he is really busy, in a day each restaurant is open only during one of the time slots. Since the hunger and demand for food varies during the day, the price which the customer is willing to pay varies, and is given by C ij for a restaurant 'i' during a time slot 'j'.  Given the values of A ij , B ij and C ij , find the maximum profit which Chakra can make in a day.   The first line of input contains an integer 't', denoting the number of test cases. For each testcase, the first line contains 2 space separated integers 'M' and 'N'. Each of the next 'M' lines contains 'N' integers. The j th integer on the i th line denotes the value of A ij  Each of the next 'M' lines contains 'N' integers. The j th integer on the i th line denotes the value of B ij  Each of the next 'M' lines contains 'N' integers. The j th integer on the i th line denotes the value of C ij   For each test case output one value, denoting the maximum profit which Chakra can make in a day.  More than one restaurant can be open during a given time slot.  Example  Input: 1
2 3
1 2 3
3 2 1
3 2 1
1 2 3
4 5 2
3 1 6 Output: 16 Constraints: t <= 50
1 <= M,N <= 100
1 <= A ij , B ij <= 5000
0 <= C ij <= 10^9  Explanation:  Test case 1: By opening the first restaurant at time slot 2 and second restaurant at time slot 3, Chakra makes a profit = 2*5 + 1*6 = 16. Note that although there are 3 customers for the second restaurant at time slot 3, since there is only 1 waiter, only 1 customer can be served. ",-0.201083939479,BTCODE_D,"Chakra is a young and dynamic entrepreneur, who is developing rapidly as a successful hotelier. He owns the Quickbyte chain of restaurants, 'M' of which are fully functional now. He divides each day into 'N' time slots. For each time slot 'j', in every restaurant 'i', there are Aij waiters and Bij customers. Being a quality conscious person, he wants each waiter to handle atmost one customer in a given time slot. Since he is really busy, in a day each restaurant is open only during one of the time slots. Since the hunger and demand for food varies during the day, the price which the customer is willing to pay varies, and is given by Cij for a restaurant 'i' during a time slot 'j'.Given the values of Aij, Bij and Cij, find the maximum profit which Chakra can make in a day.The first line of input contains an integer 't', denoting the number of test cases.
For each testcase, the first line contains 2 space separated integers 'M' and 'N'.
Each of the next 'M' lines contains 'N' integers. The ith integer on the jth line denotes the value of Aij
Each of the next 'M' lines contains 'N' integers. The ith integer on the jth line denotes the value of Bij
Each of the next 'M' lines contains 'N' integers. The ith integer on the jth line denotes the value of CijFor each test case output one value, denoting the maximum profit which Chakra can make in a day.",4732,159,1,147,0.587912087912,0,1
45617,-0.288685712306,BTCODE_E,"  Venkatesh is an expert in mathematics, and loves playing around with polynomials during his free time. His favourite mathematical equation is pretty obviously: f(x) = a n *x n + a n-1 *x n-1 + ..... + a 1 *x + a 0 . His friend Suhash loves posing challenges to Venkatesh. Once they were discussing a particular problem at Snacky, which goes as follows:  Suhash would choose an integer 'n' as the degree of the polynomial and give Venkatesh the value of the polynomial at 'n+1' equally spaced points, i.e  he gives Venkatesh integers 'n', 'x 0 ', 'd' and g 0 , g 1 , g 2 , ..., g n such that:  f(x 0 ) = g 0 , f(x 0 +d) = g 1 , f(x 0 +2*d) = g 2 , ......f(x 0 +n*d) = g n . Now, Venkatesh is required to find the polynomial. Since he hates floating point values, he decides to find the polynomial in coefficient form, modulo a prime number. Can you help Venkatesh find the polynomial?   The first line of input contains an integer 't', denoting the number of test cases. For each test case, the first line contains 3 space separated integers 'n', 'x 0 ', 'd'. The next line contains 'n+1' space separated integers g 0 , g 1 , g 2 , .....g n .   For each test case output 'n+1' integers, denoting the coefficients of the polynomial a 0 , a 1 , a 2 ,...... a n . All the coefficients that are printed should be non-negative and should be less than 1000000007.  You are required to find coefficients of the polynomial a 0 , a 1 , a 2 ,...... a n , which satisfy the equations:  f(x 0 )%1000000007 = g 0 , f(x 0 +d)%1000000007 = g 1 , ....... f(x 0 +n*d)%1000000007 = g n . It is guarenteed that there is a unique solution for every test case.  Example  Input: 1
3 1 1
10 26 58 112 Output: 4 3 2 1 Constraints: t <= 25
1 <= n <= 1000
0 <= x 0 <= 100000
0 < d  <= 10000
0 <= g i <= 10^9  Explanation:  Test case 1: It can be seen that the polynomial f(x) = x 3 + 2*x 2 + 3*x + 4 satisfies the above input. ",-0.209035028638,BTCODE_E,"Venkatesh is an expert in mathematics, and loves playing around with polynomials during his free time. His favourite mathematical equation is pretty obviously: f(x) = an*xn + an-1*xn-1 + ..... + a1*x + a0. His friend Suhash loves posing challenges to Venkatesh. Once they were discussing a particular problem at Snacky, which goes as follows:Suhash would choose an integer 'n' as the degree of the polynomial and give Venkatesh the value of the polynomial at 'n+1' equally spaced points, i.e he gives Venkatesh integers 'n', 'x0', 'd' and g0, g1, g2, ..., gn such that: f(x0) = g0, f(x0+d) = g1, f(x0+2*d) = g2, ......f(x0+n*d) = gn. Now, Venkatesh is required to find the polynomial. Since he hates floating point values, he decides to find the polynomial in coefficient form, modulo a prime number. Can you help Venkatesh find the polynomial?The first line of input contains an integer 't', denoting the number of test cases.
For each test case, the first line contains 3 space separated integers 'n', 'x0', 'd'. The next line contains 'n+1' space separated integers g0, g1, g2, .....gn.For each test case output 'n+1' integers, denoting the coefficients of the polynomial a0, a1, a2,...... an. All the coefficients that are printed should be non-negative and should be less than 1000000007.You are required to find coefficients of the polynomial a0, a1, a2,...... an, which satisfy the equations: f(x0)%1000000007 = g0, f(x0+d)%1000000007 = g1, ....... f(x0+n*d)%1000000007 = gn. It is guarenteed that there is a unique solution for every test case.",4733,1604,1,156,0.589622641509,0,1
45650,-0.173670461409,BTCODE_G,"  Nivash and Bhoopathi play a game of memory, which goes as follows: There is a tree containing 'N' nodes, all of which are initially uncoloured.  In the game, Nivash has 2 moves:  1) Command: Color a particular node with a given color. 2) Query: Ask Bhoopathi if the path from node 'a' to node 'b' (both inclusive), is monochromatic or not.(i.e Whether all nodes on the path have the same color).  Nivash can do these steps in any order he wishes and he colors each node atmost once. Whenever Nivash puts forth a 'Query' at Bhoopathi, Bhoopathi has to recollect the colouring of the tree and reply either ""YES"" or ""NO"". Can your help Bhoopathi answer these queries?   The first line of input contains an integer 'N', denoting the number of nodes in the tree.  The next 'N-1' lines contain 2 space separated integers 'u' and 'v', denoting an edge between vertex 'u' and vertex 'v'. The next line contains an integer 'Q', denoting the number of inputs (commands and queries) which Nivash wants to give. The next 'Q' lines contain 3 space separated integers 'x', 'a', 'b'. If 'x' is 1, it denotes a command to color node 'a' with a color 'b'. If 'x' is 2, it denotes a query and Bhoopathi should answer if the path from node 'a' to node 'b' (both inclusive), is monochromatic or not.  All vertices of the tree are 0 based.   For each query, output ""YES"" or ""NO"" (quotes for clarity), denoting whether the path from node 'a' to node 'b' (both inclusive), is monochromatic or not.  Output ""NO"", even if all nodes on the path from node 'a' to node 'b' (both inclusive) are uncolored.  Example  Input: 3
0 1
1 2
7
1 0 11
2 0 1
2 0 2
1 2 12
1 1 11
2 0 1
2 0 2 Output: NO
NO
YES
NO Constraints: 1 <= N <= 100000 
1 <= Q <= 200000
1 <= color value <= 30.  Explanation:  Initially node '0' is colored with color '11', so path between node '0' and node '1' is not monochromatic. Hence, the answer is ""NO"". The same explanation holds for the path between node '0' and  node '2'. Then node '2' is colored with color '12' and node '1' with color '11'. Now, all nodes on the path between node '0' and node '1' are colored with only one color ('11'), so the answer is ""YES"". The path between node '0' and node '2' has 2 colors ('11' and '12'), hence the answer is ""NO"". ",-0.204323272091,BTCODE_G,"Nivash and Bhoopathi play a game of memory, which goes as follows: There is a tree containing 'N' nodes, all of which are initially uncoloured. In the game, Nivash has 2 moves:1) Command: Color a particular node with a given color.
2) Query: Ask Bhoopathi if the path from node 'a' to node 'b' (both inclusive), is monochromatic or not.(i.e Whether all nodes on the path have the same color).Nivash can do these steps in any order he wishes and he colors each node atmost once. Whenever Nivash puts forth a 'Query' at Bhoopathi, Bhoopathi has to recollect the colouring of the tree and reply either ""YES"" or ""NO"". Can your help Bhoopathi answer these queries?The first line of input contains an integer 'N', denoting the number of nodes in the tree. The next 'N-1' lines contain 2 space separated integers 'u' and 'v', denoting an edge between vertex 'u' and vertex 'v'.
The next line contains an integer 'Q', denoting the number of inputs (commands and queries) which Nivash wants to give. The next 'Q' lines contain 3 space separated integers 'x', 'a', 'b'. If 'x' is 1, it denotes a command to color node 'a' with a color 'b'. If 'x' is 2, it denotes a query and Bhoopathi should answer if the path from node 'a' to node 'b' (both inclusive), is monochromatic or not.All vertices of the tree are 0 based.For each query, output ""YES"" or ""NO"" (quotes for clarity), denoting whether the path from node 'a' to node 'b' (both inclusive), is monochromatic or not.Output ""NO"", even if all nodes on the path from node 'a' to node 'b' (both inclusive) are uncolored.",4735,3242,1,158,0.671568627451,0,1
45651,-0.199420144445,BTCODE_H,"  What is the expected number of nodes in a trie when 'N' words, each of length 'L' are inserted into it. The words are made up only of 0's and 1's. The words may be repeated and all possible permutations of words are equally likely. Initially the trie consists of only one node (root node).   The first line of input contains an integer 't', denoting the number of test cases. Each of the next 't' lines contain 2 space separated integers 'N' and 'L'.   For each test case, output one floating point value denoting the expected number of nodes in the trie. Output the values rounded off to 2 decimal places. Always print 2 digits after the decimal point.  To know more about tries visit here .  Example  Input: 2
1 3
2 2 Output: 4.00
4.25 Constraints: t <= 25
1 <= N <= 300
1 <= L <= 300  Explanation:  Test case 1: There are 8 possible words of length 3. Which ever word is inserted into the trie, we get only 4 nodes. ",-0.207268119941,BTCODE_H,"What is the expected number of nodes in a trie when 'N' words, each of length 'L' are inserted into it. The words are made up only of 0's and 1's. The words may be repeated and all possible permutations of words are equally likely. Initially the trie consists of only one node (root node).The first line of input contains an integer 't', denoting the number of test cases. Each of the next 't' lines contain 2 space separated integers 'N' and 'L'.For each test case, output one floating point value denoting the expected number of nodes in the trie. Output the values rounded off to 2 decimal places. Always print 2 digits after the decimal point.To know more about tries visit here.",4736,2764,1,60,0.666666666667,0,1
45665,-0.302418876592,BTCODE_I,"  Harsha is given 9 integers a 1 , a 2 , a 3 , .... a 9 . This denotes that he is given a 1 1's, a 2 2's,......a 9 9's. Let 'x' = (a 1 + a 2 + ...a 9 ). Now, Harsha makes all possible 'x' digit numbers by using these given digits. Let S be the set of all such numbers which he makes. Now he constructs a directed graph containing |S| nodes, in which each node denotes a unique number from the set. For all numbers u,v belonging to S, there is a directed edge from node 'u' to node 'v in the graph iff u>v. It is easy to note that we obtain a directed acyclic graph. Whats more, the edges of the graph are weighted. The weight of an edge joining node 'u' and node 'v' is equal to u+v. Now, Deepak decides to test Harsha's memory and gives him 'Q' queries. Each query consists of two numbers 'u', 'v' (u>v, both belonging to the set S). For each query Harsha must provide the following answers:  1) How many distinct paths are there from node 'u' to node 'v' in the graph. 2) For each distinct path 'i' from node 'u' to node 'v', let S i denote the sum of weights of all edges on this path. Calculate the value of sum(S i ), for every distinct path 'i' from node 'u' to node 'v'.   The first line of input contains 9 integers a 1 , a 2 , ....a 9 . The second line contains a single integer 'Q', denoting the number of queries. Each of the next 'Q' lines contain 2 numbers 'u' and 'v'.   For each query, output 2 space separted integers denoting the number of distinct paths and sum of weights of all paths respectively. Since the output can be large, output these quantities modulo 1000000007.  Two paths (v 1 , v 2 , .... v m ) and (u 1 , u 2 , .... u n ) are distinct if: 1) m != n 2) m = n, there exists some index 'k' (1 <= k <= m) such that v k != u k  Example  Input: 2 0 1 0 0 0 0 0 0
1
311 113 Output: 2 1110 Constraints: 1 <= (a 1 + a 2 + .... a 9 ) <= 500
1 <= Q <= 20
a i >= 0  Explanation:  Test case 1: The set S for the above problem is {311, 113, 131}. The edges of the graph are 311->131, 311->113, 131->113. There are 2 distinct paths from 311 to 113, namely (311->131->113) and (311->113). The sum of weights of edges on path-1 = (311+131)+(131+113) = 686. For path-2, the sum of weights of edges = (311+113) = 424. Therefore, answer  = 686 + 424 = 1110. ",-0.208446059072,BTCODE_I,"Harsha is given 9 integers a1, a2, a3, .... a9. This denotes that he is given a1 1's, a2 2's,......a9 9's. Let 'x' = (a1 + a2 + ...a9). Now, Harsha makes all possible 'x' digit numbers by using these given digits. Let S be the set of all such numbers which he makes. Now he constructs a directed graph containing |S| nodes, in which each node denotes a unique number from the set. For all numbers u,v belonging to S, there is a directed edge from node 'u' to node 'v in the graph iff u>v. It is easy to note that we obtain a directed acyclic graph. Whats more, the edges of the graph are weighted. The weight of an edge joining node 'u' and node 'v' is equal to u+v. Now, Deepak decides to test Harsha's memory and gives him 'Q' queries. Each query consists of two numbers 'u', 'v' (u>v, both belonging to the set S). For each query Harsha must provide the following answers:1) How many distinct paths are there from node 'u' to node 'v' in the graph.
2) For each distinct path 'i' from node 'u' to node 'v', let Si denote the sum of weights of all edges on this path. Calculate the value of sum(Si), for every distinct path 'i' from node 'u' to node 'v'.The first line of input contains 9 integers a1, a2, ....a9. The second line contains a single integer 'Q', denoting the number of queries. Each of the next 'Q' lines contain 2 numbers 'u' and 'v'.For each query, output 2 space separted integers denoting the number of distinct paths and sum of weights of all paths respectively. Since the output can be large, output these quantities modulo 1000000007.Two paths (v1, v2, .... vm) and (u1, u2, .... un) are distinct if:
1) m != n
2) m = n, there exists some index 'k' (1 <= k <= m) such that vk != uk",4737,2234,1,165,0.620408163265,0,1
45693,-0.311860427038,BTCODE_J,"  Vikas is the chief interior designer incharge of the Taj Palace, Mumbai. He wants to make an impressive and colourful pattern in the courtyard. Importing exotic tiles has become very difficult after the Mumbai terror attacks, and therefore Vikas has only 4 kinds of tiles to choose from:  A B C D
==    ==    == ==
XX    X     X X
XX    X     XX  Any rotation of above tiles is also permitted.  Each tile is available in 'k' different colors, and there's an infinite supply of all tiles. The courtyard has dimensions 2 * 'n'. Vikas wants to tile the courtyard in such a way that no two adjacent tiles have the same color. Two tiles are considered adjacent if they share a common side. Two tilings are considered different if:  1) The arrangement of tiles is different. 2) There is atleast 1 position (1*1 square) which has different colors in the two arrangements.  Can you help Vikas find the number of different ways in which he can tile the courtyard, subject to the above conditions?   The first line of input contains a single integer 't', denoting the number of test cases. Each of the next 't' lines contains 2 space separated integers 'n' and 'k'.   For each test case output one integer, denoting the number of different ways in which the courtyard can be tiled.  Two tiles are considered adjacent if they share an edge. Two tiles which just share a common point are not considered adjacent.  Since the answers can be large, print all the quantities modulo 1000000007.  Example  Input: 2
1 1
1 2 Output: 1
4 Constraints: t <= 1000
1 <= n <= 10^9
1 <= k <= 1000  Explanation:  Test case 1: There is only 1 way to tile the courtyard, by using a 2*1 tile. Test case 2: Let '1' and '2' be the available colors. The grid can be tiled in 4 ways - 1) place one 2*1 tile of color '1', 2) place one 2*1 tile of color '2', 3) Place two 1*1 tiles (color '1' above and color '2' below), 4) Place two 1*1 tiles (color '2' above and color '1' below) ",-0.207562604724,BTCODE_J,"Vikas is the chief interior designer incharge of the Taj Palace, Mumbai. He wants to make an impressive and colourful pattern in the courtyard. Importing exotic tiles has become very difficult after the Mumbai terror attacks, and therefore Vikas has only 4 kinds of tiles to choose from:A      B      C       D
==    ==    ==    ==
XX    X     X      X
XX    X     XXAny rotation of above tiles is also permitted.Each tile is available in 'k' different colors, and there's an infinite supply of all tiles. The courtyard has dimensions 2 * 'n'. Vikas wants to tile the courtyard in such a way that no two adjacent tiles have the same color. Two tiles are considered adjacent if they share a common side. Two tilings are considered different if:1) The arrangement of tiles is different.
2) There is atleast 1 position (1*1 square) which has different colors in the two arrangements.Can you help Vikas find the number of different ways in which he can tile the courtyard, subject to the above conditions?The first line of input contains a single integer 't', denoting the number of test cases.
Each of the next 't' lines contains 2 space separated integers 'n' and 'k'.For each test case output one integer, denoting the number of different ways in which the courtyard can be tiled.Two tiles are considered adjacent if they share an edge. Two tiles which just share a common point are not considered adjacent.",4738,2689,1,113,0.635467980296,0,1
45699,-0.274952548019,BTCODE_K,"  Sumit specialises in sorting algorithms, and Abhishek decides to test Sumit's coding skills. An array of 'n' numbers a[0], a[1], a[2], ..., a[n-1] is given. Abhishek gives a sequence of inputs of the form ""v i j"". Each input is either a query or an update (query if 'v' is 0, update otherwise).  For any input of the form ""0 i j"" ,Sumit's output should be as follows: If the subarray a[i], a[i+1], ... a[j] is unsorted, output 0. If the subarray a[i], a[i+1], ... a[j] is sorted in non-descending order, output 1. If the subarray a[i], a[i+1], ... a[j] is sorted in non-ascending order, output 2. If the subarray a[i], a[i+1], ... a[j] is sorted in both non-ascending and non-descending order (i.e, if all the elements in the  range are equal), output 3.  Any other input ""v i j"" (v!=0) should be treated as an update, as follows: For each element in the subarray a[i], a[i+1], ... a[j], Sumit has to replace the element a[k] with v-a[k].  Sumit is really tired and does not want to write a program. Can you write a program for Sumit, which responds to Abhishek's instructions?   The first line of input contains 2 space separated integers 'n' and 'q'. The second line contains 'n' integers a[0], a[1], ....., a[n-1]. Each of the next 'q' lines contain 3 integers 'v', 'i', 'j'.   For each query, output a single integer 0, 1, 2 or 3, denoting the answer.  Example  Input: 4 5
3 -2 -5 1
1 1 3
0 0 3
0 0 2
0 2 3
0 0 1 Output: 0
1
2
3 Constraints: 1 <= n <= 100000
1 <= q <= 100000
-5000 <= a[i] <= 5000
-5000 <= v <= 5000  Explanation  Initial array is {3, -2, -5, 1}. After first update, the array will be {3, 3, 6, 0}. Now, from indices '0' to '3', it is unsorted. From indices '0' to '2', it is sorted in non-descending order. From indices '2' to '3', it is sorted in non-ascending order. Between indices '0' and '1', the values are equal. ",-0.208151574289,BTCODE_K,"Sumit specialises in sorting algorithms, and Abhishek decides to test Sumit's coding skills. An array of 'n' numbers a[0], a[1], a[2], ..., a[n-1] is given. Abhishek gives a sequence of inputs of the form ""v i j"". Each input is either a query or an update (query if 'v' is 0, update otherwise).For any input of the form ""0 i j"" ,Sumit's output should be as follows:
If the subarray a[i], a[i+1], ... a[j] is unsorted, output 0.
If the subarray a[i], a[i+1], ... a[j] is sorted in non-descending order, output 1.
If the subarray a[i], a[i+1], ... a[j] is sorted in non-ascending order, output 2.
If the subarray a[i], a[i+1], ... a[j] is sorted in both non-ascending and non-descending order (i.e, if all the elements in the range are equal), output 3.Any other input ""v i j"" (v!=0) should be treated as an update, as follows:
For each element in the subarray a[i], a[i+1], ... a[j], Sumit has to replace the element a[k] with v-a[k].Sumit is really tired and does not want to write a program. Can you write a program for Sumit, which responds to Abhishek's instructions?The first line of input contains 2 space separated integers 'n' and 'q'. The second line contains 'n' integers a[0], a[1], ....., a[n-1]. Each of the next 'q' lines contain 3 integers 'v', 'i', 'j'.For each query, output a single integer 0, 1, 2 or 3, denoting the answer.",4739,2450,1,121,0.634020618557,0,1
46150,-0.292490691536,CHEFFEB,"  Recently Johnny have learned bogosort sorting algorithm. He thought that it is too ineffective. So he decided to improve it. As you may know this algorithm shuffles the sequence randomly until it is sorted. Johnny decided that we don't need to shuffle the whole sequence every time. If after the last shuffle several first elements end up in the right places we will fix them and don't shuffle those elements furthermore. We will do the same for the last elements if they are in the right places. For example, if the initial sequence is (3, 5, 1, 6, 4, 2) and after one shuffle Johnny gets (1, 2, 5, 4, 3, 6) he will fix 1, 2 and 6 and proceed with sorting (5, 4, 3) using the same algorithm. Johnny hopes that this optimization will significantly improve the algorithm. Help him calculate the expected amount of shuffles for the improved algorithm to sort the sequence of the first n natural numbers given that no elements are in the right places initially.   The first line of input file is number t - the number of test cases. Each of the following t lines hold single number n - the number of elements in the sequence. Constraints  1 
2 Output For each test case output the expected amount of shuffles needed for the improved algorithm to sort the sequence of first n natural numbers in the form of irreducible fractions. Example   Input: 3
2
6
10 Output: 2
1826/189
877318/35343 ",-0.178081822208,BOGOSORT,"Recently Johnny have learned bogosort sorting algorithm. He thought that it is too ineffective. So he decided to improve it. As you may know this algorithm shuffles the sequence randomly until it is sorted. Johnny decided that we don't need to shuffle the whole sequence every time. If after the last shuffle several first elements end up in the right places we will fix them and don't shuffle those elements furthermore. We will do the same for the last elements if they are in the right places. For example, if the initial sequence is (3, 5, 1, 6, 4, 2) and after one shuffle Johnny gets (1, 2, 5, 4, 3, 6) he will fix 1, 2 and 6 and proceed with sorting (5, 4, 3) using the same algorithm. Johnny hopes that this optimization will significantly improve the algorithm. Help him calculate the expected amount of shuffles for the improved algorithm to sort the sequence of the first n natural numbers given that no elements are in the right places initially.The first line of input file is number t - the number of test cases. Each of the following t lines hold single number n - the number of elements in the sequence.For each test case output the expected amount of shuffles needed for the improved algorithm to sort the sequence of first n natural numbers in the form of irreducible fractions.",4815,5156,0,19,0.890510948905,8,1
46151,-0.300325089234,CHEFMAR,"  Fat Tony and Fit Tony are playing the square painting game. There are n squares drawn on a plane. The sides of the squares are parallel to the axes. Squares don't intersect, but some of them can be inside others. In his turn a player can choose any square and paint it's internal area black. All squares inside the painted one are also painted black. The player can't paint the squares that were already painted. The loser is the player who can't make a turn. Determine the winner of the game if both players play optimally and Fat Tony's turn is the first. Also if Fat Tony can win the game determine which square he has to paint on his first turn in order to win. If there are many squares which guarantee victory to Fat Tony choose the one with the smallest number.  The first line of input contains t - the number of test cases. Each test case starts with n - the number of squares. Next n lines consist of three integers each x, y, a - the coordinates of the lowest left corner of the square and the length of it's sides. The squares in the input are numbered from 1 to n in the order they are listed. Constraints  1 
1 
The total number of squares over all test cases in one file won't exceed 250000. x, y won't exceed 10 8 in absolute value. a will be positive and less than 10 8 .  For each test case print ""Fat x"", where x - is the number of square which needs to be painted on the first turn in order to win (if there are many such square chose the one with the smallest number), if Fat Tony wins or ""Fit"" if Fit Tony wins. Example   Input: 2
5
0 0 10
15 15 1
1 1 3
5 5 1
14 14 3
2
1 1 1
3 3 1 Output: Fat 2
Fit ",-0.205016420647,SQUAGAME,"Fat Tony and Fit Tony are playing the square painting game. There are n squares drawn on a plane. The sides of the squares are parallel to the axes. Squares don't intersect, but some of them can be inside others. In his turn a player can choose any square and paint it's internal area black. All squares inside the painted one are also painted black. The player can't paint the squares that were already painted. The loser is the player who can't make a turn. Determine the winner of the game if both players play optimally and Fat Tony's turn is the first. Also if Fat Tony can win the game determine which square he has to paint on his first turn in order to win. If there are many squares which guarantee victory to Fat Tony choose the one with the smallest number.The first line of input contains t - the number of test cases. Each test case starts with n - the number of squares. Next n lines consist of three integers each x, y, a - the coordinates of the lowest left corner of the square and the length of it's sides. The squares in the input are numbered from 1 to n in the order they are listed.For each test case print ""Fat x"", where x - is the number of square which needs to be painted on the first turn in order to win (if there are many such square chose the one with the smallest number), if Fat Tony wins or ""Fit"" if Fit Tony wins.",4816,5054,0,67,0.75,7,1
46156,-0.255059680311,ITRIX_C,"    Everyone enjoyed BYTCDE11 . So the Maximum Profit problem is    Chakra is a young and dynamic entrepreneur, who is developing rapidly as a successful hotelier. He owns the Quickbyte chain of restaurants, 'M' of which are fully functional now. He divides each day into 'M' time slots. For each time slot 'j', in every restaurant 'i', there are Aij waiters and Bij customers. Being a quality conscious person, he wants each waiter to handle atmost one customer in a given time slot. Since he is really busy, in a day each restaurant is open only during one of the time slots. Since the hunger and demand for food varies during the day, the price which the customer is willing to pay varies, and is given by Cij for a restaurant 'i' during a time slot 'j'.Given the values of Aij, Bij and Cij, find the maximum profit which Chakra can make in a day . ..  Lets add a constraint  Only one restaurant can be opened in a time slot .Also the number of restaurants and number of time slots will be equal ( M ).    Input Format:  The first line of input contains an integer 't', denoting the number of test cases.  For each testcase, the first line contains an integer 'M'.  Each of the next 'M' lines contains 'M integers. The jth integer on the ith line denotes the value of Aij.  Each of the next 'M' lines contains 'M' integers. The jth integer on the ith line denotes the value of Bij  Each of the next 'M' lines contains 'M' integers. The jth integer on the ith line denotes the value of Cij  Output Format:  For each test case output one value, denoting the maximum profit which Chakra can make in a day.  Example  Input:  2  2  1 2  3 2  3 2  1 2  4 5  3 1  3  1 1 1  1 1 1  1 1 1  1 1 1  1 1 1  1 1 1  1000 33 10  75 1000 1000  100 50 39  Output:  13  2050  Constraints:  t <= 50  1 <= M<= 15  1 <= Aij, Bij <= 5000  0 <= Cij <= 10^9 ",-0.201083939479,BTCODE_D,"Chakra is a young and dynamic entrepreneur, who is developing rapidly as a successful hotelier. He owns the Quickbyte chain of restaurants, 'M' of which are fully functional now. He divides each day into 'N' time slots. For each time slot 'j', in every restaurant 'i', there are Aij waiters and Bij customers. Being a quality conscious person, he wants each waiter to handle atmost one customer in a given time slot. Since he is really busy, in a day each restaurant is open only during one of the time slots. Since the hunger and demand for food varies during the day, the price which the customer is willing to pay varies, and is given by Cij for a restaurant 'i' during a time slot 'j'.Given the values of Aij, Bij and Cij, find the maximum profit which Chakra can make in a day.The first line of input contains an integer 't', denoting the number of test cases.
For each testcase, the first line contains 2 space separated integers 'M' and 'N'.
Each of the next 'M' lines contains 'N' integers. The ith integer on the jth line denotes the value of Aij
Each of the next 'M' lines contains 'N' integers. The ith integer on the jth line denotes the value of Bij
Each of the next 'M' lines contains 'N' integers. The ith integer on the jth line denotes the value of CijFor each test case output one value, denoting the maximum profit which Chakra can make in a day.",4818,159,0,162,0.627118644068,6,1
46173,-0.308753835189,FOOTBALL,"  Eric has a classic football that is made of 32 pieces of leather: 12 black 
	pentagons and 20 white hexagons. Each pentagon adjoins 5 hexagons and each 
	hexagon adjoins 3 pentagons and 3 hexagons. Eric drew a polygon (i.e. a closed 
	line without intersections) along the edges of the pieces. The polygon divided 
	the ball into two parts and Eric painted one of them green.   He is curious if given a description of the polygon you are able to compute the 
	number of black, white and green pieces?  Task  Write a program that:    reads the description of a polygon, computes the number of black, white and green pieces, writes the result.    Contest note: the first accepted solution will be awarded with the original 
	football used for preparing the problem, signed by Eric, the author of the 
	problem!  SPOJ note: the first accepted solution will be awarded some other sphere, 
	without anybody's signatures, sent in PNG format to the author's email address 
	[the offer is invalid, the sphere has already  been presented to Robin Nittka, University of Ulm, Germany].   The input begins with the integer t, the number of test cases. Then t test 
	cases follow.  For each test case, the first line of the input contains one integer n being 
	the number of vertices of the polygon. The second line of the input contains n 
	integers a 1 , a 2 ,..., a n separated by single 
	spaces. Integer a i (equal 1 or 2) is the number of green pieces 
	adjoining the i-th vertex of the polygon. The side of the polygon connecting 
	the n-th and the first vertex always lies between two hexagons.   For each test case the first and only line of the output contains three 
	integers b, w and g - the numbers of black, white and green pieces 
	respectively.  Example  Sample input: 1
21 
1 2 1 2 1 2 1 1 1 2 2 1 1 1 1 2 2 2 1 1 1 Sample output: 11 15 6 ",-0.208208328082,ARFF,"Farhan has a standard football that is made of 32 pieces of leather: 12 black pentagons and 20 white hexagons. Each pentagon adjoins 5 hexagons and each hexagon adjoins 3 pentagons and 3 hexagons. Farhan drew a polygon (i.e. a closed line without intersections) along the edges of the pieces. The polygon divided the ball into two parts and Farhan painted one of them green.



He is curious if given a description of the polygon you are able to compute the number of black, white and green pieces?The input has two test cases.

For each test case, the first line of the input contains one integer n being the number of vertices of the polygon. The second line of the input contains n integers a1, a2,..., an separated by single spaces. Integer ai (equal 1 or 2) is the number of green pieces adjoining the i-th vertex of the polygon. The side of the polygon connecting the n-th and the first vertex always lies between two hexagons.For each test case the first and only line of the output contains three integers b, w and g - the numbers of black, white and green pieces respectively.",4827,423,0,163,0.467005076142,8,1
47026,-0.246049978359,CUTSQRS,"  Two players take it in turns to cut off squares from a rectangle. If the lengths of the sides of the rectangle are a and b (aa as he likes (but at least 1 square), provided the square he is cutting off has at least three of its sides lying on the sides of the rectangle he is trimming. After every cut, the cut off square is removed from the rectangle. When the last part of the rectangle is removed, the game ends and the person who cut it off wins.  Michael, a friend of the players', is taking down a log of the games they are playing in the form of a sequence of consecutive numbers, each number denoting how many squares a player cut off in his turn. Since the game is rather slow, Michael is getting a little bored and he has started writing a detailed analysis of the game in his notebook. For given starting dimensions a and b, he always writes down:    the number of different possible game sequences, the number of different possible game sequences in which the starting player wins, the word 'first' if the starting player can win (provided he does not make any mistakes) regardless of what the other player does, and the word 'second' in all other cases.   After writing for several hours Michael began to worry whether he had enough room left in his notebook for all the information he wanted to write down. Please help him answer this question.  An integer t denoting the number of test cases, (t9) given in separate lines.   For each test case, output the number of characters Michael has to write down (excluding spaces).  Example   Sample input: 2
1 1
2 3 Sample output: 7
8  (In the first case Michael has to write '1 1 first', in the second case '2 1 second'.) ",-0.205641325715,CUTSQRS,"Two players take it in turns to cut off squares from a rectangle. If the lengths of the sides of the rectangle are a and b (a<=b) at the beginning of a player's turn, he may cut off as many squares with a side of length a as he likes (but at least 1 square), provided the square he is cutting off has at least three of its sides lying on the sides of the rectangle he is trimming. After every cut, the cut off square is removed from the rectangle. When the last part of the rectangle is removed, the game ends and the person who cut it off wins.Michael, a friend of the players', is taking down a log of the games they are playing in the form of a sequence of consecutive numbers, each number denoting how many squares a player cut off in his turn. Since the game is rather slow, Michael is getting a little bored and he has started writing a detailed analysis of the game in his notebook. For given starting dimensions a and b, he always writes down:the number of different possible game sequences,
the number of different possible game sequences in which the starting player wins,
the word 'first' if the starting player can win (provided he does not make any mistakes) regardless of what the other player does, and the word 'second' in all other cases.After writing for several hours Michael began to worry whether he had enough room left in his notebook for all the information he wanted to write down. Please help him answer this question.An integer t denoting the number of test cases, (t<=10000) followed by t pairs of integers a, b, (1<=a<=b<=109) given in separate lines.For each test case, output the number of characters Michael has to write down (excluding spaces).",4971,4888,1,21,0.739583333333,0,1
47189,-0.301947613933,YALOP,"  Johnny has reached the final trial on the Path of Doom. This is the hardest one. He entered a large room. The floor of the room is divided into square cells of the same size. There are n rows and m columns of cells. Each cell can be either red or blue. We can consider that the walls of the room are parallel south-north direction and west-east direction and that Johnny has entered the room in the north-western corner. So now he is standing in the north-western cell of the room. The exit is in the south-eastern corner. Johnny can make steps in each of the eight directions moving to adjacent cells. He has to reach the exit. But when he goes out of the room all the cells in the room should be blue, otherwise he fails the trial (If Johnny goes out he can't step back again). The colors of the cells change after each step Johnny makes. When he steps on the next cell this cell and the cells to its north, south, east and west change color: from blue to red and from red to blue. Johnny can't ever step on two cells at once or he fails the trial. Also just jumping on the cell he is standing on now will have no effect on the color of cells. Currently some cells in the room may be red. Johnny made a look over the room and he wonders if it's even possible to pass the trial at all or the trial master is playing a trick on him. Help him find this out.  The first line of input is the number of test cases. Then each of the test cases follows. The test case starts with two number n and m - the sizes of the room. The next line contains number k - the amount of red cells in the room. Next k lines consist of two numbers each x, y - the row number and column number of the following red cell. The rows are numbered from 1 to n from north to south and columns are numbered from 1 to m from west to east. So Johnny starts at cell (1, 1) and have to reach cell (n, m). The coordinates of all of the red cells will be different. The rest of the cells are blue. Constraints  1 
1 9 min(n, m) 
0 
1 
1 Output For each test case print ""YES"" (quotes for clarity) if Johnny can reach the south-eastern cell and go out of the room with all cells being blue and ""NO"" (quotes for clarity) otherwise. Example   Input: 3
2 2
0
2 2
4
1 1
1 2
2 1
2 2
4 4
1
1 1 Output: YES
YES
NO  Explanation  In the first test case Johnny can pass the trial making the following steps: South-east, North, West, East, West, South-east, out. In the second test case: East, West, South, East, out. It's impossible to pass the trial in the third test case. ",-0.201710708597,YALOP,"Johnny has reached the final trial on the Path of Doom. This is the hardest one. He entered a large room. The floor of the room is divided into square cells of the same size. There are n rows and m columns of cells. Each cell can be either red or blue. We can consider that the walls of the room are parallel south-north direction and west-east direction and that Johnny has entered the room in the north-western corner. So now he is standing in the north-western cell of the room. The exit is in the south-eastern corner. Johnny can make steps in each of the eight directions moving to adjacent cells. He has to reach the exit. But when he goes out of the room all the cells in the room should be blue, otherwise he fails the trial (If Johnny goes out he can't step back again). The colors of the cells change after each step Johnny makes. When he steps on the next cell this cell and the cells to its north, south, east and west change color: from blue to red and from red to blue. Johnny can't ever step on two cells at once or he fails the trial. Also just jumping on the cell he is standing on now will have no effect on the color of cells. Currently some cells in the room may be red. Johnny made a look over the room and he wonders if it's even possible to pass the trial at all or the trial master is playing a trick on him. Help him find this out.The first line of input is the number of test cases. Then each of the test cases follows. The test case starts with two number n and m - the sizes of the room. The next line contains number k - the amount of red cells in the room. Next k lines consist of two numbers each x, y - the row number and column number of the following red cell. The rows are numbered from 1 to n from north to south and columns are numbered from 1 to m from west to east. So Johnny starts at cell (1, 1) and have to reach cell (n, m). The coordinates of all of the red cells will be different. The rest of the cells are blue.For each test case print ""YES"" (quotes for clarity) if Johnny can reach the south-eastern cell and go out of the room with all cells being blue and ""NO"" (quotes for clarity) otherwise.",5001,4630,1,77,0.822727272727,0,1
47202,-0.307583752361,BLOCKDRO,"  There is a square pool divided into NxM cells. In some cells of the pool there stone islands. Each island consists of some number of stones. Let's call this number the height of the island. You can jump from the island with coordinated (x,y) to any island with coordinates (x+1,y), (x+2,y), (x-1,y), (x-2,y), (x,y+1), (x,y+2), (x,y-1), (x,y-2). When you jump off the island its height goes down by one. If the height of any island becomes 0 it goes under water and you can't jump on it any more. You start on island with coordinates (sx, sy). The goal is to make all the islands (except the final one) go under water and finish on the island with coordinates (fx, fy) which should have height equal to 1 when you finish on it. You task is to count the number of different ways to achieve the goal.  The first line of input file contains number t - the number of test cases (no more than 5 for each file). Then the description of each test case follows. The first line of each test case contains numbers N and M. The next line contains two coordinates sx and sy of the start cell. After that there are two coordinates fx and fy of the finishing cell. Then N lines follow each consisting of M integers denoting the heights of the islands in each cell of the pool. The height 0 means that there is no island in the cell. Note also that each test case in the official tests will be generated by the following procedure. The dimensions of the pool will be chosen randomly and uniformly: N and M will be from 3 to 8 inclusive. Then the final cell will be chosen randomly: fx will be from 1 to N and fy will be from 1 to M. The height of island in the cell (fx, fy) will be set to 1. Then the number of jumps will chosen randomly from 15 to 25. Then this many random valid jumps will be performed adding one stone to the cell the jumps lands on. The cell on which we land after performing all the jumps will be proclaimed as the initial cell: (sx, sy).  For each test case print the total number of different ways to solve the task. Example   Input: 1
3 3
3 1
3 1
1 0 0
3 1 1
3 1 1 Output: 152 ",-0.209035028638,CM1501,"The first line of input file contains number t - the number of test cases. Then the description of each test case follows. The first line of each test case
contains numbers N and M. The next line contains two coordinates sx and sy of the start cell. After that there are two coordinates fx and fy of the
finishing cell. Then N lines follow each consisting of M integers denoting the heights of the islands in each cell of the pool. The height 0 means that
there is no island in the cell. Note also that each test case in the official tests will be generated by the following procedure. The dimensions of the
pool will be chosen randomly and uniformly: N and M will be from 3 to 8 inclusive. Then the final cell will be chosen randomly: fx will be from 1 to N and
fy will be from 1 to M. The height of island in the cell (fx, fy) will be set to 1. Then the number of jumps will chosen randomly from 15 to 25. Then this
many random valid jumps will be performed adding one stone to the cell the jumps lands on. The cell on which we land after performing all the jumps will be
proclaimed as the initial cell: (sx, sy).For each test case print the total number of different ways to solve the task.",5002,747,0,183,0.530303030303,8,1
47211,-0.303826326742,CLONES,"  A boolean function is a function of the form f: B n -> B, where B = {0, 1} and n is a non-negative integer called the arity of the function. Some Boolean functions are projections: p n k (x 1 , ..., x n ) = x k . And given an m-ary function f, and n-ary functions g 1 , ..., g m , we can construct another n-ary function: h(x 1 , ..., x n ) = f(g1(x 1 , ..., x n ), ..., gm(x 1 , ..., x n )), called their composition. A set of functions closed under composition and containing all projections is called a clone. One trivial clone is a set of all boolean functions. Some of the special clones are:   Z is a set of 0-preserving functions: f(0, ..., 0) = 0;  P is a set of 1-preserving functions: f(1, ..., 1) = 1;  D is a set of self-dual functions: !f(x 1 , ..., x n ) = f(!x 1 , ..., !x n );  A is a set of affine functions: the functions satisfying that if f(a 1 , ..., c, ..., a n ) = f(a 1 , ..., d, ..., a n ) then f(b 1 , ..., c, ..., b n ) = f(b 1 , ..., d, ..., b n ), where c and d are at some position i. This should hold for every valid i, a 1 , ..., a n , b 1 , ... b n , c and d.   Now we are interested how many n-ary functions are there in some combinations of mentioned above sets. For example, for n = 2, there are exactly 8 functions in Z, 4 functions in the intersection of Z and P, 8 function in the complement of A and so on.   The first line of the input file contains n - the arity of the boolean functions we are looking at. The second line contains the q - number of queries. Each of the next q lines will describe a query. The query is a set expression. The expression will contain the following characters: 'Z', 'P', 'D', 'A' denoting the sets, described above; 'v' - which is set union; '^' - which is set intersection; '!' which is complement; '\' which is set difference; and also '(' and ')' to define operations priority. Operations in brackets have higher priority. Otherwise the '!' operation has the higher priority and 'v', '^' and '\' are of the same priority. It is guaranteed that the expression will be correct. See samples for some examples of set expressions.  Constraints  1 
1 
The length of each expression won't exceed 100 characters.   For each query in the input print how many n-ary function are in the set described by the according set expression modulo 1000003.  Example   Input: 2
6
Z
Z^P
!A
!(AvP)^D
AvZvP\A
!A^(Z\(Dv!P)) Output: 8
4
8
0
6
2 ",-0.199644526944,CLONES,"A boolean function is a function of the form f: Bn -> B, where B = {0, 1} and n is a non-negative integer called the arity of the function. Some Boolean functions are projections: pnk(x1, ..., xn) = xk. And given an m-ary function f, and n-ary functions g1, ..., gm, we can construct another n-ary function: h(x1, ..., xn) = f(g1(x1, ..., xn), ..., gm(x1, ..., xn)), called their composition. A set of functions closed under composition and containing all projections is called a clone. One trivial clone is a set of all boolean functions. Some of the special clones are:Z is a set of 0-preserving functions: f(0, ..., 0) = 0;
P is a set of 1-preserving functions: f(1, ..., 1) = 1;
D is a set of self-dual functions: !f(x1, ..., xn) = f(!x1, ..., !xn);
A is a set of affine functions: the functions satisfying that if f(a1, ..., c, ..., an) = f(a1, ..., d, ..., an) then f(b1, ..., c, ..., bn) = f(b1, ..., d, ..., bn), where c and d are at some position i. This should hold for every valid i, a1, ..., an, b1, ... bn, c and d.Now we are interested how many n-ary functions are there in some combinations of mentioned above sets. For example, for n = 2, there are exactly 8 functions in Z, 4 functions in the intersection of Z and P, 8 function in the complement of A and so on.The first line of the input file contains n - the arity of the boolean functions we are looking at. The second line contains the q - number of queries. Each of the next q lines will describe a query. The query is a set expression. The expression will contain the following characters: 'Z', 'P', 'D', 'A' denoting the sets, described above; 'v' - which is set union; '^' - which is set intersection; '!' which is complement; '\' which is set difference; and also '(' and ')' to define operations priority. Operations in brackets have higher priority. Otherwise the '!' operation has the higher priority and 'v', '^' and '\' are of the same priority. It is guaranteed that the expression will be correct. See samples for some examples of set expressions.For each query in the input print how many n-ary function are in the set described by the according set expression modulo 1000003.",5003,54,1,101,0.706349206349,0,1
47214,-0.307583752361,SHORTCIR,"  Short circuit evaluation of Boolean expressions denotes the semantic in which the second argument of some Boolean operator is not evaluated if the value 

of the first argument is enough to have the result. This technique is used in many programming languages to optimize the evaluation of Boolean expressions. 

Specifically for ""A and B"", if A is false we know that the whole expression is false and we don't need to evaluate B. For ""A or B"", if A is true we know the 

result to be true. Now having that those Boolean operations are commutative we may actually evaluate B first and not evaluate A in case B gives us the 

result. Moving the idea further if we have ""A1 or A2 or...or An"" we can evaluate the variables in any order and as soon as we have one of them as true we 

know that the whole expression is true. We can do similarly for and operation. Now let's consider some complex Boolean expression. We will fix the order in 

which we will evaluate the variables of the expression. Then we evaluate those variables in that order and we won't evaluate the variables that give us no 

new information about the value of the whole expression in the process. For example, assume we have ""A and B or C"" and we fix the order of evaluation B, A, 

C. First we evaluate B, if it's false we don't have to evaluate A and only evaluate C. However if B is true we will need to evaluate A. If A is true we know 

the expression is true and won't evaluate C, otherwise we evaluate C to have the value of the expression. Now your task is having some complex Boolean 

expression containing and, or, not operations and for each variable having the probability that this variable is true, you need to find the order of 

evaluation for which the expected number of evaluations in the process described above will be minimal.  The first line of input file contains number t - the amount of test cases. Then t test cases follow. The first line of each test case will contain the 

Boolean expression. The expression will be valid and will consist of and, or, not operations, brackets and variable names. All the variable names in one 

expression will be distinct. Then for each variable present in the expression there will be a line in the input in the format s p, where s - the name of the 

variable and p - is the probability that the variable will be true. The names of the variables will consist of small Latin letters only. Constraints  1 
0 
The length of the expression won't exceed 30000 characters. There will be no more than 1000 variable in the expression. The length of the variable names won't exceed 5 characters.  Also the expression will be in the form of either conjunctive or disjunctive normal form.   For each test case output the expected number of evaluations for the optimal order of evaluation of variables for short circuit evaluation process 

described above. Output the answer with 6 digits after the dot. Example   Input: 3
(a and b) or c
a 0.3
b 0.4
c 0.5
(a or b) and (not d or c)
a 0.5
b 0.3
c 0.8
d 0.25
ab or bc or cd
ab 0.3
bc 0.1
cd 0.2 Output: 1.650000
2.280000
2.260000  Explanation  In the first test case the best order is c, a, b. ",-0.202401842286,SHORTCIR,"Short circuit evaluation of Boolean expressions denotes the semantic in which the second argument of some Boolean operator is not evaluated if the value of the first argument is enough to have the result. This technique is used in many programming languages to optimize the evaluation of Boolean expressions. Specifically for ""A and B"", if A is false we know that the whole expression is false and we don't need to evaluate B. For ""A or B"", if A is true we know the result to be true. Now having that those Boolean operations are commutative we may actually evaluate B first and not evaluate A in case B gives us the result. Moving the idea further if we have ""A1 or A2 or...or An"" we can evaluate the variables in any order and as soon as we have one of them as true we know that the whole expression is true. We can do similarly for and operation. Now let's consider some complex Boolean expression. We will fix the order in which we will evaluate the variables of the expression. Then we evaluate those variables in that order and we won't evaluate the variables that give us no new information about the value of the whole expression in the process. For example, assume we have ""A and B or C"" and we fix the order of evaluation B, A, C. First we evaluate B, if it's false we don't have to evaluate A and only evaluate C. However if B is true we will need to evaluate A. If A is true we know the expression is true and won't evaluate C, otherwise we evaluate C to have the value of the expression. Now your task is having some complex Boolean expression containing and, or, not operations and for each variable having the probability that this variable is true, you need to find the order of evaluation for which the expected number of evaluations in the process described above will be minimal.The first line of input file contains number t - the amount of test cases. Then t test cases follow. The first line of each test case will contain the Boolean expression. The expression will be valid and will consist of and, or, not operations, brackets and variable names. All the variable names in one expression will be distinct. Then for each variable present in the expression there will be a line in the input in the format s p, where s - the name of the variable and p - is the probability that the variable will be true. The names of the variables will consist of small Latin letters only.For each test case output the expected number of evaluations for the optimal order of evaluation of variables for short circuit evaluation process described above. Output the answer with 6 digits after the dot.",5004,4532,1,105,0.713114754098,0,1
47222,-0.310401821575,GENETICS,"  Genetic engineering is fun. The scientists have gathered several DNAs and want to create something new out of those. Each DNAs can be represented as a sequence of bases A, G, T, C. Let DNA[a..b] be the subsequence of DNA starting from index a finishing in b inclusive, and DNA[a..] be the subsequence of DNA starting from index a to the end. Scientist can perform the following operations on the DNAs:   cross operation  they take DNA1 and DNA2 and numbers k1 and k2. Then two new DNAs are created: DNA3 = DNA1[1..k1]+DNA2[k2+1..] and DNA4 = DNA2[1..k2]+DNA1[k1+1..].  mutate operation  they take a DNA, number k and one of the bases. Then they replace the base in position k in DNA with that base.  also they need to know certain characteristics of those DNAs. So they can perform count operation  they take DNA and numbers k1 and k2 (k1  The initial DNAs are numbered from 1 to n, where n is the amount of those DNAs. The new DNAs created in the cross operations are numbered with consecutive integers. You are to write a program to help scientists perform those operations.   The first line of input file contains number n  the amount of initial DNAs. Each of the following n lines contains the description of each DNA. The next line contains number q  the amount of operations to perform. The next q lines contain the description of each operation in the following form:   CROSS id1 id2 k1 k2  MUTATE id k m  COUNT id k1 k2   Constraints  1 
1 
The length of each initial DNA does not exceed 30000. The length of any DNA formed in cross operation wont exceed 2000000000. Total amount of different DNAs wont exceed 10000. It is guaranteed that all operations are correct.  For each count operation print four integers: the number of each of the bases in the given subsequence of the given DNA. Example   Input: 2
CTCGC
TGCGG
5
MUTATE 1 2 A
COUNT 2 2 4
MUTATE 2 1 G
CROSS 2 1 1 5
COUNT 4 3 6 Output: 0 2 0 1
0 2 0 2 ",-0.204942205915,GENETICS,"Genetic engineering is fun. The scientists have gathered several DNAs and want to create something new out of those. Each DNAs can be represented as a sequence of bases A, G, T, C. Let DNA[a..b] be the subsequence of DNA starting from index a finishing in b inclusive, and DNA[a..] be the subsequence of DNA starting from index a to the end. Scientist can perform the following operations on the DNAs:cross operation – they take DNA1 and DNA2 and numbers k1 and k2. Then two new DNAs are created: DNA3 = DNA1[1..k1]+DNA2[k2+1..] and DNA4 = DNA2[1..k2]+DNA1[k1+1..].
mutate operation – they take a DNA, number k and one of the bases. Then they replace the base in position k in DNA with that base.
also they need to know certain characteristics of those DNAs. So they can perform count operation – they take DNA and numbers k1 and k2 (k1 <= k2). This operation should return the number of A, G, T, C bases in DNA[k1..k2].The initial DNAs are numbered from 1 to n, where n is the amount of those DNAs. The new DNAs created in the cross operations are numbered with consecutive integers. You are to write a program to help scientists perform those operations.The first line of input file contains number n – the amount of initial DNAs. Each of the following n lines contains the description of each DNA. The next line contains number q – the amount of operations to perform. The next q lines contain the description of each operation in the following form:CROSS id1 id2 k1 k2
MUTATE id k m
COUNT id k1 k2For each count operation print four integers: the number of each of the bases in the given subsequence of the given DNA.",5005,4666,1,81,0.661202185792,0,1
47235,-0.294432762695,SWARM,"  There is a regular n-gon. Some points are marked on each of its sides. There are x 1 point marked on the first side, x 2  on the second, , x n  on the nth. The marked points do not coincide with the vertices of the n-gon. You can choose no more than one of the marked points from each side and form a convex non-degenerate polygon by connecting all those points with lines. Now your task is to find the number of different k-gons that can be formed that way.  The first line of input file contains positive integer t  the amount of test cases. Next t lines contain six integers each: n, k, a, b, c, m. Here n is the number of sides of the initial n-gon. The amount of marked points on the first side of this n-gon is x 1 = a, the amount of the marked points on the following sides is x i = (b*x i-1 + c) mod m, for i > 1. Constraints  1 
3 9 3 
1 6 0 Output For each test case output the number of k-gons that can be formed modulo 1000000007. Example   Input: 2
4 3 1 2 2 191
10 5 1 113 157 999991 Output: 1228
328836201 ",-0.205447825111,SWARM,"There is a regular n-gon. Some points are marked on each of its sides. There are x1 point marked on the first side, x2 – on the second, …, xn – on the nth. The marked points do not coincide with the vertices of the n-gon. You can choose no more than one of the marked points from each side and form a convex non-degenerate polygon by connecting all those points with lines. Now your task is to find the number of different k-gons that can be formed that way.The first line of input file contains positive integer t – the amount of test cases. Next t lines contain six integers each: n, k, a, b, c, m. Here n is the number of sides of the initial n-gon. The amount of marked points on the first side of this n-gon is x1 = a, the amount of the marked points on the following sides is xi = (b*xi-1 + c) mod m, for i > 1.For each test case output the number of k-gons that can be formed modulo 1000000007.",5006,5059,1,39,0.723880597015,0,1
47245,2.73631249524,STPAR,"  For sure, the love mobiles will roll again on this summer's street parade. Each year, the organisers decide on a fixed order for the decorated trucks. Experience taught them to keep free a side street to be able to bring the trucks into order. The side street is so narrow that no two cars can pass each other. Thus, the love mobile that enters the side street last must necessarily leave the side street first. Because the trucks and the ravers move up closely, a truck cannot drive back and re-enter the side street or the approach street. You are given the order in which the love mobiles arrive. Write a program that decides if the love mobiles can be brought into the order that the organisers want them to be.   There are several test cases.
The first line of each test case contains a single number n, the number of love mobiles.
The second line contains the numbers 1 to n in an arbitrary order. All the numbers are separated by single spaces. These numbers indicate the order in which the trucks arrive in the approach street.
No more than 1000 love mobiles participate in the street parade. Input ends with number 0.   For each test case your program has to output a line containing a single word "" yes "" if the love mobiles can be re-ordered with the help of the side street, and a single word "" no "" in the opposite case.  Example   Sample input: 5
5 1 2 4 3 
0 Sample output: yes  Illustration  The sample input reflects the following situation:   The five trucks can be re-ordered in the following way:      ",-0.205453061891,PAR,"For sure, the love mobiles will roll again on this summer's street parade. Each year, the organisers decide on a fixed order for the decorated trucks. Experience taught them to keep free a side street to be able to bring the trucks into order. The side street is so narrow that no two cars can pass each other. Thus, the love mobile that enters the side street last must necessarily leave the side street first. Because the trucks and the ravers move up closely, a truck cannot drive back and re-enter the side street or the approach street. You are given the order in which the love mobiles arrive. Write a program that decides if the love mobiles can be brought into the order that the organisers want them to be.The first line of the input contains a number T the number of test cases. The first line of each test case contains a single number n, the number of love mobiles. The second line contains the numbers 1 to n in an arbitrary order. All the numbers are separated by single spaces. These numbers indicate the order in which the trucks arrive in the approach street. No more than 1000 love mobiles participate in the street parade.For each test case your program has to output a line containing a single word yes if the love mobiles can be re-ordered with the help of the side street, and a single word no in the opposite case.",5013,3115,0,47,0.785714285714,2,1
48580,1.742497415,CODESPTB,"  Insertion Sort is a classical sorting technique. One variant of insertion sort works as follows when sorting an array a[1..N] in non-descending order:  for i  1 and a[j] The pseudocode is simple to follow. In the ith step, element a[i] is inserted in the sorted sequence a[1..i - 1]. This is done by moving a[i] backward by swapping it with the previous element until it ends up in it's right position.  As you probably already know, the algorithm can be really slow. To study this more, you want to find out the number of times the swap operation is performed when sorting an array.   The first line contains the number of test cases T. T test cases follow. The first line for each case contains N, the number of elements to be sorted. The next line contains N integers a[1],a[2]...,a[N].   Output T lines, containing the required answer for each test case.  Constraints  1 
1 
1 Example  Sample Input: 2
5
1 1 1 2 2
5
2 1 3 1 2 Sample Output: 0
4 ",-0.20545619665,SOPC03,"You all must have used insertion sort somewhere in your life. It is a classical sorting technique. One variant of insertion sort works as follows when sorting an array a[1...N] in non-descending order:

for i = 2 to N
j = i
while j > 1 and a[j] < a[j - 1]
swap a[j] and a[j - 1]
j = j-1

The pseudocode is simple to follow. In the ith step, element a[i] is inserted in the sorted sequence a[1...i-1]. This is done by moving a[i] backward by swapping it with the previous element until it ends up in it's right position.
As you probably already know, the algorithm can be really slow. To study this more, you want to find out the number of times the swap operation is performed when sorting an array.The first line contains the number of test cases T. T test cases follow. The first line for each case contains N, the number of elements to be sorted. The next line contains N integers a[1],a[2],...,a[N].Output T lines, containing the required answer for each test case.",5088,3016,0,10,0.666666666667,7,1
48581,-0.295437323883,CODESPTC,"  Here is an algorithm for shuffling N cards:   The cards are divided into K equal piles, where K is a factor of N.  The bottom N / K cards belong to pile 1 in the same order (so the bottom card of the initial pile is the bottom card of pile 1).  The next N / K cards from the bottom belong to pile 2, and so on.  Now the top card of the shuffled pile is the top card of pile 1. The next card is the top card of pile 2,..., the K-th card of the shuffled pile is the top card of pile K. Then (K + 1)-th card is the card which is now at the top of pile 1, the (K + 2)-nd is the card which is now at the top of pile 2 and so on.   For example, if N = 6 and K = 3, the order of a deck of cards ""ABCDEF"" (top to bottom) when shuffled once would change to ""ECAFDB"".  Given N and K, what is the least number of shuffles needed after which the pile is restored to its original order?   The first line contains the number of test cases T. The next T lines contain two integers each N and K.   Output T lines, one for each test case containing the minimum number of shuffles needed. If the deck never comes back to its original order, output -1.  Constraints  T 
2 
K will be a factor of N.  Example  Sample Input: 3
6 3
4 2
5 5 Sample Output: 6
4
2 ",-0.208319262228,SOPC02,"Here is an algorithm for shuffling N cards:
1) The cards are divided into K equal piles.
2) The bottom N/K cards belong to pile 1 in the same order (so the bottom card of the initial pile is the bottom card of pile 1).
3) The next N/K cards from the bottom belong to pile 2, and so on.
4) Now the top card of the shuffled pile is the top card of pile 1. The next card is the top card of pile 2,..., the Kth card of the shuffled pile is the top card of pile K. Then (K+1)th card is the card which is now at the top of pile 1, the (K+2)th is the card which is now at the top of pile 2 and so on.
Given N and K, what is the least number of shuffles needed after which the pile is restored to its original order?The first line contains the number of test cases T. The next T lines contain two integers each N and K.Output T lines, one for each test case containing the minimum number of shuffles needed. If the deck never comes back to its original order, output -1.",5089,2208,0,85,0.583941605839,7,1
48625,-0.317636039449,CODESPTI,"    The country of Byteland contains of N cities and N - 1 bidirectional roads between them such that there a path between any two cities. The roads in Byteland were built long ago and now they are in need of repair. You have been hired to repair all the roads. You intend to do this by dispatching robots on some of the roads. Each robot will repair the road he is currently on and then move to one of the adjacent unrepaired roads. After repairing that, he will move to another adjacent unrepaired road, repair that and so on. Two roads are adjacent if they have the same city at one of their endpoints. For the process to be efficient, no two robots will can ever repair the same road, and no road can be visited twice. What is the least number of robots needed to accomplish the task?  Input:  The first line contains the number of test cases T. T test cases follow. The first line contains N, the number of cities in Byteland. The cities are numbered 0..N - 1. The following N - 1 lines contain the description of the roads. The ith line contains two integers a_i and b_i, meaning that there is a road connecting cities with numbers a_i and b_i.  Output:  Output T lines, one corresponding to each test case containing the required answer for that test case.  Constraints:  1 <= T <= 20  1 <= N <= 10000  0 <= a_i,b_i < N  Sample Input:  3  4  0 1  0 2  0 3  6  0 1  1 2  2 3  2 4  4 5  7  0 1  1 2  2 3  2 4  4 5  3 6  Sample Output:  1  1  2  Explanation:  For the first case, one robot is enough to repair all roads: (0,1) -> (0,2) -> (0,3)  For the second case, one robot is again enough: (0,1) -> (1,2) -> (2,3) -> (2,4) -> (4,5)  The the third case, there is no way to repair all the roads with one robot and at least two are needed.    The country of Byteland contains of N cities and N - 1 bidirectional roads between them such that there a path between any two cities. The roads in Byteland were built long ago and now they are in need of repair. You have been hired to repair all the roads. You intend to do this by dispatching robots on some of the roads. Each robot will repair the road he is currently on and then move to one of the adjacent unrepaired roads. After repairing that, he will move to another adjacent unrepaired road, repair that and so on. Two roads are adjacent if they have the same city at one of their endpoints. For the process to be efficient, no two robots will can ever repair the same road, and no road can be visited twice. What is the least number of robots needed to accomplish the task?    Input:  The first line contains the number of test cases T. T test cases follow. The first line contains N, the number of cities in Byteland. The cities are numbered 0..N - 1. The following N - 1 lines contain the description of the roads. The ith line contains two integers a_i and b_i, meaning that there is a road connecting cities with numbers a_i and b_i.    Output:  Output T lines, one corresponding to each test case containing the required answer for that test case.    Constraints:  1 <= T <= 20  1 <= N <= 10000  0 <= a_i,b_i < N    Sample Input:  3  4  0 1  0 2  0 3  6  0 1  1 2  2 3  2 4  4 5  7  0 1  1 2  2 3  2 4  4 5  3 6    Sample Output:  1  1  2    Explanation:  For the first case, one robot is enough to repair all roads: (0,1) -> (0,2) -> (0,3)  For the second case, one robot is again enough: (0,1) -> (1,2) -> (2,3) -> (2,4) -> (4,5)  The the third case, there is no way to repair all the roads with one robot and at least two are needed.     ",-0.209035028638,SOPC01,"The country of Codeland contains N cities and N - 1 bidirectional roads between them such that there is a path between any two cities. The roads in Codeland were built long ago and now they are in need of repair. You have been hired to repair all the roads. You intend to do this by dispatching robots on some of the roads. Each robot will repair the road he is currently on and then move to one of the adjacent unrepaired roads. After repairing that, he will move to another adjacent unrepaired road, repair that and so on. Two roads are adjacent if they have the same city at one of their endpoints. For the process to be efficient, no two robots can ever repair the same road, and no road can be visited twice. What is the least number of robots needed to accomplish the task?The first line contains the number of test cases T. T test cases follow. The first line of each testcase contains N, the number of cities in Codeland. The cities are numbered 0..N - 1. The following N - 1 lines contain the description of the roads. The ith line contains two integers ai and bi, meaning that there is a road connecting cities with numbers ai and bi.Output T lines, one corresponding to each test case containing the required answer for that test case.",5099,1565,0,556,0.706586826347,7,1
